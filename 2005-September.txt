From nobody at sheep.berlios.de  Thu Sep  1 02:15:15 2005
From: nobody at sheep.berlios.de (ivop)
Date: Thu, 1 Sep 2005 02:15:15 +0200
Subject: [fpm-cvslog] fpm/docs/xml default.css,1.3,1.4
Message-ID: <200509010015.j810F5612815@bat.berlios.de>

Update of /cvsroot/fpm/fpm/docs/xml
In directory sheep:/tmp/cvs-serv16045

Modified Files:
	default.css 
Log Message:
Next chapter and skeleton of chapter four plus misc. spelling and lay-out fixes



Index: default.css
===================================================================
RCS file: /cvsroot/fpm/fpm/docs/xml/default.css,v
retrieving revision 1.3
retrieving revision 1.4
diff -u -d -r1.3 -r1.4
--- default.css	31 Aug 2005 01:58:09 -0000	1.3
+++ default.css	1 Sep 2005 00:14:47 -0000	1.4
@@ -11,34 +11,36 @@
 }
 
 div.table table, div.informaltable table {
-	background: #333366;
+	background: #336633;
 	border-collapse: separate;
-	border: solid 1px #333366;
+	border: solid 1px #008000;
 	border-spacing: 1px;
 }
 
 div.table th, div.informaltable th {
 	color: white;
-	background: #4488cc;
+	background: #44cc88;
 	border: 0px;
 	padding: 2px;
 }
 
 div.table td, div.informaltable td {
-	background: #fffff8;
+	background: #ffffff;
 	border: 0px;
-	padding: 2px;
+	padding: 8px;
+    text-align: right;
 }
 
 
 pre.screen {
 	padding: 4px;
 	background: #e0e0e0;
+    color: #000000;
 	font-size: 10pt;
 }
 
 pre.programlisting {
 	padding: 4px;
-	background: #e0e0e0;
+	background: #f0fff0;
 }
 



From nobody at sheep.berlios.de  Thu Sep  1 02:15:16 2005
From: nobody at sheep.berlios.de (ivop)
Date: Thu, 1 Sep 2005 02:15:16 +0200
Subject: [fpm-cvslog] fpm/docs/xml/en advanced.xml,NONE,1.1 usage.xml,NONE,1.1 documentation.xml,1.3,1.4 gettingstarted.xml,1.3,1.4 introduction.xml,1.3,1.4
Message-ID: <200509010015.j810F6612817@bat.berlios.de>

Update of /cvsroot/fpm/fpm/docs/xml/en
In directory sheep:/tmp/cvs-serv16045/en

Modified Files:
	documentation.xml gettingstarted.xml introduction.xml 
Added Files:
	advanced.xml usage.xml 
Log Message:
Next chapter and skeleton of chapter four plus misc. spelling and lay-out fixes



--- NEW FILE: advanced.xml ---
<?xml version="1.0" encoding="iso-8859-1"?>

<!-- $Revision: 1.1 $ -->

<chapter id="advanced">
    <title> Advanced </title>

    <sect1 id="look-up-tables">
        <title> Look Up Tables </title>

        <para>
        </para>
    </sect1>

    <sect1 id="precision">
        <title> Precision </title>

        <para>
        </para>
    </sect1>

    <sect1 id="benchmarks">
        <title> Benchmarks </title>

        <para>
        </para>
    </sect1>


</chapter>


--- NEW FILE: usage.xml ---
<?xml version="1.0" encoding="iso-8859-1"?>

<!-- $Revision: 1.1 $ -->

<chapter id="usage">
    <title> Usage </title>

    <para>
        First, your application needs to include the Fixed Point Math Macro
        Library header file:

        <programlisting>
        #include &lt;fixedpointmath.h&gt;</programlisting>

        After that, you will be able to use its types and functions. There's
        no need to link to any special libraries.
    </para>

    <sect1 id="basic-types">
        <title> Basic types </title>
        <para>
            There are four basic fixed point types. They differ in the amount
            of memory they occupy and the amount of precision they offer.
            All four come in both signed and unsigned variants, which sums
            up to a total of eight types.

            <table> <title> Basic types </title>
                <tgroup cols="6">
                    <thead>
                        <row> 
                            <entry> type </entry>
                            <entry> total </entry>
                            <entry> fraction </entry>
                            <entry> min </entry>
                            <entry> max </entry>
                            <entry> precision </entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry> fp8p8_t </entry>
                            <entry> 16 </entry>
                            <entry> 8 </entry>
                            <entry> -128.999... </entry>
                            <entry> 127.999... </entry>
                            <entry> 0.00390625 </entry>
                        </row>
                        <row>
                            <entry> fp24p8_t </entry>
                            <entry> 32 </entry>
                            <entry> 8 </entry>
                            <entry> -8388608.999... </entry>
                            <entry> 8388607.999... </entry>
                            <entry> 0.00390625 </entry>
                        </row>
                        <row>
                            <entry> fp16p16_t </entry>
                            <entry> 32 </entry>
                            <entry> 16 </entry>
                            <entry> -32768.999... </entry>
                            <entry> 32767.999... </entry>
                            <entry> 0.00001526 </entry>
                        </row>
                        <row>
                            <entry> fp8p24_t </entry>
                            <entry> 32 </entry>
                            <entry> 24 </entry>
                            <entry> -128.999... </entry>
                            <entry> 127.999... </entry>
                            <entry> 0.00000006 </entry>
                        </row>
                        <row>
                            <entry> ufp8p8_t </entry>
                            <entry> 16 </entry>
                            <entry> 8 </entry>
                            <entry> 0.0 </entry>
                            <entry> 255.999... </entry>
                            <entry> 0.00390625 </entry>
                        </row>
                        <row>
                            <entry> ufp24p8_t </entry>
                            <entry> 32 </entry>
                            <entry> 8 </entry>
                            <entry> 0.0 </entry>
                            <entry> 16777215.999... </entry>
                            <entry> 0.00390625 </entry>
                        </row>
                        <row>
                            <entry> ufp16p16_t </entry>
                            <entry> 32 </entry>
                            <entry> 16 </entry>
                            <entry> 0.0 </entry>
                            <entry> 65535.999... </entry>
                            <entry> 0.00001526 </entry>
                        </row>
                        <row>
                            <entry> ufp8p24_t </entry>
                            <entry> 32 </entry>
                            <entry> 24 </entry>
                            <entry> 0.0 </entry>
                            <entry> 255.999... </entry>
                            <entry> 0.00000006 </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </para>

        <para>
            Declaring variables of certain types is as simple as with any
            type.

            <programlisting>
                ufp16p16_t x, y;
                fp16p16_t matrix[16][16]; </programlisting>
        </para>
    </sect1>

    <sect1 id="type-conversion">
        <title> Initialization and type conversion </title>

        <para>
            To initialize your variables, you need to convert a value from
            another type and assign it to your fixed point variable. For
            each fixed point type, there are several macro's that convert
            to and from other types.

            <table> <title> Type conversion to fp8p8_t </title>
                <tgroup cols="2">
                    <thead>
                        <row> 
                            <entry> from </entry>
                            <entry> fp8p8_t </entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry> int </entry>
                            <entry> itofp8p8(x) </entry>
                        </row>
                        <row>
                            <entry> float </entry>
                            <entry> ftofp8p8(x) </entry>
                        </row>
                        <row>
                            <entry> double </entry>
                            <entry> dtofp8p8(x) </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </para>

        <para>
            Similar macro's exist for all other fixed point types.

            <programlisting>
        int        a;
        ufp16p16_t b;

        a = 97;
        b = itoufp16p16(a);

        [...]

        b = itoufp16p16(123); </programlisting>
        </para>

        <para>
            There are also macro's that convert your fixed point
            variables back to standard types.

            <table> <title> Type conversion from fp8p8_t </title>
                <tgroup cols="4">
                    <thead>
                        <row> 
                            <entry> from </entry>
                            <entry> int </entry>
                            <entry> float </entry>
                            <entry> double </entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry> fp8p8_t </entry>
                            <entry> fp8p8toi(x) </entry>
                            <entry> fp8p8tof(x) </entry>
                            <entry> fp8p8tod(x) </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </para>
        <para>
            Again, similar macro's exist for all other fixed point types.

            <programlisting>
        fp16p16_t a;
        float     f;

        [...]

        f = fp16p16tof(a); </programlisting>
        </para>
        <para>
            Finally, there are macro's to convert between fixed point types.
            Their names are structured analog to the above macro's. Note that
            there are no explicit macro's to convert between signed and
            unsigned types. If you want to do that, you have to know exactly
            what you are doing will work correctly.

            <programlisting>
        fp24p8_t   a;
        fp8p8_t    b;
        ufp16p16_t c

        [...]

        a = fp8p8tofp24p8(b);

        c = ufp8p8toufp16p16(b);    /* incorrect if b is negative */ </programlisting>
        </para>
    </sect1>

    <sect1 id="doing-calculations">
        <title> Doing calculations </title>

        <para>
            For addition and substraction, all fixed point variables can be
            treated as if they were normal variables.

            <programlisting>
        fp16p16_t x, y, z;

        [...]

        z = x + y;
        z = x - y;</programlisting>
        </para>

        <para>
            Multiplication and division are a bit more complicated. Using
            the basic '*' and '/' operators will not work with fixed point
            variables. Since C doesn't support overloading of operators, there
            are multiple macro's that do the job. One for each type.
            Macro's for multiplication start with 'mul' and those for
            division start with div. All macro's take two arguments.
        </para>
        <para>
            mul...(x, y) = x * y
        </para>
        <para>
            div...(x, y) = x / y
        </para>
        <para>
            Both arguments have to be of the same type and can be other
            variables, constants or the same variable.

            <programlisting>
        fp8p8_t   x, y, z;
        ufp8p24_t a;

        [...]

        z = mulfp8p8(x, y);
        x = mulfp8p8(x, itofp8p8(15));
        y = divfp8p8(x, z);
    
        a = mulufp8p24(a, a);</programlisting>
        </para>
    </sect1>

    <sect1 id="sqrt-ln-exp-and-pow">
        <title> sqrt, ln, exp and pow </title>

        <para>
            For all fixed point types, the macro library implements
            sqrt, ln, exp and pow.

            <table> <title> Math macro's for ufp16p16_t </title>
                <tgroup cols="2">
                    <thead>
                        <row> 
                            <entry> </entry>
                            <entry> description </entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry> sqrtufp16p16(x) </entry>
                            <entry> calculates the square root of x
                                    for x &gt;= 0 </entry>
                        </row>
                        <row>
                            <entry> lnufp16p16(x) </entry>
                            <entry> calculates the natural logarithm of x
                                    for x &gt;= 0 </entry>
                        </row>
                        <row>
                            <entry> expufp16p16(x) </entry>
                            <entry> calculates e to the power of x
                                    for x &gt;= 1 </entry>
                        </row>
                        <row>
                            <entry> powufp16p16(x, y) </entry>
                            <entry> calculates x to the power of y
                                    for y &gt;= 1 </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </para>
        <para>
            For all seven other types, similar macro's exist.
            Also, be aware that the exp and pow macro's easily overflow your
            variables!

            <programlisting>
        fp24p8_t a;

        a = ftofp24p8(2.37);

        a = sqrtfp24p8(a); </programlisting>
        </para>
    </sect1>
</chapter>


Index: documentation.xml
===================================================================
RCS file: /cvsroot/fpm/fpm/docs/xml/en/documentation.xml,v
retrieving revision 1.3
retrieving revision 1.4
diff -u -d -r1.3 -r1.4
--- documentation.xml	31 Aug 2005 02:01:33 -0000	1.3
+++ documentation.xml	1 Sep 2005 00:14:48 -0000	1.4
@@ -39,6 +39,8 @@
 
 &introduction.xml;
 &gettingstarted.xml;
+&usage.xml;
+&advanced.xml;
 
 &license.xml;
 

Index: gettingstarted.xml
===================================================================
RCS file: /cvsroot/fpm/fpm/docs/xml/en/gettingstarted.xml,v
retrieving revision 1.3
retrieving revision 1.4
diff -u -d -r1.3 -r1.4
--- gettingstarted.xml	31 Aug 2005 02:02:58 -0000	1.3
+++ gettingstarted.xml	1 Sep 2005 00:14:48 -0000	1.4
@@ -47,10 +47,9 @@
             Most of the time, the following will work fine:
 
             <screen>
-                ./configure
-                make
-                make install
-            </screen>
+        ./configure
+        make
+        make install </screen>
 
             Configure will figure out what tools are available on your system
             and how to use them.
@@ -64,8 +63,7 @@
             the build and installation process, you should run:
 
             <screen>
-                ./configure --help
-            </screen>
+        ./configure --help </screen>
 
             The next section will describe the
             <application>configure</application>
@@ -85,19 +83,16 @@
             <application>configure</application>.
 
             <screen>
-                CC=/usr/local/intel/bin/icc ./configure
-            </screen>
+        CC=/usr/local/intel/bin/icc ./configure </screen>
             <screen>
-                ./configure --cc=tcc
-            </screen>
+        ./configure --cc=tcc </screen>
         </para>
         <para>
             You can override the default CFLAGS by setting the environment
             variable of the same name.
 
             <screen>
-                CFLAGS=-time ./configure
-            </screen>
+        CFLAGS=-time ./configure </screen>
 
             If CFLAGS is set by default in your environment and you don't want
             that, you can specify an empty CFLAGS= on your command line.
@@ -108,11 +103,9 @@
             fails to link against libm, you can use:
 
             <screen>
-                ./configure --with-extraincdir=/opt/some/dir/include
-            </screen>
+        ./configure --with-extraincdir=/opt/some/dir/include </screen>
             <screen>
-                ./configure --with-extralibdir=/opt/some/dir/lib
-            </screen>
+        ./configure --with-extralibdir=/opt/some/dir/lib </screen>
         </para>
         <para>
             If certain applications needed for the build process can't be
@@ -121,8 +114,7 @@
             <application>configure</application>:
 
             <screen>
-                ./configure --with-makedepend=/not/in/my/path/bin/makedepend
-            </screen>
+        ./configure --with-makedepend=/not/in/my/path/bin/makedepend </screen>
 
             Similar options are available for all applications that might
             be needed for the basic build process or for running benchmarks
@@ -135,11 +127,9 @@
             you can enable debug symbols and/or all compiler warnings:
 
             <screen>
-                ./configure --enable-debug
-            </screen>
+        ./configure --enable-debug </screen>
             <screen>
-                ./configure --enable-warnings
-            </screen>
+        ./configure --enable-warnings </screen>
         </para>
     </sect1>
 

Index: introduction.xml
===================================================================
RCS file: /cvsroot/fpm/fpm/docs/xml/en/introduction.xml,v
retrieving revision 1.3
retrieving revision 1.4
diff -u -d -r1.3 -r1.4
--- introduction.xml	31 Aug 2005 02:02:58 -0000	1.3
+++ introduction.xml	1 Sep 2005 00:14:48 -0000	1.4
@@ -13,8 +13,8 @@
             state-of-the-art FPU's are getting faster and faster, it might
             still be beneficial to implement your algorithms with fixed point
             arithmetic to gain even higher speeds, although at the cost of
-            precission. Fixed point arithmetic is less precise than floating
-            point arithmetic, but lots of times, the extra precission is
+            precision. Fixed point arithmetic is less precise than floating
+            point arithmetic, but lots of times, the extra precision is
             not needed.
         </para>
         <para>



From nobody at sheep.berlios.de  Thu Sep  1 02:57:19 2005
From: nobody at sheep.berlios.de (ivop)
Date: Thu, 1 Sep 2005 02:57:19 +0200
Subject: [fpm-cvslog] website/docs/HTML-single/en default.css,1.3,1.4 index.html,1.2,1.3
Message-ID: <200509010057.j810v9613629@bat.berlios.de>

Update of /cvsroot/fpm/website/docs/HTML-single/en
In directory sheep:/tmp/cvs-serv15012/en

Modified Files:
	default.css index.html 
Log Message:
updated documentation. chapter 3 and skeleton of chapter 4 plus minor
spelling and lay-out fixes



Index: default.css
===================================================================
RCS file: /cvsroot/fpm/website/docs/HTML-single/en/default.css,v
retrieving revision 1.3
retrieving revision 1.4
diff -u -d -r1.3 -r1.4
--- default.css	31 Aug 2005 02:05:57 -0000	1.3
+++ default.css	1 Sep 2005 00:56:46 -0000	1.4
@@ -11,34 +11,36 @@
 }
 
 div.table table, div.informaltable table {
-	background: #333366;
+	background: #336633;
 	border-collapse: separate;
-	border: solid 1px #333366;
+	border: solid 1px #008000;
 	border-spacing: 1px;
 }
 
 div.table th, div.informaltable th {
 	color: white;
-	background: #4488cc;
+	background: #44cc88;
 	border: 0px;
 	padding: 2px;
 }
 
 div.table td, div.informaltable td {
-	background: #fffff8;
+	background: #ffffff;
 	border: 0px;
-	padding: 2px;
+	padding: 8px;
+    text-align: right;
 }
 
 
 pre.screen {
 	padding: 4px;
 	background: #e0e0e0;
+    color: #000000;
 	font-size: 10pt;
 }
 
 pre.programlisting {
 	padding: 4px;
-	background: #e0e0e0;
+	background: #f0fff0;
 }
 

Index: index.html
===================================================================
RCS file: /cvsroot/fpm/website/docs/HTML-single/en/index.html,v
retrieving revision 1.2
retrieving revision 1.3
diff -u -d -r1.2 -r1.3
--- index.html	31 Aug 2005 02:05:57 -0000	1.2
+++ index.html	1 Sep 2005 00:56:46 -0000	1.3
@@ -9,14 +9,14 @@
         Invariant Sections, with no Front-Cover texts, and with no Back-Cover
         Texts. A copy of the license can be found at
         the end of this document.
-        </p></div></div><hr></div><div class="toc"><p><b>Table of Contents</b></p><dl><dt>1. <a href="#introduction"> Introduction </a></dt><dd><dl><dt>1.1. <a href="#about-this-library"> About this library </a></dt></dl></dd><dt>2. <a href="#getting-started"> Getting started </a></dt><dd><dl><dt>2.1. <a href="#system-requirements"> System requirements </a></dt><dt>2.2. <a href="#compilation-and-installation"> Compilation and installation </a></dt><dt>2.3. <a href="#tweaking-the-build-process"> Tweaking the build process </a></dt></dl></dd><dt>A. <a href="#license"> License </a></dt></dl></div><div class="chapter"><div class="titlepage"><div><h2 class="title"><a name="introduction"></a>Chapter 1.  Introduction </h2></div></div><div class="toc"><p><b>Table of Contents</b></p><dl><dt>1.1. <a href="#about-this-library"> About this library </a></dt></dl></div><div class="sect1"><div class="titlepage"><div><h2 class="title" style="clear: both"><a name="about-this-library"></a>1.1.  About this library </h2></div></div><p>
+        </p></div></div><hr></div><div class="toc"><p><b>Table of Contents</b></p><dl><dt>1. <a href="#introduction"> Introduction </a></dt><dd><dl><dt>1.1. <a href="#about-this-library"> About this library </a></dt></dl></dd><dt>2. <a href="#getting-started"> Getting started </a></dt><dd><dl><dt>2.1. <a href="#system-requirements"> System requirements </a></dt><dt>2.2. <a href="#compilation-and-installation"> Compilation and installation </a></dt><dt>2.3. <a href="#tweaking-the-build-process"> Tweaking the build process </a></dt></dl></dd><dt>3. <a href="#usage"> Usage </a></dt><dd><dl><dt>3.1. <a href="#basic-types"> Basic types </a></dt><dt>3.2. <a href="#type-conversion"> Initialization and type conversion </a></dt><dt>3.3. <a href="#doing-calculations"> Doing calculations </a></dt><dt>3.4. <a href="#sqrt-ln-exp-and-pow"> sqrt, ln, exp and pow </a></dt></dl></dd><dt>4. <a href="#advanced"> Advanced </a></dt><dd><dl><dt>4.1. <a href="#look-up-tables"> Look Up Tables </a></dt><dt>4.2. <a href="#precision"> Precision </a></dt><dt>4.3. <a href="#benchmarks"> Benchmarks </a></dt></dl></dd><dt>A. <a href="#license"> License </a></dt></dl></div><div class="chapter"><div class="titlepage"><div><h2 class="title"><a name="introduction"></a>Chapter 1.  Introduction </h2></div></div><div class="toc"><p><b>Table of Contents</b></p><dl><dt>1.1. <a href="#about-this-library"> About this library </a></dt></dl></div><div class="sect1"><div class="titlepage"><div><h2 class="title" style="clear: both"><a name="about-this-library"></a>1.1.  About this library </h2></div></div><p>
             This is a macro library written in the C programming language,
             and implements fixed point arithmetic. Although current
             state-of-the-art FPU's are getting faster and faster, it might
             still be beneficial to implement your algorithms with fixed point
             arithmetic to gain even higher speeds, although at the cost of
-            precission. Fixed point arithmetic is less precise than floating
-            point arithmetic, but lots of times, the extra precission is
+            precision. Fixed point arithmetic is less precise than floating
+            point arithmetic, but lots of times, the extra precision is
             not needed.
         </p><p>
             I chose to implement this library as a set of macro's instead of
@@ -67,10 +67,9 @@
             Most of the time, the following will work fine:
 
             <pre class="screen">
-                ./configure
-                make
-                make install
-            </pre>
+        ./configure
+        make
+        make install </pre>
 
             Configure will figure out what tools are available on your system
             and how to use them.
@@ -83,8 +82,7 @@
             the build and installation process, you should run:
 
             <pre class="screen">
-                ./configure --help
-            </pre>
+        ./configure --help </pre>
 
             The next section will describe the
             <b>configure</b>
@@ -98,18 +96,15 @@
             <b>configure</b>.
 
             <pre class="screen">
-                CC=/usr/local/intel/bin/icc ./configure
-            </pre>
+        CC=/usr/local/intel/bin/icc ./configure </pre>
             <pre class="screen">
-                ./configure --cc=tcc
-            </pre>
+        ./configure --cc=tcc </pre>
         </p><p>
             You can override the default CFLAGS by setting the environment
             variable of the same name.
 
             <pre class="screen">
-                CFLAGS=-time ./configure
-            </pre>
+        CFLAGS=-time ./configure </pre>
 
             If CFLAGS is set by default in your environment and you don't want
             that, you can specify an empty CFLAGS= on your command line.
@@ -119,11 +114,9 @@
             fails to link against libm, you can use:
 
             <pre class="screen">
-                ./configure --with-extraincdir=/opt/some/dir/include
-            </pre>
+        ./configure --with-extraincdir=/opt/some/dir/include </pre>
             <pre class="screen">
-                ./configure --with-extralibdir=/opt/some/dir/lib
-            </pre>
+        ./configure --with-extralibdir=/opt/some/dir/lib </pre>
         </p><p>
             If certain applications needed for the build process can't be
             found in your default PATH, but you are sure they are installed
@@ -131,8 +124,7 @@
             <b>configure</b>:
 
             <pre class="screen">
-                ./configure --with-makedepend=/not/in/my/path/bin/makedepend
-            </pre>
+        ./configure --with-makedepend=/not/in/my/path/bin/makedepend </pre>
 
             Similar options are available for all applications that might
             be needed for the basic build process or for running benchmarks
@@ -144,11 +136,144 @@
             you can enable debug symbols and/or all compiler warnings:
 
             <pre class="screen">
-                ./configure --enable-debug
-            </pre>
+        ./configure --enable-debug </pre>
             <pre class="screen">
-                ./configure --enable-warnings
-            </pre>
+        ./configure --enable-warnings </pre>
+        </p></div></div><div class="chapter"><div class="titlepage"><div><h2 class="title"><a name="usage"></a>Chapter 3.  Usage </h2></div></div><div class="toc"><p><b>Table of Contents</b></p><dl><dt>3.1. <a href="#basic-types"> Basic types </a></dt><dt>3.2. <a href="#type-conversion"> Initialization and type conversion </a></dt><dt>3.3. <a href="#doing-calculations"> Doing calculations </a></dt><dt>3.4. <a href="#sqrt-ln-exp-and-pow"> sqrt, ln, exp and pow </a></dt></dl></div><p>
+        First, your application needs to include the Fixed Point Math Macro
+        Library header file:
+
+        <pre class="programlisting">
+        #include &lt;fixedpointmath.h&gt;</pre>
+
+        After that, you will be able to use its types and functions. There's
+        no need to link to any special libraries.
+    </p><div class="sect1"><div class="titlepage"><div><h2 class="title" style="clear: both"><a name="basic-types"></a>3.1.  Basic types </h2></div></div><p>
+            There are four basic fixed point types. They differ in the amount
+            of memory they occupy and the amount of precision they offer.
+            All four come in both signed and unsigned variants, which sums
+            up to a total of eight types.
+
+            <div class="table"><p><b>Table 3.1.  Basic types </b></p><table summary=" Basic types " border="1"><colgroup><col><col><col><col><col><col></colgroup><thead><tr><th> type </th><th> total </th><th> fraction </th><th> min </th><th> max </th><th> precision </th></tr></thead><tbody><tr><td> fp8p8_t </td><td> 16 </td><td> 8 </td><td> -128.999... </td><td> 127.999... </td><td> 0.00390625 </td></tr><tr><td> fp24p8_t </td><td> 32 </td><td> 8 </td><td> -8388608.999... </td><td> 8388607.999... </td><td> 0.00390625 </td></tr><tr><td> fp16p16_t </td><td> 32 </td><td> 16 </td><td> -32768.999... </td><td> 32767.999... </td><td> 0.00001526 </td></tr><tr><td> fp8p24_t </td><td> 32 </td><td> 24 </td><td> -128.999... </td><td> 127.999... </td><td> 0.00000006 </td></tr><tr><td> ufp8p8_t </td><td> 16 </td><td> 8 </td><td> 0.0 </td><td> 255.999... </td><td> 0.00390625 </td></tr><tr><td> ufp24p8_t </td><td> 32 </td><td> 8 </td><td> 0.0 </td><td> 16777215.999... </td><td> 0.00390625 </td></tr><tr><td> ufp16p16_t </td><td> 32 </td><td> 16 </td><td> 0.0 </td><td> 65535.999... </td><td> 0.00001526 </td></tr><tr><td> ufp8p24_t </td><td> 32 </td><td> 24 </td><td> 0.0 </td><td> 255.999... </td><td> 0.00000006 </td></tr></tbody></table></div>
+        </p><p>
+            Declaring variables of certain types is as simple as with any
+            type.
+
+            <pre class="programlisting">
+                ufp16p16_t x, y;
+                fp16p16_t matrix[16][16]; </pre>
+        </p></div><div class="sect1"><div class="titlepage"><div><h2 class="title" style="clear: both"><a name="type-conversion"></a>3.2.  Initialization and type conversion </h2></div></div><p>
+            To initialize your variables, you need to convert a value from
+            another type and assign it to your fixed point variable. For
+            each fixed point type, there are several macro's that convert
+            to and from other types.
+
+            <div class="table"><p><b>Table 3.2.  Type conversion to fp8p8_t </b></p><table summary=" Type conversion to fp8p8_t " border="1"><colgroup><col><col></colgroup><thead><tr><th> from </th><th> fp8p8_t </th></tr></thead><tbody><tr><td> int </td><td> itofp8p8(x) </td></tr><tr><td> float </td><td> ftofp8p8(x) </td></tr><tr><td> double </td><td> dtofp8p8(x) </td></tr></tbody></table></div>
+        </p><p>
+            Similar macro's exist for all other fixed point types.
+
+            <pre class="programlisting">
+        int        a;
+        ufp16p16_t b;
+
+        a = 97;
+        b = itoufp16p16(a);
+
+        [...]
+
+        b = itoufp16p16(123); </pre>
+        </p><p>
+            There are also macro's that convert your fixed point
+            variables back to standard types.
+
+            <div class="table"><p><b>Table 3.3.  Type conversion from fp8p8_t </b></p><table summary=" Type conversion from fp8p8_t " border="1"><colgroup><col><col><col><col></colgroup><thead><tr><th> from </th><th> int </th><th> float </th><th> double </th></tr></thead><tbody><tr><td> fp8p8_t </td><td> fp8p8toi(x) </td><td> fp8p8tof(x) </td><td> fp8p8tod(x) </td></tr></tbody></table></div>
+        </p><p>
+            Again, similar macro's exist for all other fixed point types.
+
+            <pre class="programlisting">
+        fp16p16_t a;
+        float     f;
+
+        [...]
+
+        f = fp16p16tof(a); </pre>
+        </p><p>
+            Finally, there are macro's to convert between fixed point types.
+            Their names are structured analog to the above macro's. Note that
+            there are no explicit macro's to convert between signed and
+            unsigned types. If you want to do that, you have to know exactly
+            what you are doing will work correctly.
+
+            <pre class="programlisting">
+        fp24p8_t   a;
+        fp8p8_t    b;
+        ufp16p16_t c
+
+        [...]
+
+        a = fp8p8tofp24p8(b);
+
+        c = ufp8p8toufp16p16(b);    /* incorrect if b is negative */ </pre>
+        </p></div><div class="sect1"><div class="titlepage"><div><h2 class="title" style="clear: both"><a name="doing-calculations"></a>3.3.  Doing calculations </h2></div></div><p>
+            For addition and substraction, all fixed point variables can be
+            treated as if they were normal variables.
+
+            <pre class="programlisting">
+        fp16p16_t x, y, z;
+
+        [...]
+
+        z = x + y;
+        z = x - y;</pre>
+        </p><p>
+            Multiplication and division are a bit more complicated. Using
+            the basic '*' and '/' operators will not work with fixed point
+            variables. Since C doesn't support overloading of operators, there
+            are multiple macro's that do the job. One for each type.
+            Macro's for multiplication start with 'mul' and those for
+            division start with div. All macro's take two arguments.
+        </p><p>
+            mul...(x, y) = x * y
+        </p><p>
+            div...(x, y) = x / y
+        </p><p>
+            Both arguments have to be of the same type and can be other
+            variables, constants or the same variable.
+
+            <pre class="programlisting">
+        fp8p8_t   x, y, z;
+        ufp8p24_t a;
+
+        [...]
+
+        z = mulfp8p8(x, y);
+        x = mulfp8p8(x, itofp8p8(15));
+        y = divfp8p8(x, z);
+    
+        a = mulufp8p24(a, a);</pre>
+        </p></div><div class="sect1"><div class="titlepage"><div><h2 class="title" style="clear: both"><a name="sqrt-ln-exp-and-pow"></a>3.4.  sqrt, ln, exp and pow </h2></div></div><p>
+            For all fixed point types, the macro library implements
+            sqrt, ln, exp and pow.
+
+            <div class="table"><p><b>Table 3.4.  Math macro's for ufp16p16_t </b></p><table summary=" Math macro's for ufp16p16_t " border="1"><colgroup><col><col></colgroup><thead><tr><th>?</th><th> description </th></tr></thead><tbody><tr><td> sqrtufp16p16(x) </td><td> calculates the square root of x
+                                    for x &gt;= 0 </td></tr><tr><td> lnufp16p16(x) </td><td> calculates the natural logarithm of x
+                                    for x &gt;= 0 </td></tr><tr><td> expufp16p16(x) </td><td> calculates e to the power of x
+                                    for x &gt;= 1 </td></tr><tr><td> powufp16p16(x, y) </td><td> calculates x to the power of y
+                                    for y &gt;= 1 </td></tr></tbody></table></div>
+        </p><p>
+            For all seven other types, similar macro's exist.
+            Also, be aware that the exp and pow macro's easily overflow your
+            variables!
+
+            <pre class="programlisting">
+        fp24p8_t a;
+
+        a = ftofp24p8(2.37);
+
+        a = sqrtfp24p8(a); </pre>
+        </p></div></div><div class="chapter"><div class="titlepage"><div><h2 class="title"><a name="advanced"></a>Chapter 4.  Advanced </h2></div></div><div class="toc"><p><b>Table of Contents</b></p><dl><dt>4.1. <a href="#look-up-tables"> Look Up Tables </a></dt><dt>4.2. <a href="#precision"> Precision </a></dt><dt>4.3. <a href="#benchmarks"> Benchmarks </a></dt></dl></div><div class="sect1"><div class="titlepage"><div><h2 class="title" style="clear: both"><a name="look-up-tables"></a>4.1.  Look Up Tables </h2></div></div><p>
+        </p></div><div class="sect1"><div class="titlepage"><div><h2 class="title" style="clear: both"><a name="precision"></a>4.2.  Precision </h2></div></div><p>
+        </p></div><div class="sect1"><div class="titlepage"><div><h2 class="title" style="clear: both"><a name="benchmarks"></a>4.3.  Benchmarks </h2></div></div><p>
         </p></div></div><div class="appendix"><div class="titlepage"><div><h2 class="title"><a name="license"></a>Appendix A.  License </h2></div></div><pre class="screen">
 		GNU Free Documentation License
 		  Version 1.2, November 2002



From nobody at sheep.berlios.de  Thu Sep  1 03:02:59 2005
From: nobody at sheep.berlios.de (ivop)
Date: Thu, 1 Sep 2005 03:02:59 +0200
Subject: [fpm-cvslog] website/docs/HTML/en advanced.html,NONE,1.1 benchmarks.html,NONE,1.1 doing-calculations.html,NONE,1.1 precision.html,NONE,1.1 sqrt-ln-exp-and-pow.html,NONE,1.1 type-conversion.html,NONE,1.1 usage.html,NONE,1.1 compilation-and-installation.html,1.2,1.3 default.css,1.3,1.4 index.html,1.2,1.3 introduction.html,1.2,1.3 license.html,1.1,1.2 tweaking-the-build-process.html,1.1,1.2
Message-ID: <200509010102.j8112n613755@bat.berlios.de>

Update of /cvsroot/fpm/website/docs/HTML/en
In directory sheep:/tmp/cvs-serv15544

Modified Files:
	compilation-and-installation.html default.css index.html 
	introduction.html license.html tweaking-the-build-process.html 
Added Files:
	advanced.html benchmarks.html doing-calculations.html 
	precision.html sqrt-ln-exp-and-pow.html type-conversion.html 
	usage.html 
Log Message:
updated docs; new chapter 3, skeleton of chapter 4 and misc. spelling and
lay-out fixes.



--- NEW FILE: advanced.html ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: benchmarks.html ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: doing-calculations.html ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: precision.html ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: sqrt-ln-exp-and-pow.html ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: type-conversion.html ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: usage.html ---
(This appears to be a binary file; contents omitted.)

Index: compilation-and-installation.html
===================================================================
RCS file: /cvsroot/fpm/website/docs/HTML/en/compilation-and-installation.html,v
retrieving revision 1.2
retrieving revision 1.3
diff -u -d -r1.2 -r1.3
--- compilation-and-installation.html	31 Aug 2005 02:05:57 -0000	1.2
+++ compilation-and-installation.html	1 Sep 2005 01:02:19 -0000	1.3
@@ -6,10 +6,9 @@
             Most of the time, the following will work fine:
 
             <pre class="screen">
-                ./configure
-                make
-                make install
-            </pre>
+        ./configure
+        make
+        make install </pre>
 
             Configure will figure out what tools are available on your system
             and how to use them.
@@ -22,8 +21,7 @@
             the build and installation process, you should run:
 
             <pre class="screen">
-                ./configure --help
-            </pre>
+        ./configure --help </pre>
 
             The next section will describe the
             <b>configure</b>

Index: default.css
===================================================================
RCS file: /cvsroot/fpm/website/docs/HTML/en/default.css,v
retrieving revision 1.3
retrieving revision 1.4
diff -u -d -r1.3 -r1.4
--- default.css	31 Aug 2005 02:05:57 -0000	1.3
+++ default.css	1 Sep 2005 01:02:20 -0000	1.4
@@ -11,34 +11,36 @@
 }
 
 div.table table, div.informaltable table {
-	background: #333366;
+	background: #336633;
 	border-collapse: separate;
-	border: solid 1px #333366;
+	border: solid 1px #008000;
 	border-spacing: 1px;
 }
 
 div.table th, div.informaltable th {
 	color: white;
-	background: #4488cc;
+	background: #44cc88;
 	border: 0px;
 	padding: 2px;
 }
 
 div.table td, div.informaltable td {
-	background: #fffff8;
+	background: #ffffff;
 	border: 0px;
-	padding: 2px;
+	padding: 8px;
+    text-align: right;
 }
 
 
 pre.screen {
 	padding: 4px;
 	background: #e0e0e0;
+    color: #000000;
 	font-size: 10pt;
 }
 
 pre.programlisting {
 	padding: 4px;
-	background: #e0e0e0;
+	background: #f0fff0;
 }
 

Index: index.html
===================================================================
RCS file: /cvsroot/fpm/website/docs/HTML/en/index.html,v
retrieving revision 1.2
retrieving revision 1.3
diff -u -d -r1.2 -r1.3
--- index.html	31 Aug 2005 02:05:57 -0000	1.2
+++ index.html	1 Sep 2005 01:02:20 -0000	1.3
@@ -11,7 +11,7 @@
         Invariant Sections, with no Front-Cover texts, and with no Back-Cover
         Texts. A copy of the license can be found at
         the end of this document.
-        </p></div></div><hr></div><div class="toc"><p><b>Table of Contents</b></p><dl><dt>1. <a href="introduction.html"> Introduction </a></dt><dd><dl><dt>1.1. <a href="introduction.html#about-this-library"> About this library </a></dt></dl></dd><dt>2. <a href="getting-started.html"> Getting started </a></dt><dd><dl><dt>2.1. <a href="getting-started.html#system-requirements"> System requirements </a></dt><dt>2.2. <a href="compilation-and-installation.html"> Compilation and installation </a></dt><dt>2.3. <a href="tweaking-the-build-process.html"> Tweaking the build process </a></dt></dl></dd><dt>A. <a href="license.html"> License </a></dt></dl></div></div>
+        </p></div></div><hr></div><div class="toc"><p><b>Table of Contents</b></p><dl><dt>1. <a href="introduction.html"> Introduction </a></dt><dd><dl><dt>1.1. <a href="introduction.html#about-this-library"> About this library </a></dt></dl></dd><dt>2. <a href="getting-started.html"> Getting started </a></dt><dd><dl><dt>2.1. <a href="getting-started.html#system-requirements"> System requirements </a></dt><dt>2.2. <a href="compilation-and-installation.html"> Compilation and installation </a></dt><dt>2.3. <a href="tweaking-the-build-process.html"> Tweaking the build process </a></dt></dl></dd><dt>3. <a href="usage.html"> Usage </a></dt><dd><dl><dt>3.1. <a href="usage.html#basic-types"> Basic types </a></dt><dt>3.2. <a href="type-conversion.html"> Initialization and type conversion </a></dt><dt>3.3. <a href="doing-calculations.html"> Doing calculations </a></dt><dt>3.4. <a href="sqrt-ln-exp-and-pow.html"> sqrt, ln, exp and pow </a></dt></dl></dd><dt>4. <a href="advanced.html"> Advanced </a></dt><dd><dl><dt>4.1. <a href="advanced.html#look-up-tables"> Look Up Tables </a></dt><dt>4.2. <a href="precision.html"> Precision </a></dt><dt>4.3. <a href="benchmarks.html"> Benchmarks </a></dt></dl></dd><dt>A. <a href="license.html"> License </a></dt></dl></div></div>
           
       <div class="navfooter"><hr><table width="100%" summary="Navigation footer"><tr><td width="40%" align="left">?</td><td width="20%" align="center">?</td><td width="40%" align="right">?<a accesskey="n" href="introduction.html">Next</a></td></tr><tr><td width="40%" align="left" valign="top">?</td><td width="20%" align="center">?</td><td width="40%" align="right" valign="top">?</td></tr></table></div>
           </td> </tr> </table>

Index: introduction.html
===================================================================
RCS file: /cvsroot/fpm/website/docs/HTML/en/introduction.html,v
retrieving revision 1.2
retrieving revision 1.3
diff -u -d -r1.2 -r1.3
--- introduction.html	31 Aug 2005 02:05:57 -0000	1.2
+++ introduction.html	1 Sep 2005 01:02:20 -0000	1.3
@@ -8,8 +8,8 @@
             state-of-the-art FPU's are getting faster and faster, it might
             still be beneficial to implement your algorithms with fixed point
             arithmetic to gain even higher speeds, although at the cost of
-            precission. Fixed point arithmetic is less precise than floating
-            point arithmetic, but lots of times, the extra precission is
+            precision. Fixed point arithmetic is less precise than floating
+            point arithmetic, but lots of times, the extra precision is
             not needed.
         </p><p>
             I chose to implement this library as a set of macro's instead of

Index: license.html
===================================================================
RCS file: /cvsroot/fpm/website/docs/HTML/en/license.html,v
retrieving revision 1.1
retrieving revision 1.2
diff -u -d -r1.1 -r1.2
--- license.html	31 Aug 2005 02:11:27 -0000	1.1
+++ license.html	1 Sep 2005 01:02:20 -0000	1.2
@@ -1,6 +1,6 @@
-<html><head><meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"><title>Appendix A.  License </title><link rel="stylesheet" href="default.css" type="text/css"><meta name="generator" content="DocBook XSL Stylesheets V1.48"><link rel="home" href="index.html" title=" Fixed Point Math Macro Library "><link rel="up" href="index.html" title=" Fixed Point Math Macro Library "><link rel="previous" href="tweaking-the-build-process.html" title="2.3.  Tweaking the build process "></head><body text="black" link="#0000FF" vlink="#840084" alink="#0000FF">
+<html><head><meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"><title>Appendix A.  License </title><link rel="stylesheet" href="default.css" type="text/css"><meta name="generator" content="DocBook XSL Stylesheets V1.48"><link rel="home" href="index.html" title=" Fixed Point Math Macro Library "><link rel="up" href="index.html" title=" Fixed Point Math Macro Library "><link rel="previous" href="benchmarks.html" title="4.3.  Benchmarks "></head><body text="black" link="#0000FF" vlink="#840084" alink="#0000FF">
           <table bgcolor="#f0f0f0" width="700" border="0" cellspacing="0" cellpadding="16" height="1000" > <tr> <td valign="top" align="left">
-      <div class="navheader"><table width="100%" summary="Navigation header"><tr><td width="20%" align="left"><a accesskey="p" href="tweaking-the-build-process.html">Prev</a>?</td><th width="60%" align="center">?</th><td width="20%" align="right">?</td></tr></table><hr></div>
+      <div class="navheader"><table width="100%" summary="Navigation header"><tr><td width="20%" align="left"><a accesskey="p" href="benchmarks.html">Prev</a>?</td><th width="60%" align="center">?</th><td width="20%" align="right">?</td></tr></table><hr></div>
           
       <div class="appendix"><div class="titlepage"><div><h2 class="title"><a name="license"></a>Appendix A.  License </h2></div></div><pre class="screen">
 		GNU Free Documentation License
@@ -402,6 +402,6 @@
 
     </pre></div>
           
-      <div class="navfooter"><hr><table width="100%" summary="Navigation footer"><tr><td width="40%" align="left"><a accesskey="p" href="tweaking-the-build-process.html">Prev</a>?</td><td width="20%" align="center"><a accesskey="u" href="index.html">Up</a></td><td width="40%" align="right">?</td></tr><tr><td width="40%" align="left" valign="top">?</td><td width="20%" align="center"><a accesskey="h" href="index.html">Home</a></td><td width="40%" align="right" valign="top">?</td></tr></table></div>
+      <div class="navfooter"><hr><table width="100%" summary="Navigation footer"><tr><td width="40%" align="left"><a accesskey="p" href="benchmarks.html">Prev</a>?</td><td width="20%" align="center"><a accesskey="u" href="index.html">Up</a></td><td width="40%" align="right">?</td></tr><tr><td width="40%" align="left" valign="top">?</td><td width="20%" align="center"><a accesskey="h" href="index.html">Home</a></td><td width="40%" align="right" valign="top">?</td></tr></table></div>
           </td> </tr> </table>
       </body></html>

Index: tweaking-the-build-process.html
===================================================================
RCS file: /cvsroot/fpm/website/docs/HTML/en/tweaking-the-build-process.html,v
retrieving revision 1.1
retrieving revision 1.2
diff -u -d -r1.1 -r1.2
--- tweaking-the-build-process.html	31 Aug 2005 02:11:27 -0000	1.1
+++ tweaking-the-build-process.html	1 Sep 2005 01:02:20 -0000	1.2
@@ -1,6 +1,6 @@
-<html><head><meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"><title>2.3.  Tweaking the build process </title><link rel="stylesheet" href="default.css" type="text/css"><meta name="generator" content="DocBook XSL Stylesheets V1.48"><link rel="home" href="index.html" title=" Fixed Point Math Macro Library "><link rel="up" href="getting-started.html" title="Chapter 2.  Getting started "><link rel="previous" href="compilation-and-installation.html" title="2.2.  Compilation and installation "><link rel="next" href="license.html" title="Appendix A.  License "></head><body text="black" link="#0000FF" vlink="#840084" alink="#0000FF">
+<html><head><meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"><title>2.3.  Tweaking the build process </title><link rel="stylesheet" href="default.css" type="text/css"><meta name="generator" content="DocBook XSL Stylesheets V1.48"><link rel="home" href="index.html" title=" Fixed Point Math Macro Library "><link rel="up" href="getting-started.html" title="Chapter 2.  Getting started "><link rel="previous" href="compilation-and-installation.html" title="2.2.  Compilation and installation "><link rel="next" href="usage.html" title="Chapter 3.  Usage "></head><body text="black" link="#0000FF" vlink="#840084" alink="#0000FF">
           <table bgcolor="#f0f0f0" width="700" border="0" cellspacing="0" cellpadding="16" height="1000" > <tr> <td valign="top" align="left">
-      <div class="navheader"><table width="100%" summary="Navigation header"><tr><td width="20%" align="left"><a accesskey="p" href="compilation-and-installation.html">Prev</a>?</td><th width="60%" align="center">?</th><td width="20%" align="right">?<a accesskey="n" href="license.html">Next</a></td></tr></table><hr></div>
+      <div class="navheader"><table width="100%" summary="Navigation header"><tr><td width="20%" align="left"><a accesskey="p" href="compilation-and-installation.html">Prev</a>?</td><th width="60%" align="center">?</th><td width="20%" align="right">?<a accesskey="n" href="usage.html">Next</a></td></tr></table><hr></div>
           
       <div class="sect1"><div class="titlepage"><div><h2 class="title" style="clear: both"><a name="tweaking-the-build-process"></a>2.3.  Tweaking the build process </h2></div></div><p>
             By default,
@@ -11,18 +11,15 @@
             <b>configure</b>.
 
             <pre class="screen">
-                CC=/usr/local/intel/bin/icc ./configure
-            </pre>
+        CC=/usr/local/intel/bin/icc ./configure </pre>
             <pre class="screen">
-                ./configure --cc=tcc
-            </pre>
+        ./configure --cc=tcc </pre>
         </p><p>
             You can override the default CFLAGS by setting the environment
             variable of the same name.
 
             <pre class="screen">
-                CFLAGS=-time ./configure
-            </pre>
+        CFLAGS=-time ./configure </pre>
 
             If CFLAGS is set by default in your environment and you don't want
             that, you can specify an empty CFLAGS= on your command line.
@@ -32,11 +29,9 @@
             fails to link against libm, you can use:
 
             <pre class="screen">
-                ./configure --with-extraincdir=/opt/some/dir/include
-            </pre>
+        ./configure --with-extraincdir=/opt/some/dir/include </pre>
             <pre class="screen">
-                ./configure --with-extralibdir=/opt/some/dir/lib
-            </pre>
+        ./configure --with-extralibdir=/opt/some/dir/lib </pre>
         </p><p>
             If certain applications needed for the build process can't be
             found in your default PATH, but you are sure they are installed
@@ -44,8 +39,7 @@
             <b>configure</b>:
 
             <pre class="screen">
-                ./configure --with-makedepend=/not/in/my/path/bin/makedepend
-            </pre>
+        ./configure --with-makedepend=/not/in/my/path/bin/makedepend </pre>
 
             Similar options are available for all applications that might
             be needed for the basic build process or for running benchmarks
@@ -57,13 +51,11 @@
             you can enable debug symbols and/or all compiler warnings:
 
             <pre class="screen">
-                ./configure --enable-debug
-            </pre>
+        ./configure --enable-debug </pre>
             <pre class="screen">
-                ./configure --enable-warnings
-            </pre>
+        ./configure --enable-warnings </pre>
         </p></div>
           
-      <div class="navfooter"><hr><table width="100%" summary="Navigation footer"><tr><td width="40%" align="left"><a accesskey="p" href="compilation-and-installation.html">Prev</a>?</td><td width="20%" align="center"><a accesskey="u" href="getting-started.html">Up</a></td><td width="40%" align="right">?<a accesskey="n" href="license.html">Next</a></td></tr><tr><td width="40%" align="left" valign="top">?</td><td width="20%" align="center"><a accesskey="h" href="index.html">Home</a></td><td width="40%" align="right" valign="top">?</td></tr></table></div>
+      <div class="navfooter"><hr><table width="100%" summary="Navigation footer"><tr><td width="40%" align="left"><a accesskey="p" href="compilation-and-installation.html">Prev</a>?</td><td width="20%" align="center"><a accesskey="u" href="getting-started.html">Up</a></td><td width="40%" align="right">?<a accesskey="n" href="usage.html">Next</a></td></tr><tr><td width="40%" align="left" valign="top">?</td><td width="20%" align="center"><a accesskey="h" href="index.html">Home</a></td><td width="40%" align="right" valign="top">?</td></tr></table></div>
           </td> </tr> </table>
       </body></html>



From nobody at sheep.berlios.de  Fri Sep  2 05:13:11 2005
From: nobody at sheep.berlios.de (ivop)
Date: Fri, 2 Sep 2005 05:13:11 +0200
Subject: [fpm-cvslog] fpm/docs/xml default.css,1.4,1.5
Message-ID: <200509020313.j823D1617944@bat.berlios.de>

Update of /cvsroot/fpm/fpm/docs/xml
In directory sheep:/tmp/cvs-serv29424

Modified Files:
	default.css 
Log Message:
new documentation about look-up taboes; lay-out fix; stylesheet enhancement
for informaltables.



Index: default.css
===================================================================
RCS file: /cvsroot/fpm/fpm/docs/xml/default.css,v
retrieving revision 1.4
retrieving revision 1.5
diff -u -d -r1.4 -r1.5
--- default.css	1 Sep 2005 00:14:47 -0000	1.4
+++ default.css	2 Sep 2005 03:12:40 -0000	1.5
@@ -24,11 +24,18 @@
 	padding: 2px;
 }
 
-div.table td, div.informaltable td {
+div.table td {
 	background: #ffffff;
 	border: 0px;
 	padding: 8px;
     text-align: right;
+}
+
+div.informaltable td {
+	background: #ffffff;
+	border: 0px;
+	padding: 8px;
+    text-align: left;
 }
 
 



From nobody at sheep.berlios.de  Fri Sep  2 05:13:11 2005
From: nobody at sheep.berlios.de (ivop)
Date: Fri, 2 Sep 2005 05:13:11 +0200
Subject: [fpm-cvslog] fpm/docs/xml/en advanced.xml,1.1,1.2 usage.xml,1.1,1.2
Message-ID: <200509020313.j823D1617946@bat.berlios.de>

Update of /cvsroot/fpm/fpm/docs/xml/en
In directory sheep:/tmp/cvs-serv29424/en

Modified Files:
	advanced.xml usage.xml 
Log Message:
new documentation about look-up taboes; lay-out fix; stylesheet enhancement
for informaltables.



Index: advanced.xml
===================================================================
RCS file: /cvsroot/fpm/fpm/docs/xml/en/advanced.xml,v
retrieving revision 1.1
retrieving revision 1.2
diff -u -d -r1.1 -r1.2
--- advanced.xml	1 Sep 2005 00:14:48 -0000	1.1
+++ advanced.xml	2 Sep 2005 03:12:44 -0000	1.2
@@ -9,13 +9,94 @@
         <title> Look Up Tables </title>
 
         <para>
+            By default, all mathematical functions are calculated and/or
+            approximated algorithmicly. In some cases the algorithms use
+            a few (static) temporary variables, but generally speaking,
+            they don't use large amounts of memory and in most cases they
+            are faster than their floating point equivalents.
         </para>
+
+        <para>
+            In some cases though, they are not. For example, Athlon CPU's
+            "cheat" a little by using a 14-bit look-up table for square
+            root calculation and are therefore actually faster! This is
+            clearly not what we want.
+        </para>
+
+        <para>
+            This Fixed Point Math Macro Library also supports look-up table
+            variants of all mathematical functions. But considering its
+            fields of use, it has to be cache friendly. Large tables would
+            ruin the L1 cache. So instead of one large table, I chose to use
+            several small tables and linear interpolation for the values
+            that don't directly map to the look-up table.
+            Depending on the mathematical function that's
+            approximated and the precision that's needed, different tables
+            are used to accomplish that.
+            For example, the square root function needs more
+            precision for small values of x, but once the "curve" is mostly
+            done, it's almost a straight line and lesser samples are needed
+            to quite accurately approximate the function.
+            Depending on the fixed point type chosen and the function at hand,
+            two to four tables are needed, each consisting of somewhere around
+            128 values. This assures only a few kilobytes of memory and
+            hence won't trash the cache in most cases.
+        </para>
+
+        <para>
+            Look-up tables can be activated by using #define before including
+            fixedpointmath.h or by using the -D command line option of your
+            compiler. Currently (as of the alpha release) the following
+            defines are supported:
+
+            <informaltable>
+                <tgroup cols="2">
+                    <tbody>
+                        <row>
+                            <entry> __FPM_ENABLE_ALL_LUT__ </entry>
+                            <entry> Enable look-up tables for all calculations </entry>
+                        </row>
+                        <row>
+                            <entry> __FPM_ENABLE_SQRT_LUT__ </entry>
+                            <entry> Enable look-up tables for all square root calculations </entry>
+                        </row>
+                    </tbody>
+                </tgroup>
+            </informaltable>
+        </para>
+
+        <para>
+            Eventually, all mathematical functions will have their
+            look-up table equivalent. I even consider splitting it up for
+            every basic fixed point type, which could save memory.
+            Embedded systems with only limitted amount of RAM or ROM, could
+            benefit from that.
+        </para>
+
+        <para>
+            Example:
+
+            <programlisting>
+        #define __FPM_ENABLE_SQRT_LUT__
+        #include &lt;fixedpointmath.h&gt;
+
+        fp16p16_t a, b;
+
+        [...]
+
+        a = scrtfp16p16(b);     /* will be "looked up" and possibly
+                                 * interpolated */ </programlisting>
+        </para>
+            
     </sect1>
 
     <sect1 id="precision">
         <title> Precision </title>
 
         <para>
+            This section will eventually have a whole bunch of graphs that
+            show the precision and/or lack thereof of all fixed point
+            math macro's compared to 32/64-bit floating point.
         </para>
     </sect1>
 
@@ -23,9 +104,23 @@
         <title> Benchmarks </title>
 
         <para>
+            This section (and possibly sub-sections) will have barcharts
+            of how the fixed point math routines compare to floating point
+            variants on different CPU/FPU's and with different compilers
+            and optimization settings.
+        </para>
+
+        <para>
+            Note: I already noticed that Intel's ICC, in all its wisdom,
+            completely optimizes the benchmark program to oblivion, leaving
+            only 11 clockcycles (on a Sempron 2400 CPU) for almost all
+            timing loops. Something has to be done about that :)
+        </para>
+
+        <para>
+            This section will also describe how to run benchmarks yourself.
         </para>
     </sect1>
-
 
 </chapter>
 

Index: usage.xml
===================================================================
RCS file: /cvsroot/fpm/fpm/docs/xml/en/usage.xml,v
retrieving revision 1.1
retrieving revision 1.2
diff -u -d -r1.1 -r1.2
--- usage.xml	1 Sep 2005 00:14:48 -0000	1.1
+++ usage.xml	2 Sep 2005 03:12:44 -0000	1.2
@@ -111,8 +111,8 @@
             type.
 
             <programlisting>
-                ufp16p16_t x, y;
-                fp16p16_t matrix[16][16]; </programlisting>
+        ufp16p16_t x, y;
+        fp16p16_t matrix[16][16]; </programlisting>
         </para>
     </sect1>
 



From ivop at euronet.nl  Fri Sep  2 05:21:32 2005
From: ivop at euronet.nl (Ivo)
Date: Fri, 2 Sep 2005 05:21:32 +0200
Subject: [fpm-cvslog] fpm/docs/xml/en advanced.xml,1.1,1.2 usage.xml,1.1,1.2
In-Reply-To: <200509020313.j823D1617946@bat.berlios.de>
References: <200509020313.j823D1617946@bat.berlios.de>
Message-ID: <200509020521.32002.ivop@euronet.nl>

On Friday 02 September 2005 05:13, ivop wrote:
> Update of /cvsroot/fpm/fpm/docs/xml/en
> In directory sheep:/tmp/cvs-serv29424/en
>
> Modified Files:
> 	advanced.xml usage.xml
> Log Message:
> new documentation about look-up taboes; lay-out fix; stylesheet
> enhancement for informaltables.

That should be tabLes :-)

Message to myself, but I don't care. Who knows, somebody might actually read 
this in the future :)

--Ivo



From nobody at sheep.berlios.de  Fri Sep  2 05:25:28 2005
From: nobody at sheep.berlios.de (ivop)
Date: Fri, 2 Sep 2005 05:25:28 +0200
Subject: [fpm-cvslog] website/docs/HTML-single/en default.css,1.4,1.5 index.html,1.3,1.4
Message-ID: <200509020325.j823PI618398@bat.berlios.de>

Update of /cvsroot/fpm/website/docs/HTML-single/en
In directory sheep:/tmp/cvs-serv542/HTML-single/en

Modified Files:
	default.css index.html 
Log Message:
updated docs.

I wonder why cvs diff -u correctly diffs those files that are changed,
but cvs commit thinks all other files are changed too!!

Let's see what happens when I commit this....



Index: default.css
===================================================================
RCS file: /cvsroot/fpm/website/docs/HTML-single/en/default.css,v
retrieving revision 1.4
retrieving revision 1.5
diff -u -d -r1.4 -r1.5
--- default.css	1 Sep 2005 00:56:46 -0000	1.4
+++ default.css	2 Sep 2005 03:25:00 -0000	1.5
@@ -24,11 +24,18 @@
 	padding: 2px;
 }
 
-div.table td, div.informaltable td {
+div.table td {
 	background: #ffffff;
 	border: 0px;
 	padding: 8px;
     text-align: right;
+}
+
+div.informaltable td {
+	background: #ffffff;
+	border: 0px;
+	padding: 8px;
+    text-align: left;
 }
 
 

Index: index.html
===================================================================
RCS file: /cvsroot/fpm/website/docs/HTML-single/en/index.html,v
retrieving revision 1.3
retrieving revision 1.4
diff -u -d -r1.3 -r1.4
--- index.html	1 Sep 2005 00:56:46 -0000	1.3
+++ index.html	2 Sep 2005 03:25:00 -0000	1.4
@@ -160,8 +160,8 @@
             type.
 
             <pre class="programlisting">
-                ufp16p16_t x, y;
-                fp16p16_t matrix[16][16]; </pre>
+        ufp16p16_t x, y;
+        fp16p16_t matrix[16][16]; </pre>
         </p></div><div class="sect1"><div class="titlepage"><div><h2 class="title" style="clear: both"><a name="type-conversion"></a>3.2.  Initialization and type conversion </h2></div></div><p>
             To initialize your variables, you need to convert a value from
             another type and assign it to your fixed point variable. For
@@ -272,8 +272,76 @@
 
         a = sqrtfp24p8(a); </pre>
         </p></div></div><div class="chapter"><div class="titlepage"><div><h2 class="title"><a name="advanced"></a>Chapter 4.  Advanced </h2></div></div><div class="toc"><p><b>Table of Contents</b></p><dl><dt>4.1. <a href="#look-up-tables"> Look Up Tables </a></dt><dt>4.2. <a href="#precision"> Precision </a></dt><dt>4.3. <a href="#benchmarks"> Benchmarks </a></dt></dl></div><div class="sect1"><div class="titlepage"><div><h2 class="title" style="clear: both"><a name="look-up-tables"></a>4.1.  Look Up Tables </h2></div></div><p>
+            By default, all mathematical functions are calculated and/or
+            approximated algorithmicly. In some cases the algorithms use
+            a few (static) temporary variables, but generally speaking,
+            they don't use large amounts of memory and in most cases they
+            are faster than their floating point equivalents.
+        </p><p>
+            In some cases though, they are not. For example, Athlon CPU's
+            "cheat" a little by using a 14-bit look-up table for square
+            root calculation and are therefore actually faster! This is
+            clearly not what we want.
+        </p><p>
+            This Fixed Point Math Macro Library also supports look-up table
+            variants of all mathematical functions. But considering its
+            fields of use, it has to be cache friendly. Large tables would
+            ruin the L1 cache. So instead of one large table, I chose to use
+            several small tables and linear interpolation for the values
+            that don't directly map to the look-up table.
+            Depending on the mathematical function that's
+            approximated and the precision that's needed, different tables
+            are used to accomplish that.
+            For example, the square root function needs more
+            precision for small values of x, but once the "curve" is mostly
+            done, it's almost a straight line and lesser samples are needed
+            to quite accurately approximate the function.
+            Depending on the fixed point type chosen and the function at hand,
+            two to four tables are needed, each consisting of somewhere around
+            128 values. This assures only a few kilobytes of memory and
+            hence won't trash the cache in most cases.
+        </p><p>
+            Look-up tables can be activated by using #define before including
+            fixedpointmath.h or by using the -D command line option of your
+            compiler. Currently (as of the alpha release) the following
+            defines are supported:
+
+            <div class="informaltable"><table border="1"><colgroup><col><col></colgroup><tbody><tr><td> __FPM_ENABLE_ALL_LUT__ </td><td> Enable look-up tables for all calculations </td></tr><tr><td> __FPM_ENABLE_SQRT_LUT__ </td><td> Enable look-up tables for all square root calculations </td></tr></tbody></table></div>
+        </p><p>
+            Eventually, all mathematical functions will have their
+            look-up table equivalent. I even consider splitting it up for
+            every basic fixed point type, which could save memory.
+            Embedded systems with only limitted amount of RAM or ROM, could
+            benefit from that.
+        </p><p>
+            Example:
+
+            <pre class="programlisting">
+        #define __FPM_ENABLE_SQRT_LUT__
+        #include &lt;fixedpointmath.h&gt;
+
+        fp16p16_t a, b;
+
+        [...]
+
+        a = scrtfp16p16(b);     /* will be "looked up" and possibly
+                                 * interpolated */ </pre>
         </p></div><div class="sect1"><div class="titlepage"><div><h2 class="title" style="clear: both"><a name="precision"></a>4.2.  Precision </h2></div></div><p>
+            This section will eventually have a whole bunch of graphs that
+            show the precision and/or lack thereof of all fixed point
+            math macro's compared to 32/64-bit floating point.
         </p></div><div class="sect1"><div class="titlepage"><div><h2 class="title" style="clear: both"><a name="benchmarks"></a>4.3.  Benchmarks </h2></div></div><p>
+            This section (and possibly sub-sections) will have barcharts
+            of how the fixed point math routines compare to floating point
+            variants on different CPU/FPU's and with different compilers
+            and optimization settings.
+        </p><p>
+            Note: I already noticed that Intel's ICC, in all its wisdom,
+            completely optimizes the benchmark program to oblivion, leaving
+            only 11 clockcycles (on a Sempron 2400 CPU) for almost all
+            timing loops. Something has to be done about that :)
+        </p><p>
+            This section will also describe how to run benchmarks yourself.
         </p></div></div><div class="appendix"><div class="titlepage"><div><h2 class="title"><a name="license"></a>Appendix A.  License </h2></div></div><pre class="screen">
 		GNU Free Documentation License
 		  Version 1.2, November 2002



From nobody at sheep.berlios.de  Fri Sep  2 05:25:27 2005
From: nobody at sheep.berlios.de (ivop)
Date: Fri, 2 Sep 2005 05:25:27 +0200
Subject: [fpm-cvslog] website/docs/HTML/en advanced.html,1.1,1.2 benchmarks.html,1.1,1.2 default.css,1.4,1.5 precision.html,1.1,1.2 usage.html,1.1,1.2
Message-ID: <200509020325.j823PH618396@bat.berlios.de>

Update of /cvsroot/fpm/website/docs/HTML/en
In directory sheep:/tmp/cvs-serv542/HTML/en

Modified Files:
	advanced.html benchmarks.html default.css precision.html 
	usage.html 
Log Message:
updated docs.

I wonder why cvs diff -u correctly diffs those files that are changed,
but cvs commit thinks all other files are changed too!!

Let's see what happens when I commit this....



Index: advanced.html
===================================================================
RCS file: /cvsroot/fpm/website/docs/HTML/en/advanced.html,v
retrieving revision 1.1
retrieving revision 1.2
diff -u -d -r1.1 -r1.2
--- advanced.html	1 Sep 2005 01:02:19 -0000	1.1
+++ advanced.html	2 Sep 2005 03:24:59 -0000	1.2
@@ -3,6 +3,60 @@
       <div class="navheader"><table width="100%" summary="Navigation header"><tr><td width="20%" align="left"><a accesskey="p" href="sqrt-ln-exp-and-pow.html">Prev</a>?</td><th width="60%" align="center">?</th><td width="20%" align="right">?<a accesskey="n" href="precision.html">Next</a></td></tr></table><hr></div>
           
       <div class="chapter"><div class="titlepage"><div><h2 class="title"><a name="advanced"></a>Chapter 4.  Advanced </h2></div></div><div class="toc"><p><b>Table of Contents</b></p><dl><dt>4.1. <a href="advanced.html#look-up-tables"> Look Up Tables </a></dt><dt>4.2. <a href="precision.html"> Precision </a></dt><dt>4.3. <a href="benchmarks.html"> Benchmarks </a></dt></dl></div><div class="sect1"><div class="titlepage"><div><h2 class="title" style="clear: both"><a name="look-up-tables"></a>4.1.  Look Up Tables </h2></div></div><p>
+            By default, all mathematical functions are calculated and/or
+            approximated algorithmicly. In some cases the algorithms use
+            a few (static) temporary variables, but generally speaking,
+            they don't use large amounts of memory and in most cases they
+            are faster than their floating point equivalents.
+        </p><p>
+            In some cases though, they are not. For example, Athlon CPU's
+            "cheat" a little by using a 14-bit look-up table for square
+            root calculation and are therefore actually faster! This is
+            clearly not what we want.
+        </p><p>
+            This Fixed Point Math Macro Library also supports look-up table
+            variants of all mathematical functions. But considering its
+            fields of use, it has to be cache friendly. Large tables would
+            ruin the L1 cache. So instead of one large table, I chose to use
+            several small tables and linear interpolation for the values
+            that don't directly map to the look-up table.
+            Depending on the mathematical function that's
+            approximated and the precision that's needed, different tables
+            are used to accomplish that.
+            For example, the square root function needs more
+            precision for small values of x, but once the "curve" is mostly
+            done, it's almost a straight line and lesser samples are needed
+            to quite accurately approximate the function.
+            Depending on the fixed point type chosen and the function at hand,
+            two to four tables are needed, each consisting of somewhere around
+            128 values. This assures only a few kilobytes of memory and
+            hence won't trash the cache in most cases.
+        </p><p>
+            Look-up tables can be activated by using #define before including
+            fixedpointmath.h or by using the -D command line option of your
+            compiler. Currently (as of the alpha release) the following
+            defines are supported:
+
+            <div class="informaltable"><table border="1"><colgroup><col><col></colgroup><tbody><tr><td> __FPM_ENABLE_ALL_LUT__ </td><td> Enable look-up tables for all calculations </td></tr><tr><td> __FPM_ENABLE_SQRT_LUT__ </td><td> Enable look-up tables for all square root calculations </td></tr></tbody></table></div>
+        </p><p>
+            Eventually, all mathematical functions will have their
+            look-up table equivalent. I even consider splitting it up for
+            every basic fixed point type, which could save memory.
+            Embedded systems with only limitted amount of RAM or ROM, could
+            benefit from that.
+        </p><p>
+            Example:
+
+            <pre class="programlisting">
+        #define __FPM_ENABLE_SQRT_LUT__
+        #include &lt;fixedpointmath.h&gt;
+
+        fp16p16_t a, b;
+
+        [...]
+
+        a = scrtfp16p16(b);     /* will be "looked up" and possibly
+                                 * interpolated */ </pre>
         </p></div></div>
           
       <div class="navfooter"><hr><table width="100%" summary="Navigation footer"><tr><td width="40%" align="left"><a accesskey="p" href="sqrt-ln-exp-and-pow.html">Prev</a>?</td><td width="20%" align="center"><a accesskey="u" href="index.html">Up</a></td><td width="40%" align="right">?<a accesskey="n" href="precision.html">Next</a></td></tr><tr><td width="40%" align="left" valign="top">?</td><td width="20%" align="center"><a accesskey="h" href="index.html">Home</a></td><td width="40%" align="right" valign="top">?</td></tr></table></div>

Index: benchmarks.html
===================================================================
RCS file: /cvsroot/fpm/website/docs/HTML/en/benchmarks.html,v
retrieving revision 1.1
retrieving revision 1.2
diff -u -d -r1.1 -r1.2
--- benchmarks.html	1 Sep 2005 01:02:19 -0000	1.1
+++ benchmarks.html	2 Sep 2005 03:24:59 -0000	1.2
@@ -3,6 +3,17 @@
       <div class="navheader"><table width="100%" summary="Navigation header"><tr><td width="20%" align="left"><a accesskey="p" href="precision.html">Prev</a>?</td><th width="60%" align="center">?</th><td width="20%" align="right">?<a accesskey="n" href="license.html">Next</a></td></tr></table><hr></div>
           
       <div class="sect1"><div class="titlepage"><div><h2 class="title" style="clear: both"><a name="benchmarks"></a>4.3.  Benchmarks </h2></div></div><p>
+            This section (and possibly sub-sections) will have barcharts
+            of how the fixed point math routines compare to floating point
+            variants on different CPU/FPU's and with different compilers
+            and optimization settings.
+        </p><p>
+            Note: I already noticed that Intel's ICC, in all its wisdom,
+            completely optimizes the benchmark program to oblivion, leaving
+            only 11 clockcycles (on a Sempron 2400 CPU) for almost all
+            timing loops. Something has to be done about that :)
+        </p><p>
+            This section will also describe how to run benchmarks yourself.
         </p></div>
           
       <div class="navfooter"><hr><table width="100%" summary="Navigation footer"><tr><td width="40%" align="left"><a accesskey="p" href="precision.html">Prev</a>?</td><td width="20%" align="center"><a accesskey="u" href="advanced.html">Up</a></td><td width="40%" align="right">?<a accesskey="n" href="license.html">Next</a></td></tr><tr><td width="40%" align="left" valign="top">?</td><td width="20%" align="center"><a accesskey="h" href="index.html">Home</a></td><td width="40%" align="right" valign="top">?</td></tr></table></div>

Index: default.css
===================================================================
RCS file: /cvsroot/fpm/website/docs/HTML/en/default.css,v
retrieving revision 1.4
retrieving revision 1.5
diff -u -d -r1.4 -r1.5
--- default.css	1 Sep 2005 01:02:20 -0000	1.4
+++ default.css	2 Sep 2005 03:24:59 -0000	1.5
@@ -24,11 +24,18 @@
 	padding: 2px;
 }
 
-div.table td, div.informaltable td {
+div.table td {
 	background: #ffffff;
 	border: 0px;
 	padding: 8px;
     text-align: right;
+}
+
+div.informaltable td {
+	background: #ffffff;
+	border: 0px;
+	padding: 8px;
+    text-align: left;
 }
 
 

Index: precision.html
===================================================================
RCS file: /cvsroot/fpm/website/docs/HTML/en/precision.html,v
retrieving revision 1.1
retrieving revision 1.2
diff -u -d -r1.1 -r1.2
--- precision.html	1 Sep 2005 01:02:20 -0000	1.1
+++ precision.html	2 Sep 2005 03:24:59 -0000	1.2
@@ -3,6 +3,9 @@
       <div class="navheader"><table width="100%" summary="Navigation header"><tr><td width="20%" align="left"><a accesskey="p" href="advanced.html">Prev</a>?</td><th width="60%" align="center">?</th><td width="20%" align="right">?<a accesskey="n" href="benchmarks.html">Next</a></td></tr></table><hr></div>
           
       <div class="sect1"><div class="titlepage"><div><h2 class="title" style="clear: both"><a name="precision"></a>4.2.  Precision </h2></div></div><p>
+            This section will eventually have a whole bunch of graphs that
+            show the precision and/or lack thereof of all fixed point
+            math macro's compared to 32/64-bit floating point.
         </p></div>
           
       <div class="navfooter"><hr><table width="100%" summary="Navigation footer"><tr><td width="40%" align="left"><a accesskey="p" href="advanced.html">Prev</a>?</td><td width="20%" align="center"><a accesskey="u" href="advanced.html">Up</a></td><td width="40%" align="right">?<a accesskey="n" href="benchmarks.html">Next</a></td></tr><tr><td width="40%" align="left" valign="top">?</td><td width="20%" align="center"><a accesskey="h" href="index.html">Home</a></td><td width="40%" align="right" valign="top">?</td></tr></table></div>

Index: usage.html
===================================================================
RCS file: /cvsroot/fpm/website/docs/HTML/en/usage.html,v
retrieving revision 1.1
retrieving revision 1.2
diff -u -d -r1.1 -r1.2
--- usage.html	1 Sep 2005 01:02:20 -0000	1.1
+++ usage.html	2 Sep 2005 03:24:59 -0000	1.2
@@ -23,8 +23,8 @@
             type.
 
             <pre class="programlisting">
-                ufp16p16_t x, y;
-                fp16p16_t matrix[16][16]; </pre>
+        ufp16p16_t x, y;
+        fp16p16_t matrix[16][16]; </pre>
         </p></div></div>
           
       <div class="navfooter"><hr><table width="100%" summary="Navigation footer"><tr><td width="40%" align="left"><a accesskey="p" href="tweaking-the-build-process.html">Prev</a>?</td><td width="20%" align="center"><a accesskey="u" href="index.html">Up</a></td><td width="40%" align="right">?<a accesskey="n" href="type-conversion.html">Next</a></td></tr><tr><td width="40%" align="left" valign="top">?</td><td width="20%" align="center"><a accesskey="h" href="index.html">Home</a></td><td width="40%" align="right" valign="top">?</td></tr></table></div>



From ivop at euronet.nl  Fri Sep  2 05:30:06 2005
From: ivop at euronet.nl (Ivo)
Date: Fri, 2 Sep 2005 05:30:06 +0200
Subject: [fpm-cvslog] website/docs/HTML/en advanced.html,1.1,1.2 benchmarks.html,1.1,1.2 default.css,1.4,1.5 precision.html,1.1,1.2 usage.html,1.1,1.2
In-Reply-To: <200509020325.j823PH618396@bat.berlios.de>
References: <200509020325.j823PH618396@bat.berlios.de>
Message-ID: <200509020530.06404.ivop@euronet.nl>

On Friday 02 September 2005 05:25, ivop wrote:
> Update of /cvsroot/fpm/website/docs/HTML/en
> In directory sheep:/tmp/cvs-serv542/HTML/en
>
> Modified Files:
> 	advanced.html benchmarks.html default.css precision.html
> 	usage.html
> Log Message:
> updated docs.
>
> I wonder why cvs diff -u correctly diffs those files that are changed,
> but cvs commit thinks all other files are changed too!!
>
> Let's see what happens when I commit this....

So, when it actually gets committed, cvs gets sane again. But why oh why, 
does it list _all_ files as modified when vi pops up for the commit 
message?

[..]

--Ivo



From nobody at sheep.berlios.de  Fri Sep  2 06:09:06 2005
From: nobody at sheep.berlios.de (ivop)
Date: Fri, 2 Sep 2005 06:09:06 +0200
Subject: [fpm-cvslog] website/docs/HTML/en advanced.html,1.2,1.3
Message-ID: <200509020409.j8248u620005@bat.berlios.de>

Update of /cvsroot/fpm/website/docs/HTML/en
In directory sheep:/tmp/cvs-serv12336/docs/HTML/en

Modified Files:
	advanced.html 
Log Message:
typo's



Index: advanced.html
===================================================================
RCS file: /cvsroot/fpm/website/docs/HTML/en/advanced.html,v
retrieving revision 1.2
retrieving revision 1.3
diff -u -d -r1.2 -r1.3
--- advanced.html	2 Sep 2005 03:24:59 -0000	1.2
+++ advanced.html	2 Sep 2005 04:08:38 -0000	1.3
@@ -25,7 +25,7 @@
             are used to accomplish that.
             For example, the square root function needs more
             precision for small values of x, but once the "curve" is mostly
-            done, it's almost a straight line and lesser samples are needed
+            done, it's almost a straight line and less samples are needed
             to quite accurately approximate the function.
             Depending on the fixed point type chosen and the function at hand,
             two to four tables are needed, each consisting of somewhere around
@@ -55,7 +55,7 @@
 
         [...]
 
-        a = scrtfp16p16(b);     /* will be "looked up" and possibly
+        a = sqrtfp16p16(b);     /* will be "looked up" and possibly
                                  * interpolated */ </pre>
         </p></div></div>
           



From nobody at sheep.berlios.de  Fri Sep  2 06:09:06 2005
From: nobody at sheep.berlios.de (ivop)
Date: Fri, 2 Sep 2005 06:09:06 +0200
Subject: [fpm-cvslog] website/docs/HTML-single/en index.html,1.4,1.5
Message-ID: <200509020409.j8248u620007@bat.berlios.de>

Update of /cvsroot/fpm/website/docs/HTML-single/en
In directory sheep:/tmp/cvs-serv12336/docs/HTML-single/en

Modified Files:
	index.html 
Log Message:
typo's



Index: index.html
===================================================================
RCS file: /cvsroot/fpm/website/docs/HTML-single/en/index.html,v
retrieving revision 1.4
retrieving revision 1.5
diff -u -d -r1.4 -r1.5
--- index.html	2 Sep 2005 03:25:00 -0000	1.4
+++ index.html	2 Sep 2005 04:08:39 -0000	1.5
@@ -294,7 +294,7 @@
             are used to accomplish that.
             For example, the square root function needs more
             precision for small values of x, but once the "curve" is mostly
-            done, it's almost a straight line and lesser samples are needed
+            done, it's almost a straight line and less samples are needed
             to quite accurately approximate the function.
             Depending on the fixed point type chosen and the function at hand,
             two to four tables are needed, each consisting of somewhere around
@@ -324,7 +324,7 @@
 
         [...]
 
-        a = scrtfp16p16(b);     /* will be "looked up" and possibly
+        a = sqrtfp16p16(b);     /* will be "looked up" and possibly
                                  * interpolated */ </pre>
         </p></div><div class="sect1"><div class="titlepage"><div><h2 class="title" style="clear: both"><a name="precision"></a>4.2.  Precision </h2></div></div><p>
             This section will eventually have a whole bunch of graphs that



From nobody at sheep.berlios.de  Fri Sep  2 06:10:06 2005
From: nobody at sheep.berlios.de (ivop)
Date: Fri, 2 Sep 2005 06:10:06 +0200
Subject: [fpm-cvslog] fpm/docs/xml/en advanced.xml,1.2,1.3
Message-ID: <200509020410.j8249u620041@bat.berlios.de>

Update of /cvsroot/fpm/fpm/docs/xml/en
In directory sheep:/tmp/cvs-serv12380/xml/en

Modified Files:
	advanced.xml 
Log Message:
typo's



Index: advanced.xml
===================================================================
RCS file: /cvsroot/fpm/fpm/docs/xml/en/advanced.xml,v
retrieving revision 1.2
retrieving revision 1.3
diff -u -d -r1.2 -r1.3
--- advanced.xml	2 Sep 2005 03:12:44 -0000	1.2
+++ advanced.xml	2 Sep 2005 04:09:39 -0000	1.3
@@ -35,7 +35,7 @@
             are used to accomplish that.
             For example, the square root function needs more
             precision for small values of x, but once the "curve" is mostly
-            done, it's almost a straight line and lesser samples are needed
+            done, it's almost a straight line and less samples are needed
             to quite accurately approximate the function.
             Depending on the fixed point type chosen and the function at hand,
             two to four tables are needed, each consisting of somewhere around
@@ -84,7 +84,7 @@
 
         [...]
 
-        a = scrtfp16p16(b);     /* will be "looked up" and possibly
+        a = sqrtfp16p16(b);     /* will be "looked up" and possibly
                                  * interpolated */ </programlisting>
         </para>
             



From nobody at sheep.berlios.de  Fri Sep  2 15:51:04 2005
From: nobody at sheep.berlios.de (ivop)
Date: Fri, 2 Sep 2005 15:51:04 +0200
Subject: [fpm-cvslog] fpm/docs/xml/en gettingstarted.xml,1.4,1.5 usage.xml,1.2,1.3
Message-ID: <200509021351.j82Dos603712@bat.berlios.de>

Update of /cvsroot/fpm/fpm/docs/xml/en
In directory sheep:/tmp/cvs-serv16814

Modified Files:
	gettingstarted.xml usage.xml 
Log Message:
minor fixes.



Index: gettingstarted.xml
===================================================================
RCS file: /cvsroot/fpm/fpm/docs/xml/en/gettingstarted.xml,v
retrieving revision 1.4
retrieving revision 1.5
diff -u -d -r1.4 -r1.5
--- gettingstarted.xml	1 Sep 2005 00:14:48 -0000	1.4
+++ gettingstarted.xml	2 Sep 2005 13:50:37 -0000	1.5
@@ -9,7 +9,7 @@
         <title> System requirements </title>
         <para>
             Basically, all you need is a decent C-compiler. If your compiler
-            doesn't accept the -MM command line option for generation of
+            doesn't accept the -MM command line option for generating
             <application>make</application>
             dependencies, you need to have
             <application>makedepend</application> installed.

Index: usage.xml
===================================================================
RCS file: /cvsroot/fpm/fpm/docs/xml/en/usage.xml,v
retrieving revision 1.2
retrieving revision 1.3
diff -u -d -r1.2 -r1.3
--- usage.xml	2 Sep 2005 03:12:44 -0000	1.2
+++ usage.xml	2 Sep 2005 13:50:37 -0000	1.3
@@ -108,7 +108,7 @@
 
         <para>
             Declaring variables of certain types is as simple as with any
-            type.
+            type:
 
             <programlisting>
         ufp16p16_t x, y;
@@ -153,6 +153,9 @@
 
         <para>
             Similar macro's exist for all other fixed point types.
+        </para>
+        <para>
+            Example:
 
             <programlisting>
         int        a;
@@ -193,6 +196,9 @@
         </para>
         <para>
             Again, similar macro's exist for all other fixed point types.
+        </para>
+        <para>
+            Example:
 
             <programlisting>
         fp16p16_t a;
@@ -207,7 +213,10 @@
             Their names are structured analog to the above macro's. Note that
             there are no explicit macro's to convert between signed and
             unsigned types. If you want to do that, you have to know exactly
-            what you are doing will work correctly.
+            that what you are doing will work correctly.
+        </para>
+        <para>
+            Example:
 
             <programlisting>
         fp24p8_t   a;
@@ -228,6 +237,9 @@
         <para>
             For addition and substraction, all fixed point variables can be
             treated as if they were normal variables.
+        </para>
+        <para>
+            Example:
 
             <programlisting>
         fp16p16_t x, y, z;
@@ -255,6 +267,9 @@
         <para>
             Both arguments have to be of the same type and can be other
             variables, constants or the same variable.
+        </para>
+        <para>
+            Example:
 
             <programlisting>
         fp8p8_t   x, y, z;
@@ -314,6 +329,9 @@
             For all seven other types, similar macro's exist.
             Also, be aware that the exp and pow macro's easily overflow your
             variables!
+        </para>
+        <para>
+            Example:
 
             <programlisting>
         fp24p8_t a;



From nobody at sheep.berlios.de  Fri Sep  2 15:53:10 2005
From: nobody at sheep.berlios.de (ivop)
Date: Fri, 2 Sep 2005 15:53:10 +0200
Subject: [fpm-cvslog] website/docs/HTML/en doing-calculations.html,1.1,1.2 getting-started.html,1.2,1.3 sqrt-ln-exp-and-pow.html,1.1,1.2 type-conversion.html,1.1,1.2 usage.html,1.2,1.3
Message-ID: <200509021353.j82Dr0603773@bat.berlios.de>

Update of /cvsroot/fpm/website/docs/HTML/en
In directory sheep:/tmp/cvs-serv16952/HTML/en

Modified Files:
	doing-calculations.html getting-started.html 
	sqrt-ln-exp-and-pow.html type-conversion.html usage.html 
Log Message:
minor fixes.



Index: doing-calculations.html
===================================================================
RCS file: /cvsroot/fpm/website/docs/HTML/en/doing-calculations.html,v
retrieving revision 1.1
retrieving revision 1.2
diff -u -d -r1.1 -r1.2
--- doing-calculations.html	1 Sep 2005 01:02:20 -0000	1.1
+++ doing-calculations.html	2 Sep 2005 13:52:42 -0000	1.2
@@ -5,6 +5,8 @@
       <div class="sect1"><div class="titlepage"><div><h2 class="title" style="clear: both"><a name="doing-calculations"></a>3.3.  Doing calculations </h2></div></div><p>
             For addition and substraction, all fixed point variables can be
             treated as if they were normal variables.
+        </p><p>
+            Example:
 
             <pre class="programlisting">
         fp16p16_t x, y, z;
@@ -27,6 +29,8 @@
         </p><p>
             Both arguments have to be of the same type and can be other
             variables, constants or the same variable.
+        </p><p>
+            Example:
 
             <pre class="programlisting">
         fp8p8_t   x, y, z;

Index: getting-started.html
===================================================================
RCS file: /cvsroot/fpm/website/docs/HTML/en/getting-started.html,v
retrieving revision 1.2
retrieving revision 1.3
diff -u -d -r1.2 -r1.3
--- getting-started.html	31 Aug 2005 02:05:57 -0000	1.2
+++ getting-started.html	2 Sep 2005 13:52:42 -0000	1.3
@@ -4,7 +4,7 @@
           
       <div class="chapter"><div class="titlepage"><div><h2 class="title"><a name="getting-started"></a>Chapter 2.  Getting started </h2></div></div><div class="toc"><p><b>Table of Contents</b></p><dl><dt>2.1. <a href="getting-started.html#system-requirements"> System requirements </a></dt><dt>2.2. <a href="compilation-and-installation.html"> Compilation and installation </a></dt><dt>2.3. <a href="tweaking-the-build-process.html"> Tweaking the build process </a></dt></dl></div><div class="sect1"><div class="titlepage"><div><h2 class="title" style="clear: both"><a name="system-requirements"></a>2.1.  System requirements </h2></div></div><p>
             Basically, all you need is a decent C-compiler. If your compiler
-            doesn't accept the -MM command line option for generation of
+            doesn't accept the -MM command line option for generating
             <b>make</b>
             dependencies, you need to have
             <b>makedepend</b> installed.

Index: sqrt-ln-exp-and-pow.html
===================================================================
RCS file: /cvsroot/fpm/website/docs/HTML/en/sqrt-ln-exp-and-pow.html,v
retrieving revision 1.1
retrieving revision 1.2
diff -u -d -r1.1 -r1.2
--- sqrt-ln-exp-and-pow.html	1 Sep 2005 01:02:20 -0000	1.1
+++ sqrt-ln-exp-and-pow.html	2 Sep 2005 13:52:42 -0000	1.2
@@ -15,6 +15,8 @@
             For all seven other types, similar macro's exist.
             Also, be aware that the exp and pow macro's easily overflow your
             variables!
+        </p><p>
+            Example:
 
             <pre class="programlisting">
         fp24p8_t a;

Index: type-conversion.html
===================================================================
RCS file: /cvsroot/fpm/website/docs/HTML/en/type-conversion.html,v
retrieving revision 1.1
retrieving revision 1.2
diff -u -d -r1.1 -r1.2
--- type-conversion.html	1 Sep 2005 01:02:20 -0000	1.1
+++ type-conversion.html	2 Sep 2005 13:52:42 -0000	1.2
@@ -11,6 +11,8 @@
             <div class="table"><p><b>Table 3.2.  Type conversion to fp8p8_t </b></p><table summary=" Type conversion to fp8p8_t " border="1"><colgroup><col><col></colgroup><thead><tr><th> from </th><th> fp8p8_t </th></tr></thead><tbody><tr><td> int </td><td> itofp8p8(x) </td></tr><tr><td> float </td><td> ftofp8p8(x) </td></tr><tr><td> double </td><td> dtofp8p8(x) </td></tr></tbody></table></div>
         </p><p>
             Similar macro's exist for all other fixed point types.
+        </p><p>
+            Example:
 
             <pre class="programlisting">
         int        a;
@@ -29,6 +31,8 @@
             <div class="table"><p><b>Table 3.3.  Type conversion from fp8p8_t </b></p><table summary=" Type conversion from fp8p8_t " border="1"><colgroup><col><col><col><col></colgroup><thead><tr><th> from </th><th> int </th><th> float </th><th> double </th></tr></thead><tbody><tr><td> fp8p8_t </td><td> fp8p8toi(x) </td><td> fp8p8tof(x) </td><td> fp8p8tod(x) </td></tr></tbody></table></div>
         </p><p>
             Again, similar macro's exist for all other fixed point types.
+        </p><p>
+            Example:
 
             <pre class="programlisting">
         fp16p16_t a;
@@ -42,7 +46,9 @@
             Their names are structured analog to the above macro's. Note that
             there are no explicit macro's to convert between signed and
             unsigned types. If you want to do that, you have to know exactly
-            what you are doing will work correctly.
+            that what you are doing will work correctly.
+        </p><p>
+            Example:
 
             <pre class="programlisting">
         fp24p8_t   a;

Index: usage.html
===================================================================
RCS file: /cvsroot/fpm/website/docs/HTML/en/usage.html,v
retrieving revision 1.2
retrieving revision 1.3
diff -u -d -r1.2 -r1.3
--- usage.html	2 Sep 2005 03:24:59 -0000	1.2
+++ usage.html	2 Sep 2005 13:52:42 -0000	1.3
@@ -20,7 +20,7 @@
             <div class="table"><p><b>Table 3.1.  Basic types </b></p><table summary=" Basic types " border="1"><colgroup><col><col><col><col><col><col></colgroup><thead><tr><th> type </th><th> total </th><th> fraction </th><th> min </th><th> max </th><th> precision </th></tr></thead><tbody><tr><td> fp8p8_t </td><td> 16 </td><td> 8 </td><td> -128.999... </td><td> 127.999... </td><td> 0.00390625 </td></tr><tr><td> fp24p8_t </td><td> 32 </td><td> 8 </td><td> -8388608.999... </td><td> 8388607.999... </td><td> 0.00390625 </td></tr><tr><td> fp16p16_t </td><td> 32 </td><td> 16 </td><td> -32768.999... </td><td> 32767.999... </td><td> 0.00001526 </td></tr><tr><td> fp8p24_t </td><td> 32 </td><td> 24 </td><td> -128.999... </td><td> 127.999... </td><td> 0.00000006 </td></tr><tr><td> ufp8p8_t </td><td> 16 </td><td> 8 </td><td> 0.0 </td><td> 255.999... </td><td> 0.00390625 </td></tr><tr><td> ufp24p8_t </td><td> 32 </td><td> 8 </td><td> 0.0 </td><td> 16777215.999... </td><td> 0.00390625 </td></tr><tr><td> ufp16p16_t </td><td> 32 </td><td> 16 </td><td> 0.0 </td><td> 65535.999... </td><td> 0.00001526 </td></tr><tr><td> ufp8p24_t </td><td> 32 </td><td> 24 </td><td> 0.0 </td><td> 255.999... </td><td> 0.00000006 </td></tr></tbody></table></div>
         </p><p>
             Declaring variables of certain types is as simple as with any
-            type.
+            type:
 
             <pre class="programlisting">
         ufp16p16_t x, y;



From nobody at sheep.berlios.de  Fri Sep  2 15:53:10 2005
From: nobody at sheep.berlios.de (ivop)
Date: Fri, 2 Sep 2005 15:53:10 +0200
Subject: [fpm-cvslog] website/docs/HTML-single/en index.html,1.5,1.6
Message-ID: <200509021353.j82Dr0603775@bat.berlios.de>

Update of /cvsroot/fpm/website/docs/HTML-single/en
In directory sheep:/tmp/cvs-serv16952/HTML-single/en

Modified Files:
	index.html 
Log Message:
minor fixes.



Index: index.html
===================================================================
RCS file: /cvsroot/fpm/website/docs/HTML-single/en/index.html,v
retrieving revision 1.5
retrieving revision 1.6
diff -u -d -r1.5 -r1.6
--- index.html	2 Sep 2005 04:08:39 -0000	1.5
+++ index.html	2 Sep 2005 13:52:43 -0000	1.6
@@ -37,7 +37,7 @@
                 </p></li></ul></div>
         </p></div></div><div class="chapter"><div class="titlepage"><div><h2 class="title"><a name="getting-started"></a>Chapter 2.  Getting started </h2></div></div><div class="toc"><p><b>Table of Contents</b></p><dl><dt>2.1. <a href="#system-requirements"> System requirements </a></dt><dt>2.2. <a href="#compilation-and-installation"> Compilation and installation </a></dt><dt>2.3. <a href="#tweaking-the-build-process"> Tweaking the build process </a></dt></dl></div><div class="sect1"><div class="titlepage"><div><h2 class="title" style="clear: both"><a name="system-requirements"></a>2.1.  System requirements </h2></div></div><p>
             Basically, all you need is a decent C-compiler. If your compiler
-            doesn't accept the -MM command line option for generation of
+            doesn't accept the -MM command line option for generating
             <b>make</b>
             dependencies, you need to have
             <b>makedepend</b> installed.
@@ -157,7 +157,7 @@
             <div class="table"><p><b>Table 3.1.  Basic types </b></p><table summary=" Basic types " border="1"><colgroup><col><col><col><col><col><col></colgroup><thead><tr><th> type </th><th> total </th><th> fraction </th><th> min </th><th> max </th><th> precision </th></tr></thead><tbody><tr><td> fp8p8_t </td><td> 16 </td><td> 8 </td><td> -128.999... </td><td> 127.999... </td><td> 0.00390625 </td></tr><tr><td> fp24p8_t </td><td> 32 </td><td> 8 </td><td> -8388608.999... </td><td> 8388607.999... </td><td> 0.00390625 </td></tr><tr><td> fp16p16_t </td><td> 32 </td><td> 16 </td><td> -32768.999... </td><td> 32767.999... </td><td> 0.00001526 </td></tr><tr><td> fp8p24_t </td><td> 32 </td><td> 24 </td><td> -128.999... </td><td> 127.999... </td><td> 0.00000006 </td></tr><tr><td> ufp8p8_t </td><td> 16 </td><td> 8 </td><td> 0.0 </td><td> 255.999... </td><td> 0.00390625 </td></tr><tr><td> ufp24p8_t </td><td> 32 </td><td> 8 </td><td> 0.0 </td><td> 16777215.999... </td><td> 0.00390625 </td></tr><tr><td> ufp16p16_t </td><td> 32 </td><td> 16 </td><td> 0.0 </td><td> 65535.999... </td><td> 0.00001526 </td></tr><tr><td> ufp8p24_t </td><td> 32 </td><td> 24 </td><td> 0.0 </td><td> 255.999... </td><td> 0.00000006 </td></tr></tbody></table></div>
         </p><p>
             Declaring variables of certain types is as simple as with any
-            type.
+            type:
 
             <pre class="programlisting">
         ufp16p16_t x, y;
@@ -171,6 +171,8 @@
             <div class="table"><p><b>Table 3.2.  Type conversion to fp8p8_t </b></p><table summary=" Type conversion to fp8p8_t " border="1"><colgroup><col><col></colgroup><thead><tr><th> from </th><th> fp8p8_t </th></tr></thead><tbody><tr><td> int </td><td> itofp8p8(x) </td></tr><tr><td> float </td><td> ftofp8p8(x) </td></tr><tr><td> double </td><td> dtofp8p8(x) </td></tr></tbody></table></div>
         </p><p>
             Similar macro's exist for all other fixed point types.
+        </p><p>
+            Example:
 
             <pre class="programlisting">
         int        a;
@@ -189,6 +191,8 @@
             <div class="table"><p><b>Table 3.3.  Type conversion from fp8p8_t </b></p><table summary=" Type conversion from fp8p8_t " border="1"><colgroup><col><col><col><col></colgroup><thead><tr><th> from </th><th> int </th><th> float </th><th> double </th></tr></thead><tbody><tr><td> fp8p8_t </td><td> fp8p8toi(x) </td><td> fp8p8tof(x) </td><td> fp8p8tod(x) </td></tr></tbody></table></div>
         </p><p>
             Again, similar macro's exist for all other fixed point types.
+        </p><p>
+            Example:
 
             <pre class="programlisting">
         fp16p16_t a;
@@ -202,7 +206,9 @@
             Their names are structured analog to the above macro's. Note that
             there are no explicit macro's to convert between signed and
             unsigned types. If you want to do that, you have to know exactly
-            what you are doing will work correctly.
+            that what you are doing will work correctly.
+        </p><p>
+            Example:
 
             <pre class="programlisting">
         fp24p8_t   a;
@@ -217,6 +223,8 @@
         </p></div><div class="sect1"><div class="titlepage"><div><h2 class="title" style="clear: both"><a name="doing-calculations"></a>3.3.  Doing calculations </h2></div></div><p>
             For addition and substraction, all fixed point variables can be
             treated as if they were normal variables.
+        </p><p>
+            Example:
 
             <pre class="programlisting">
         fp16p16_t x, y, z;
@@ -239,6 +247,8 @@
         </p><p>
             Both arguments have to be of the same type and can be other
             variables, constants or the same variable.
+        </p><p>
+            Example:
 
             <pre class="programlisting">
         fp8p8_t   x, y, z;
@@ -264,6 +274,8 @@
             For all seven other types, similar macro's exist.
             Also, be aware that the exp and pow macro's easily overflow your
             variables!
+        </p><p>
+            Example:
 
             <pre class="programlisting">
         fp24p8_t a;



From nobody at sheep.berlios.de  Sun Sep  4 04:00:16 2005
From: nobody at sheep.berlios.de (ivop)
Date: Sun, 4 Sep 2005 04:00:16 +0200
Subject: [fpm-cvslog] fpm .cvsignore,1.5,1.6
Message-ID: <200509040200.j8420G125000@bat.berlios.de>

Update of /cvsroot/fpm/fpm
In directory sheep:/tmp/cvs-serv31205

Modified Files:
	.cvsignore 
Log Message:
ignore precision stuff. it's almost time to commit all the code ;-)



Index: .cvsignore
===================================================================
RCS file: /cvsroot/fpm/fpm/.cvsignore,v
retrieving revision 1.5
retrieving revision 1.6
diff -u -d -r1.5 -r1.6
--- .cvsignore	25 Aug 2005 22:37:29 -0000	1.5
+++ .cvsignore	4 Sep 2005 02:00:12 -0000	1.6
@@ -1,11 +1,15 @@
 deps
 barcharts
+graphs
 test
 genlut
 benchmark
 benchmarklut
+precision
+precisionlut
 configure.log
 config.mak
 config.sh
 benchmark.dat
 benchmarklut.dat
+precision.dat



From nobody at sheep.berlios.de  Mon Sep  5 02:39:47 2005
From: nobody at sheep.berlios.de (ivop)
Date: Mon, 5 Sep 2005 02:39:47 +0200
Subject: [fpm-cvslog] fpm/tools - New directory
Message-ID: <200509050039.j850dl128427@bat.berlios.de>

Update of /cvsroot/fpm/fpm/tools
In directory sheep:/tmp/cvs-serv16427/tools

Log Message:
Directory /cvsroot/fpm/fpm/tools added to the repository




From nobody at sheep.berlios.de  Mon Sep  5 02:40:35 2005
From: nobody at sheep.berlios.de (ivop)
Date: Mon, 5 Sep 2005 02:40:35 +0200
Subject: [fpm-cvslog] fpm/tools checktree.sh,NONE,1.1
Message-ID: <200509050040.j850eZ128464@bat.berlios.de>

Update of /cvsroot/fpm/fpm/tools
In directory sheep:/tmp/cvs-serv16718/tools

Added Files:
	checktree.sh 
Log Message:
my mplayer checktree script is also handy here



--- NEW FILE: checktree.sh ---
#!/bin/sh

# -----------------------------------------------------------------------------

# Check source-tree for anomalies
#
# (C)opyright 2005 by Ivo van Poorten
# Licensed under GNU General Public License version 2
#
# Thanks to Melchior Franz of the FlightGear project for the original idea
# of a source-tree checker and Torinthiel for the feedback along the way.

# $Id: checktree.sh,v 1.1 2005/09/05 00:40:31 ivop Exp $

# -----------------------------------------------------------------------------

# Default settings

_spaces=yes
_extensions=yes
_crlf=yes
_trailws=no
_rcsid=no
_oll=no

_color=yes
_head=yes
_cvs=yes
_files=

# -----------------------------------------------------------------------------

# Avoid locale problems

export LC_ALL=C

# -----------------------------------------------------------------------------

# Helper functions

enable_all_tests() {
    _spaces=yes
    _extensions=yes
    _crlf=yes
    _trailws=yes
    _rcsid=yes
    _oll=yes
}

disable_all_tests() {
    _spaces=no
    _extensions=no
    _crlf=no
    _trailws=no
    _rcsid=no
    _oll=no
}

printoption() {
    echo "  -(no)$1  $2 [default: $3]"
}

printhead() {
    test "$_head" = "yes" && echo -e "$COLB$1$COLE"
}

all_filenames() {
    test "$_files" != "" && echo "$_files" && return

    if [ "$_cvs" == "no" ]; then
        find . -type f \
        | grep -v "\.\#\|\~$\|\.depend\|\/CVS\/\|config.mak\|^\./config\.h" \
        | grep -v "^\./version\.h\|\.o$\|\.a$"
    else
        list_cvs .
    fi
}

list_cvs() {
    for i in `grep "^/" $1/CVS/Entries | cut -d '/' -f 2`; do
        echo $1/$i
    done
    for j in `grep "^D/" $1/CVS/Entries | cut -d '/' -f 2`; do
        list_cvs $1/$j
    done
}

# -----------------------------------------------------------------------------

# Parse command line

for i in "$@"; do
    case "$i" in
    -help)
        echo -e "\n$0 [options] [files]\n"
        echo -e "options:\n"
        printoption "spaces    " "test for spaces in filenames" "$_spaces"
        printoption "extensions" "test for uppercase extensions" "$_extensions"
        printoption "crlf      " "test for MSDOS line endings" "$_crlf"
        printoption "trailws   " "test for trailing whitespace" "$_trailws"
        printoption "rcsid     " "test for missing RCS Id's" "$_rcsid"
        printoption "oll       " "test for overly long lines" "$_oll"
        echo
        printoption "all       " "enable all tests" "no"
        echo
        printoption "color     " "colored output" "$_color"
        printoption "head      " "print heading for each test" "$_head"
        printoption "cvs       " "use CVS/ to determine which files to check" \
                                                                        "$_cvs"
        echo -e "\nIf no files are specified, the whole tree is traversed."
        echo -e "If there are, -(no)cvs has no effect.\n"
        exit
        ;;
    -oll)
        _oll=yes
        ;;
    -nooll)
        _oll=no
        ;;
    -cvs)
        _cvs=yes
        ;;
    -nocvs)
        _cvs=no
        ;;
    -head)
        _head=yes
        ;;
    -nohead)
        _head=no
        ;;
    -color)
        _color=yes
        ;;
    -nocolor)
        _color=no
        ;;
    -spaces)
        _spaces=yes
        ;;
    -nospaces)
        _spaces=no
        ;;
    -extensions)
        _extensions=yes
        ;;
    -noextensions)
        _extensions=no
        ;;
    -crlf)
        _crlf=yes
        ;;
    -nocrlf)
        _crlf=no
        ;;
    -trailws)
        _trailws=yes
        ;;
    -notrailws)
        _trailws=no
        ;;
    -rcsid)
        _rcsid=yes
        ;;
    -norcsid)
        _rcsid=no
        ;;
    -all)
        enable_all_tests
        ;;
    -noall)
        disable_all_tests
        ;;
    -none)
        disable_all
        ;;
    -*)
        echo "unknown option: $i" >&2
        exit 0
        ;;
    *)
        _files="$_files $i"
        ;;
    esac
done

# -----------------------------------------------------------------------------

# Set heading color

if [ "$_color" == "yes" ]; then
    COLB="\e[36m"
    COLE="\e[m"
else
    COLB=""
    COLE=""
fi

# Generate filelist once so -cvs isn't _that_ much slower than -nocvs anymore

filelist=`all_filenames`

# -----------------------------------------------------------------------------

# DO CHECKS

# -----------------------------------------------------------------------------

if [ "$_spaces" == "yes" ]; then
    printhead "checking for spaces in filenames ..."
    find . | grep " "
fi

# -----------------------------------------------------------------------------

if [ "$_extensions" == "yes" ]; then
    printhead "checking for uppercase extensions ..."
    echo $filelist | grep "\.[[:upper:]]\+$" | grep -v "\.S$"
fi

# -----------------------------------------------------------------------------

if [ "$_crlf" == "yes" ]; then
    printhead "checking for MSDOS line endings ..."
    grep -l -I "
" $filelist
fi

# -----------------------------------------------------------------------------

if [ "$_trailws" == "yes" ]; then
    printhead "checking for trailing whitespace ..."
    grep -l -I "[[:space:]]\+$" $filelist
fi

# -----------------------------------------------------------------------------

if [ "$_rcsid" == "yes" ]; then
    printhead "checking for missing RCS \$Id\$ or \$Revision\$ tags ..."
    grep -L -I "\$\(Id\|Revision\)[[:print:]]\+\$" $filelist
fi

# -----------------------------------------------------------------------------

if [ "$_oll" == "yes" ]; then
    printhead "checking for overly long lines (over 79 characters) ..."
    grep -l -I "^[[:print:]]\{80,\}$" $filelist
fi

# -----------------------------------------------------------------------------

# End




From nobody at sheep.berlios.de  Mon Sep  5 02:42:09 2005
From: nobody at sheep.berlios.de (ivop)
Date: Mon, 5 Sep 2005 02:42:09 +0200
Subject: [fpm-cvslog] fpm/docs/xml Makefile,1.1,1.2 Makefile.inc,1.1,1.2 README,1.1,1.2 configure,1.1,1.2 default.css,1.5,1.6 html-common.xsl,1.3,1.4 postproc.sh,1.1,1.2
Message-ID: <200509050042.j850g9128506@bat.berlios.de>

Update of /cvsroot/fpm/fpm/docs/xml
In directory sheep:/tmp/cvs-serv17637/docs/xml

Modified Files:
	Makefile Makefile.inc README configure default.css 
	html-common.xsl postproc.sh 
Log Message:
remove trailing whitespace, add Id tags, fix overly long lines



Index: Makefile
===================================================================
RCS file: /cvsroot/fpm/fpm/docs/xml/Makefile,v
retrieving revision 1.1
retrieving revision 1.2
diff -u -d -r1.1 -r1.2
--- Makefile	30 Aug 2005 00:00:04 -0000	1.1
+++ Makefile	5 Sep 2005 00:42:06 -0000	1.2
@@ -1,5 +1,7 @@
 # Makefile for generating the HTML documentation
 
+# $Id$
+
 # List of subdirectories to be processed.
 SUBDIRS = en
 

Index: Makefile.inc
===================================================================
RCS file: /cvsroot/fpm/fpm/docs/xml/Makefile.inc,v
retrieving revision 1.1
retrieving revision 1.2
diff -u -d -r1.1 -r1.2
--- Makefile.inc	30 Aug 2005 00:00:04 -0000	1.1
+++ Makefile.inc	5 Sep 2005 00:42:06 -0000	1.2
@@ -1,6 +1,8 @@
 #
 # Makefile.inc for Makefiles in subdirectories.
 #
+# $Id$
+#
 
 # Use customized html-chunk.xsl and/or html-single.xsl file if they exist...
 # Also add html-common.xsl to depends if it exists.

Index: README
===================================================================
RCS file: /cvsroot/fpm/fpm/docs/xml/README,v
retrieving revision 1.1
retrieving revision 1.2
diff -u -d -r1.1 -r1.2
--- README	30 Aug 2005 00:00:04 -0000	1.1
+++ README	5 Sep 2005 00:42:06 -0000	1.2
@@ -1,2 +1,4 @@
+$Id$
+
 The documentation build-system is mostly borrowed from the MPlayer project
 (see: http://www.mplayerhq.hu/) and is all licensed under version 2 of the GPL.

Index: configure
===================================================================
RCS file: /cvsroot/fpm/fpm/docs/xml/configure,v
retrieving revision 1.1
retrieving revision 1.2
diff -u -d -r1.1 -r1.2
--- configure	30 Aug 2005 00:00:03 -0000	1.1
+++ configure	5 Sep 2005 00:42:06 -0000	1.2
@@ -1,5 +1,7 @@
 #!/bin/sh
 
+# $Id$
+
 # Script to check for catalogs, stylesheets, XSL processors and all
 # the other stuff necessary to convert the XML documentation.
 
@@ -43,7 +45,7 @@
   /usr/local/share/sgml/docbook/stylesheet/xsl/nwalsh/html/chunk.xsl \
   /usr/local/share/sgml/docbook/yelp/docbook/html/chunk.xsl \
   /usr/share/docbook-xsl/html/chunk.xsl \
-  /usr/share/sgml/docbook/xsl-stylesheets*/html/chunk.xsl 
+  /usr/share/sgml/docbook/xsl-stylesheets*/html/chunk.xsl
 do
   if test -f "$_try_chunk_xsl"
   then
@@ -68,7 +70,7 @@
   /usr/local/share/sgml/docbook/stylesheet/xsl/nwalsh/html/docbook.xsl \
   /usr/local/share/sgml/docbook/yelp/docbook/html/docbook.xsl \
   /usr/share/docbook-xsl/html/docbook.xsl \
-  /usr/share/sgml/docbook/xsl-stylesheets*/html/docbook.xsl 
+  /usr/share/sgml/docbook/xsl-stylesheets*/html/docbook.xsl
 do
   if test -f "$_try_docbook_xsl"
   then
@@ -144,7 +146,7 @@
 <?xml version="1.0" encoding="iso-8859-1" standalone="no"?>
 <!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
     "$_dtd"
-[ 
+[
 EOF
 
   for file in `find $lang en -name \*.xml -exec basename \{\} \; | sort -u`; do

Index: default.css
===================================================================
RCS file: /cvsroot/fpm/fpm/docs/xml/default.css,v
retrieving revision 1.5
retrieving revision 1.6
diff -u -d -r1.5 -r1.6
--- default.css	2 Sep 2005 03:12:40 -0000	1.5
+++ default.css	5 Sep 2005 00:42:06 -0000	1.6
@@ -1,3 +1,5 @@
+/* $Id$ */
+
 body {
 	color: #000000;
 	background: #ffffff;

Index: html-common.xsl
===================================================================
RCS file: /cvsroot/fpm/fpm/docs/xml/html-common.xsl,v
retrieving revision 1.3
retrieving revision 1.4
diff -u -d -r1.3 -r1.4
--- html-common.xsl	31 Aug 2005 01:59:20 -0000	1.3
+++ html-common.xsl	5 Sep 2005 00:42:06 -0000	1.4
@@ -1,9 +1,12 @@
 <?xml version="1.0" encoding="ISO-8859-1"?>
+
+<!-- $Id$ -->
+
 <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                 version="1.0">
 
   <xsl:output method="html" indent="no"/>
- 
+
   <xsl:param name="toc.section.depth" select="'4'"/>
 
   <xsl:param name="html.stylesheet" select="'default.css'"/>

Index: postproc.sh
===================================================================
RCS file: /cvsroot/fpm/fpm/docs/xml/postproc.sh,v
retrieving revision 1.1
retrieving revision 1.2
diff -u -d -r1.1 -r1.2
--- postproc.sh	30 Aug 2005 00:00:04 -0000	1.1
+++ postproc.sh	5 Sep 2005 00:42:06 -0000	1.2
@@ -1,5 +1,7 @@
 #!/bin/sh
 
+# $Id$
+
 # Simple script to replace keywords by begining and ending of table instead of
 # overriding "chunk-element-content" in the stylesheet, which results in an
 # endless loop (<xsl:apply-imports/>).  If somebody knows how to fix that,



From nobody at sheep.berlios.de  Mon Sep  5 02:42:09 2005
From: nobody at sheep.berlios.de (ivop)
Date: Mon, 5 Sep 2005 02:42:09 +0200
Subject: [fpm-cvslog] fpm/docs/xml/en Makefile,1.1,1.2 advanced.xml,1.3,1.4 introduction.xml,1.4,1.5 usage.xml,1.3,1.4
Message-ID: <200509050042.j850g9128510@bat.berlios.de>

Update of /cvsroot/fpm/fpm/docs/xml/en
In directory sheep:/tmp/cvs-serv17637/docs/xml/en

Modified Files:
	Makefile advanced.xml introduction.xml usage.xml 
Log Message:
remove trailing whitespace, add Id tags, fix overly long lines



Index: Makefile
===================================================================
RCS file: /cvsroot/fpm/fpm/docs/xml/en/Makefile,v
retrieving revision 1.1
retrieving revision 1.2
diff -u -d -r1.1 -r1.2
--- Makefile	30 Aug 2005 00:01:58 -0000	1.1
+++ Makefile	5 Sep 2005 00:42:07 -0000	1.2
@@ -1,3 +1,5 @@
+# $Id$
+
 # Set if you are using your own HTML stylesheet...
 #HTML_STYLESHEET = mystyle.css
 

Index: advanced.xml
===================================================================
RCS file: /cvsroot/fpm/fpm/docs/xml/en/advanced.xml,v
retrieving revision 1.3
retrieving revision 1.4
diff -u -d -r1.3 -r1.4
--- advanced.xml	2 Sep 2005 04:09:39 -0000	1.3
+++ advanced.xml	5 Sep 2005 00:42:07 -0000	1.4
@@ -54,11 +54,13 @@
                     <tbody>
                         <row>
                             <entry> __FPM_ENABLE_ALL_LUT__ </entry>
-                            <entry> Enable look-up tables for all calculations </entry>
+                            <entry> Enable look-up tables for all
+                                    calculations </entry>
                         </row>
                         <row>
                             <entry> __FPM_ENABLE_SQRT_LUT__ </entry>
-                            <entry> Enable look-up tables for all square root calculations </entry>
+                            <entry> Enable look-up tables for all square root
+                                    calculations </entry>
                         </row>
                     </tbody>
                 </tgroup>
@@ -87,7 +89,7 @@
         a = sqrtfp16p16(b);     /* will be "looked up" and possibly
                                  * interpolated */ </programlisting>
         </para>
-            
+
     </sect1>
 
     <sect1 id="precision">

Index: introduction.xml
===================================================================
RCS file: /cvsroot/fpm/fpm/docs/xml/en/introduction.xml,v
retrieving revision 1.4
retrieving revision 1.5
diff -u -d -r1.4 -r1.5
--- introduction.xml	1 Sep 2005 00:14:48 -0000	1.4
+++ introduction.xml	5 Sep 2005 00:42:07 -0000	1.5
@@ -26,19 +26,19 @@
         </para>
         <para>
             Possible fields of use are:
-            <itemizedlist>
-                <listitem> <para>
+            <itemizedlist spacing="compact">
+                <listitem> <simpara>
                         Games
-                </para> </listitem>
-                <listitem> <para>
+                </simpara> </listitem>
+                <listitem> <simpara>
                         Embedded systems
-                </para> </listitem>
-                <listitem> <para>
+                </simpara> </listitem>
+                <listitem> <simpara>
                         Audio and video filtering
-                </para> </listitem>
-                <listitem> <para>
+                </simpara> </listitem>
+                <listitem> <simpara>
                         Optimized codecs
-                </para> </listitem>
+                </simpara> </listitem>
             </itemizedlist>
         </para>
     </sect1>

Index: usage.xml
===================================================================
RCS file: /cvsroot/fpm/fpm/docs/xml/en/usage.xml,v
retrieving revision 1.3
retrieving revision 1.4
diff -u -d -r1.3 -r1.4
--- usage.xml	2 Sep 2005 13:50:37 -0000	1.3
+++ usage.xml	5 Sep 2005 00:42:07 -0000	1.4
@@ -27,7 +27,7 @@
             <table> <title> Basic types </title>
                 <tgroup cols="6">
                     <thead>
-                        <row> 
+                        <row>
                             <entry> type </entry>
                             <entry> total </entry>
                             <entry> fraction </entry>
@@ -128,7 +128,7 @@
             <table> <title> Type conversion to fp8p8_t </title>
                 <tgroup cols="2">
                     <thead>
-                        <row> 
+                        <row>
                             <entry> from </entry>
                             <entry> fp8p8_t </entry>
                         </row>
@@ -176,7 +176,7 @@
             <table> <title> Type conversion from fp8p8_t </title>
                 <tgroup cols="4">
                     <thead>
-                        <row> 
+                        <row>
                             <entry> from </entry>
                             <entry> int </entry>
                             <entry> float </entry>
@@ -227,7 +227,8 @@
 
         a = fp8p8tofp24p8(b);
 
-        c = ufp8p8toufp16p16(b);    /* incorrect if b is negative */ </programlisting>
+        /* incorrect if b is negative */
+        c = ufp8p8toufp16p16(b); </programlisting>
         </para>
     </sect1>
 
@@ -280,7 +281,7 @@
         z = mulfp8p8(x, y);
         x = mulfp8p8(x, itofp8p8(15));
         y = divfp8p8(x, z);
-    
+
         a = mulufp8p24(a, a);</programlisting>
         </para>
     </sect1>
@@ -295,7 +296,7 @@
             <table> <title> Math macro's for ufp16p16_t </title>
                 <tgroup cols="2">
                     <thead>
-                        <row> 
+                        <row>
                             <entry> </entry>
                             <entry> description </entry>
                         </row>



From nobody at sheep.berlios.de  Mon Sep  5 02:42:39 2005
From: nobody at sheep.berlios.de (ivop)
Date: Mon, 5 Sep 2005 02:42:39 +0200
Subject: [fpm-cvslog] fpm LICENSE,1.1,1.2
Message-ID: <200509050042.j850gd128521@bat.berlios.de>

Update of /cvsroot/fpm/fpm
In directory sheep:/tmp/cvs-serv18282

Modified Files:
	LICENSE 
Log Message:
Id tag



Index: LICENSE
===================================================================
RCS file: /cvsroot/fpm/fpm/LICENSE,v
retrieving revision 1.1
retrieving revision 1.2
diff -u -d -r1.1 -r1.2
--- LICENSE	25 Aug 2005 22:21:42 -0000	1.1
+++ LICENSE	5 Sep 2005 00:42:37 -0000	1.2
@@ -1,3 +1,5 @@
+$Id$
+
 		    GNU GENERAL PUBLIC LICENSE
 		       Version 2, June 1991
 



From nobody at sheep.berlios.de  Mon Sep  5 02:56:01 2005
From: nobody at sheep.berlios.de (ivop)
Date: Mon, 5 Sep 2005 02:56:01 +0200
Subject: [fpm-cvslog] website/docs/HTML/en advanced.html,1.3,1.4 default.css,1.5,1.6 doing-calculations.html,1.2,1.3 introduction.html,1.3,1.4 type-conversion.html,1.2,1.3
Message-ID: <200509050056.j850u1128745@bat.berlios.de>

Update of /cvsroot/fpm/website/docs/HTML/en
In directory sheep:/tmp/cvs-serv6949/HTML/en

Modified Files:
	advanced.html default.css doing-calculations.html 
	introduction.html type-conversion.html 
Log Message:
docs update after whitespace cosmetics (etc.) change of xml files



Index: advanced.html
===================================================================
RCS file: /cvsroot/fpm/website/docs/HTML/en/advanced.html,v
retrieving revision 1.3
retrieving revision 1.4
diff -u -d -r1.3 -r1.4
--- advanced.html	2 Sep 2005 04:08:38 -0000	1.3
+++ advanced.html	5 Sep 2005 00:55:59 -0000	1.4
@@ -37,7 +37,9 @@
             compiler. Currently (as of the alpha release) the following
             defines are supported:
 
-            <div class="informaltable"><table border="1"><colgroup><col><col></colgroup><tbody><tr><td> __FPM_ENABLE_ALL_LUT__ </td><td> Enable look-up tables for all calculations </td></tr><tr><td> __FPM_ENABLE_SQRT_LUT__ </td><td> Enable look-up tables for all square root calculations </td></tr></tbody></table></div>
+            <div class="informaltable"><table border="1"><colgroup><col><col></colgroup><tbody><tr><td> __FPM_ENABLE_ALL_LUT__ </td><td> Enable look-up tables for all
+                                    calculations </td></tr><tr><td> __FPM_ENABLE_SQRT_LUT__ </td><td> Enable look-up tables for all square root
+                                    calculations </td></tr></tbody></table></div>
         </p><p>
             Eventually, all mathematical functions will have their
             look-up table equivalent. I even consider splitting it up for

Index: default.css
===================================================================
RCS file: /cvsroot/fpm/website/docs/HTML/en/default.css,v
retrieving revision 1.5
retrieving revision 1.6
diff -u -d -r1.5 -r1.6
--- default.css	2 Sep 2005 03:24:59 -0000	1.5
+++ default.css	5 Sep 2005 00:55:59 -0000	1.6
@@ -1,3 +1,5 @@
+/* $Id$ */
+
 body {
 	color: #000000;
 	background: #ffffff;

Index: doing-calculations.html
===================================================================
RCS file: /cvsroot/fpm/website/docs/HTML/en/doing-calculations.html,v
retrieving revision 1.2
retrieving revision 1.3
diff -u -d -r1.2 -r1.3
--- doing-calculations.html	2 Sep 2005 13:52:42 -0000	1.2
+++ doing-calculations.html	5 Sep 2005 00:55:59 -0000	1.3
@@ -41,7 +41,7 @@
         z = mulfp8p8(x, y);
         x = mulfp8p8(x, itofp8p8(15));
         y = divfp8p8(x, z);
-    
+
         a = mulufp8p24(a, a);</pre>
         </p></div>
           

Index: introduction.html
===================================================================
RCS file: /cvsroot/fpm/website/docs/HTML/en/introduction.html,v
retrieving revision 1.3
retrieving revision 1.4
diff -u -d -r1.3 -r1.4
--- introduction.html	1 Sep 2005 01:02:20 -0000	1.3
+++ introduction.html	5 Sep 2005 00:55:59 -0000	1.4
@@ -19,15 +19,15 @@
             are wasted by saving and restoring CPU registers.
         </p><p>
             Possible fields of use are:
-            <div class="itemizedlist"><ul type="disc"><li><p>
+            <div class="itemizedlist"><ul type="disc" compact><li>
                         Games
-                </p></li><li><p>
+                </li><li>
                         Embedded systems
-                </p></li><li><p>
+                </li><li>
                         Audio and video filtering
-                </p></li><li><p>
+                </li><li>
                         Optimized codecs
-                </p></li></ul></div>
+                </li></ul></div>
         </p></div></div>
           
       <div class="navfooter"><hr><table width="100%" summary="Navigation footer"><tr><td width="40%" align="left"><a accesskey="p" href="index.html">Prev</a>?</td><td width="20%" align="center"><a accesskey="u" href="index.html">Up</a></td><td width="40%" align="right">?<a accesskey="n" href="getting-started.html">Next</a></td></tr><tr><td width="40%" align="left" valign="top">?</td><td width="20%" align="center"><a accesskey="h" href="index.html">Home</a></td><td width="40%" align="right" valign="top">?</td></tr></table></div>

Index: type-conversion.html
===================================================================
RCS file: /cvsroot/fpm/website/docs/HTML/en/type-conversion.html,v
retrieving revision 1.2
retrieving revision 1.3
diff -u -d -r1.2 -r1.3
--- type-conversion.html	2 Sep 2005 13:52:42 -0000	1.2
+++ type-conversion.html	5 Sep 2005 00:55:59 -0000	1.3
@@ -59,7 +59,8 @@
 
         a = fp8p8tofp24p8(b);
 
-        c = ufp8p8toufp16p16(b);    /* incorrect if b is negative */ </pre>
+        /* incorrect if b is negative */
+        c = ufp8p8toufp16p16(b); </pre>
         </p></div>
           
       <div class="navfooter"><hr><table width="100%" summary="Navigation footer"><tr><td width="40%" align="left"><a accesskey="p" href="usage.html">Prev</a>?</td><td width="20%" align="center"><a accesskey="u" href="usage.html">Up</a></td><td width="40%" align="right">?<a accesskey="n" href="doing-calculations.html">Next</a></td></tr><tr><td width="40%" align="left" valign="top">?</td><td width="20%" align="center"><a accesskey="h" href="index.html">Home</a></td><td width="40%" align="right" valign="top">?</td></tr></table></div>



From nobody at sheep.berlios.de  Mon Sep  5 02:56:01 2005
From: nobody at sheep.berlios.de (ivop)
Date: Mon, 5 Sep 2005 02:56:01 +0200
Subject: [fpm-cvslog] website/docs/HTML-single/en default.css,1.5,1.6 index.html,1.6,1.7
Message-ID: <200509050056.j850u1128749@bat.berlios.de>

Update of /cvsroot/fpm/website/docs/HTML-single/en
In directory sheep:/tmp/cvs-serv6949/HTML-single/en

Modified Files:
	default.css index.html 
Log Message:
docs update after whitespace cosmetics (etc.) change of xml files



Index: default.css
===================================================================
RCS file: /cvsroot/fpm/website/docs/HTML-single/en/default.css,v
retrieving revision 1.5
retrieving revision 1.6
diff -u -d -r1.5 -r1.6
--- default.css	2 Sep 2005 03:25:00 -0000	1.5
+++ default.css	5 Sep 2005 00:55:59 -0000	1.6
@@ -1,3 +1,5 @@
+/* $Id$ */
+
 body {
 	color: #000000;
 	background: #ffffff;

Index: index.html
===================================================================
RCS file: /cvsroot/fpm/website/docs/HTML-single/en/index.html,v
retrieving revision 1.6
retrieving revision 1.7
diff -u -d -r1.6 -r1.7
--- index.html	2 Sep 2005 13:52:43 -0000	1.6
+++ index.html	5 Sep 2005 00:55:59 -0000	1.7
@@ -26,15 +26,15 @@
             are wasted by saving and restoring CPU registers.
         </p><p>
             Possible fields of use are:
-            <div class="itemizedlist"><ul type="disc"><li><p>
+            <div class="itemizedlist"><ul type="disc" compact><li>
                         Games
-                </p></li><li><p>
+                </li><li>
                         Embedded systems
-                </p></li><li><p>
+                </li><li>
                         Audio and video filtering
-                </p></li><li><p>
+                </li><li>
                         Optimized codecs
-                </p></li></ul></div>
+                </li></ul></div>
         </p></div></div><div class="chapter"><div class="titlepage"><div><h2 class="title"><a name="getting-started"></a>Chapter 2.  Getting started </h2></div></div><div class="toc"><p><b>Table of Contents</b></p><dl><dt>2.1. <a href="#system-requirements"> System requirements </a></dt><dt>2.2. <a href="#compilation-and-installation"> Compilation and installation </a></dt><dt>2.3. <a href="#tweaking-the-build-process"> Tweaking the build process </a></dt></dl></div><div class="sect1"><div class="titlepage"><div><h2 class="title" style="clear: both"><a name="system-requirements"></a>2.1.  System requirements </h2></div></div><p>
             Basically, all you need is a decent C-compiler. If your compiler
             doesn't accept the -MM command line option for generating
@@ -219,7 +219,8 @@
 
         a = fp8p8tofp24p8(b);
 
-        c = ufp8p8toufp16p16(b);    /* incorrect if b is negative */ </pre>
+        /* incorrect if b is negative */
+        c = ufp8p8toufp16p16(b); </pre>
         </p></div><div class="sect1"><div class="titlepage"><div><h2 class="title" style="clear: both"><a name="doing-calculations"></a>3.3.  Doing calculations </h2></div></div><p>
             For addition and substraction, all fixed point variables can be
             treated as if they were normal variables.
@@ -259,7 +260,7 @@
         z = mulfp8p8(x, y);
         x = mulfp8p8(x, itofp8p8(15));
         y = divfp8p8(x, z);
-    
+
         a = mulufp8p24(a, a);</pre>
         </p></div><div class="sect1"><div class="titlepage"><div><h2 class="title" style="clear: both"><a name="sqrt-ln-exp-and-pow"></a>3.4.  sqrt, ln, exp and pow </h2></div></div><p>
             For all fixed point types, the macro library implements
@@ -318,7 +319,9 @@
             compiler. Currently (as of the alpha release) the following
             defines are supported:
 
-            <div class="informaltable"><table border="1"><colgroup><col><col></colgroup><tbody><tr><td> __FPM_ENABLE_ALL_LUT__ </td><td> Enable look-up tables for all calculations </td></tr><tr><td> __FPM_ENABLE_SQRT_LUT__ </td><td> Enable look-up tables for all square root calculations </td></tr></tbody></table></div>
+            <div class="informaltable"><table border="1"><colgroup><col><col></colgroup><tbody><tr><td> __FPM_ENABLE_ALL_LUT__ </td><td> Enable look-up tables for all
+                                    calculations </td></tr><tr><td> __FPM_ENABLE_SQRT_LUT__ </td><td> Enable look-up tables for all square root
+                                    calculations </td></tr></tbody></table></div>
         </p><p>
             Eventually, all mathematical functions will have their
             look-up table equivalent. I even consider splitting it up for



From nobody at sheep.berlios.de  Mon Sep  5 03:17:16 2005
From: nobody at sheep.berlios.de (ivop)
Date: Mon, 5 Sep 2005 03:17:16 +0200
Subject: [fpm-cvslog] website home.html,1.5,1.6
Message-ID: <200509050117.j851HG129099@bat.berlios.de>

Update of /cvsroot/fpm/website
In directory sheep:/tmp/cvs-serv8501

Modified Files:
	home.html 
Log Message:
update message



Index: home.html
===================================================================
RCS file: /cvsroot/fpm/website/home.html,v
retrieving revision 1.5
retrieving revision 1.6
diff -u -d -r1.5 -r1.6
--- home.html	30 Aug 2005 01:45:07 -0000	1.5
+++ home.html	5 Sep 2005 01:17:13 -0000	1.6
@@ -16,6 +16,22 @@
 <B> HOME </B>
 <P>
 
+<I STYLE="font-size: 8pt;"> Monday, September 5, 2005 </I>
+<BR>
+Two weeks passed. Here's a short update. I have setup a documentation
+build system and after that I started working on the documentation itself.
+You can view the first draft under
+<A HREF="documentation.html">documentation</A>.
+The XML source and the build system are in CVS and can be checked out if you
+want to. After the documentation is finished, I will check the current
+source code in. Yes, I changed the order. I feel more comfortable with that.
+Things are going a bit slower than expected, but eventually all will
+be up here :)
+<BR>
+<I STYLE="font-size: 8pt;"> --Ivo </I>
+
+<HR>
+
 <I STYLE="font-size: 8pt;"> Sunday, August 21, 2005 </I>
 <BR>
 Started hosting at BerliOS today. I wasted way too much time on putting these
@@ -27,7 +43,6 @@
 documentation. First, let's get this website into CVS in a decent way.
 <BR>
 <I STYLE="font-size: 8pt;"> --Ivo </I>
-
 
 </TD></TR>
 </TABLE>



From nobody at sheep.berlios.de  Mon Sep 12 04:39:15 2005
From: nobody at sheep.berlios.de (ivop)
Date: Mon, 12 Sep 2005 04:39:15 +0200
Subject: [fpm-cvslog] fpm/docs/xml/en advanced.xml,1.4,1.5 usage.xml,1.4,1.5
Message-ID: <200509120239.j8C2dF105883@bat.berlios.de>

Update of /cvsroot/fpm/fpm/docs/xml/en
In directory sheep:/tmp/cvs-serv19397/docs/xml/en

Modified Files:
	advanced.xml usage.xml 
Log Message:
fix + two more lut defines



Index: advanced.xml
===================================================================
RCS file: /cvsroot/fpm/fpm/docs/xml/en/advanced.xml,v
retrieving revision 1.4
retrieving revision 1.5
diff -u -d -r1.4 -r1.5
--- advanced.xml	5 Sep 2005 00:42:07 -0000	1.4
+++ advanced.xml	12 Sep 2005 02:39:10 -0000	1.5
@@ -62,6 +62,16 @@
                             <entry> Enable look-up tables for all square root
                                     calculations </entry>
                         </row>
+                        <row>
+                            <entry> __FPM_ENABLE_EXP_LUT__ </entry>
+                            <entry> Enable look-up tables for all exponential
+                                    calculations </entry>
+                        </row>
+                        <row>
+                            <entry> __FPM_ENABLE_LN_LUT__ </entry>
+                            <entry> Enable look-up tables for all natural
+                                    logarithm calculations </entry>
+                        </row>
                     </tbody>
                 </tgroup>
             </informaltable>

Index: usage.xml
===================================================================
RCS file: /cvsroot/fpm/fpm/docs/xml/en/usage.xml,v
retrieving revision 1.4
retrieving revision 1.5
diff -u -d -r1.4 -r1.5
--- usage.xml	5 Sep 2005 00:42:07 -0000	1.4
+++ usage.xml	12 Sep 2005 02:39:10 -0000	1.5
@@ -310,12 +310,12 @@
                         <row>
                             <entry> lnufp16p16(x) </entry>
                             <entry> calculates the natural logarithm of x
-                                    for x &gt;= 0 </entry>
+                                    for x &gt;= 1 </entry>
                         </row>
                         <row>
                             <entry> expufp16p16(x) </entry>
                             <entry> calculates e to the power of x
-                                    for x &gt;= 1 </entry>
+                                    for x &gt;= 0 </entry>
                         </row>
                         <row>
                             <entry> powufp16p16(x, y) </entry>



From nobody at sheep.berlios.de  Mon Sep 12 04:40:11 2005
From: nobody at sheep.berlios.de (ivop)
Date: Mon, 12 Sep 2005 04:40:11 +0200
Subject: [fpm-cvslog] website/docs/HTML/en advanced.html,1.4,1.5 default.css,1.6,1.7 sqrt-ln-exp-and-pow.html,1.2,1.3
Message-ID: <200509120240.j8C2eB105908@bat.berlios.de>

Update of /cvsroot/fpm/website/docs/HTML/en
In directory sheep:/tmp/cvs-serv19584/docs/HTML/en

Modified Files:
	advanced.html default.css sqrt-ln-exp-and-pow.html 
Log Message:
updated docs



Index: advanced.html
===================================================================
RCS file: /cvsroot/fpm/website/docs/HTML/en/advanced.html,v
retrieving revision 1.4
retrieving revision 1.5
diff -u -d -r1.4 -r1.5
--- advanced.html	5 Sep 2005 00:55:59 -0000	1.4
+++ advanced.html	12 Sep 2005 02:40:09 -0000	1.5
@@ -39,7 +39,9 @@
 
             <div class="informaltable"><table border="1"><colgroup><col><col></colgroup><tbody><tr><td> __FPM_ENABLE_ALL_LUT__ </td><td> Enable look-up tables for all
                                     calculations </td></tr><tr><td> __FPM_ENABLE_SQRT_LUT__ </td><td> Enable look-up tables for all square root
-                                    calculations </td></tr></tbody></table></div>
+                                    calculations </td></tr><tr><td> __FPM_ENABLE_EXP_LUT__ </td><td> Enable look-up tables for all exponential
+                                    calculations </td></tr><tr><td> __FPM_ENABLE_LN_LUT__ </td><td> Enable look-up tables for all natural
+                                    logarithm calculations </td></tr></tbody></table></div>
         </p><p>
             Eventually, all mathematical functions will have their
             look-up table equivalent. I even consider splitting it up for

Index: default.css
===================================================================
RCS file: /cvsroot/fpm/website/docs/HTML/en/default.css,v
retrieving revision 1.6
retrieving revision 1.7
diff -u -d -r1.6 -r1.7

Index: sqrt-ln-exp-and-pow.html
===================================================================
RCS file: /cvsroot/fpm/website/docs/HTML/en/sqrt-ln-exp-and-pow.html,v
retrieving revision 1.2
retrieving revision 1.3
diff -u -d -r1.2 -r1.3
--- sqrt-ln-exp-and-pow.html	2 Sep 2005 13:52:42 -0000	1.2
+++ sqrt-ln-exp-and-pow.html	12 Sep 2005 02:40:09 -0000	1.3
@@ -8,8 +8,8 @@
 
             <div class="table"><p><b>Table 3.4.  Math macro's for ufp16p16_t </b></p><table summary=" Math macro's for ufp16p16_t " border="1"><colgroup><col><col></colgroup><thead><tr><th>?</th><th> description </th></tr></thead><tbody><tr><td> sqrtufp16p16(x) </td><td> calculates the square root of x
                                     for x &gt;= 0 </td></tr><tr><td> lnufp16p16(x) </td><td> calculates the natural logarithm of x
-                                    for x &gt;= 0 </td></tr><tr><td> expufp16p16(x) </td><td> calculates e to the power of x
-                                    for x &gt;= 1 </td></tr><tr><td> powufp16p16(x, y) </td><td> calculates x to the power of y
+                                    for x &gt;= 1 </td></tr><tr><td> expufp16p16(x) </td><td> calculates e to the power of x
+                                    for x &gt;= 0 </td></tr><tr><td> powufp16p16(x, y) </td><td> calculates x to the power of y
                                     for y &gt;= 1 </td></tr></tbody></table></div>
         </p><p>
             For all seven other types, similar macro's exist.



From nobody at sheep.berlios.de  Mon Sep 12 04:40:12 2005
From: nobody at sheep.berlios.de (ivop)
Date: Mon, 12 Sep 2005 04:40:12 +0200
Subject: [fpm-cvslog] website/docs/HTML-single/en default.css,1.6,1.7 index.html,1.7,1.8
Message-ID: <200509120240.j8C2eC105912@bat.berlios.de>

Update of /cvsroot/fpm/website/docs/HTML-single/en
In directory sheep:/tmp/cvs-serv19584/docs/HTML-single/en

Modified Files:
	default.css index.html 
Log Message:
updated docs



Index: default.css
===================================================================
RCS file: /cvsroot/fpm/website/docs/HTML-single/en/default.css,v
retrieving revision 1.6
retrieving revision 1.7
diff -u -d -r1.6 -r1.7

Index: index.html
===================================================================
RCS file: /cvsroot/fpm/website/docs/HTML-single/en/index.html,v
retrieving revision 1.7
retrieving revision 1.8
diff -u -d -r1.7 -r1.8
--- index.html	5 Sep 2005 00:55:59 -0000	1.7
+++ index.html	12 Sep 2005 02:40:09 -0000	1.8
@@ -268,8 +268,8 @@
 
             <div class="table"><p><b>Table 3.4.  Math macro's for ufp16p16_t </b></p><table summary=" Math macro's for ufp16p16_t " border="1"><colgroup><col><col></colgroup><thead><tr><th>?</th><th> description </th></tr></thead><tbody><tr><td> sqrtufp16p16(x) </td><td> calculates the square root of x
                                     for x &gt;= 0 </td></tr><tr><td> lnufp16p16(x) </td><td> calculates the natural logarithm of x
-                                    for x &gt;= 0 </td></tr><tr><td> expufp16p16(x) </td><td> calculates e to the power of x
-                                    for x &gt;= 1 </td></tr><tr><td> powufp16p16(x, y) </td><td> calculates x to the power of y
+                                    for x &gt;= 1 </td></tr><tr><td> expufp16p16(x) </td><td> calculates e to the power of x
+                                    for x &gt;= 0 </td></tr><tr><td> powufp16p16(x, y) </td><td> calculates x to the power of y
                                     for y &gt;= 1 </td></tr></tbody></table></div>
         </p><p>
             For all seven other types, similar macro's exist.
@@ -321,7 +321,9 @@
 
             <div class="informaltable"><table border="1"><colgroup><col><col></colgroup><tbody><tr><td> __FPM_ENABLE_ALL_LUT__ </td><td> Enable look-up tables for all
                                     calculations </td></tr><tr><td> __FPM_ENABLE_SQRT_LUT__ </td><td> Enable look-up tables for all square root
-                                    calculations </td></tr></tbody></table></div>
+                                    calculations </td></tr><tr><td> __FPM_ENABLE_EXP_LUT__ </td><td> Enable look-up tables for all exponential
+                                    calculations </td></tr><tr><td> __FPM_ENABLE_LN_LUT__ </td><td> Enable look-up tables for all natural
+                                    logarithm calculations </td></tr></tbody></table></div>
         </p><p>
             Eventually, all mathematical functions will have their
             look-up table equivalent. I even consider splitting it up for



From nobody at sheep.berlios.de  Tue Sep 13 05:31:05 2005
From: nobody at sheep.berlios.de (ivop)
Date: Tue, 13 Sep 2005 05:31:05 +0200
Subject: [fpm-cvslog] fpm benchmark.c,NONE,1.1 ChangeLog,NONE,1.1 configure,NONE,1.1 genbarcharts.sh,NONE,1.1 gengraphs.sh,NONE,1.1 genlut.c,NONE,1.1 INSTALL,NONE,1.1 Makefile,NONE,1.1 precision.c,NONE,1.1 README,NONE,1.1 TODO,NONE,1.1
Message-ID: <200509130331.j8D3V5124309@bat.berlios.de>

Update of /cvsroot/fpm/fpm
In directory sheep:/tmp/cvs-serv25975

Added Files:
	benchmark.c ChangeLog configure genbarcharts.sh gengraphs.sh 
	genlut.c INSTALL Makefile precision.c README TODO 
Log Message:
initial checkin



--- NEW FILE: benchmark.c ---
/* ------------------------------------------------------------------------- */

/*
 * Fixed Point Math Macro Library - Benchmark
 *
 * (C)2005 by Ivo van Poorten
 * Licensed under version 2 of the GPL
 *
 * $Id: benchmark.c,v 1.1 2005/09/13 03:31:02 ivop Exp $
 *
 */

/* ------------------------------------------------------------------------- */

#include <stdio.h>
#include <math.h>

#include "fixedpointmath.h"

/* ------------------------------------------------------------------------- */

/* 10000 and 100000 or something, but lower values while testing scripts,
 * Makefile, etc... */

#define INNERLOOP   10000
#define OUTERLOOP   1000
#define VAL1        2.9
#define VAL2        213
#define VAL3        3.1

/* ------------------------------------------------------------------------- */

static inline long long rdtsc()
{
    long long timestamp;
    asm volatile ("rdtsc\n" : "=A"(timestamp));
    return timestamp;
}

/* ------------------------------------------------------------------------- */

#define timeloop(AVG, CODE) \
    do { \
        sum = (uint64_t) 0; \
        for (j=0; j<OUTERLOOP; j++) { \
            start = rdtsc(); \
            for (i=0; i<INNERLOOP; i++) { \
                CODE; \
            } \
            end = rdtsc(); \
            sum += (end-start); \
        } \
        AVG = sum / OUTERLOOP; \
    } while(0)

#define NINEi "%i %i %i %i %i %i %i %i %i\n"

#define printreport(HEADER, a) \
    do { \
        printf("#"HEADER"\n"); \
        num=a*10; \
        printf(NINEi, num++, 0, 0, 0, 0, 0, 0, 0, 0); \
        printf(NINEi, num++, 0, prca, 0, 0, 0, 0, 0, 0); \
        printf(NINEi, num++, 0, 0, prcb, 0, 0, 0, 0, 0); \
        printf(NINEi, num++, 0, 0, 0, prcc, 0, 0, 0, 0); \
        printf(NINEi, num++, 0, 0, 0, 0, prcd, 0, 0, 0); \
        printf(NINEi, num++, 0, 0, 0, 0, 0, prcf, 0, 0); \
        printf(NINEi, num++, 0, 0, 0, 0, 0, 0, prcg, 0); \
        printf(NINEi, num++, 0, 0, 0, 0, 0, 0, 0, 0); \
        printf("\n"); \
        fflush(stdout); \
        fprintf(stderr, "#"HEADER"\n"); \
        fprintf(stderr, "# %-10s - % 4i%%\n", "fp8p8_t", prca); \
        fprintf(stderr, "# %-10s - % 4i%%\n", "fp24p8_t", prcb); \
        fprintf(stderr, "# %-10s - % 4i%%\n", "fp16p16_t", prcc); \
        fprintf(stderr, "# %-10s - % 4i%%\n", "fp8p24_t", prcd); \
        fprintf(stderr, "# %-10s - % 4i%%\n", "float", prcf); \
        fprintf(stderr, "# %-10s - % 4i%%\n\n", "double", prcg); \
        fflush(stderr); \
    } while(0)

#define calcperc(PRC, AVG, AVGR) \
    do { \
        PRC = (AVG*100)/AVGR; \
    } while(0)

#define calcallperc \
    do { \
        calcperc(prca, avga, avgf); \
        calcperc(prcb, avgb, avgf); \
        calcperc(prcc, avgc, avgf); \
        calcperc(prcd, avgd, avgf); \
        calcperc(prcf, avgf, avgf); \
        calcperc(prcg, avgg, avgf); \
    } while(0)

/* ------------------------------------------------------------------------- */

/* There's a foobar timeloop between the fp8p8 add/sub test and fp24p8 test,
 * because somehow (can anybody explain?) one needs to "kick" the CPU out of
 * 16-bit short int mode */

int main()
{
    unsigned int i, j, num;
    ufp8p8_t   a1, a2, a3, a4;
    ufp24p8_t  b1, b2, b3, b4;
    ufp16p16_t c1, c2, c3, c4;
    ufp8p24_t  d1, d2, d3, d4;
    float      f1, f2, f3, f4;
    double     g1, g2, g3, g4;
    uint64_t   start, end, sum;
    uint64_t   avga, avgb, avgc, avgd, avgf, avgg;
    int        prca, prcb, prcc, prcd, prcf, prcg;
    int        foo, bar;

    a2 = dtoufp8p8(VAL1);
    b2 = dtoufp24p8(VAL1);
    c2 = dtoufp16p16(VAL1);
    d2 = dtoufp8p24(VAL1);
    f2 = VAL1;
    g2 = VAL1;

    a3 = dtoufp8p8(VAL2);
    b3 = dtoufp24p8(VAL2);
    c3 = dtoufp16p16(VAL2);
    d3 = dtoufp8p24(VAL2);
    f3 = VAL2;
    g3 = VAL2;

    a4 = dtoufp8p8(VAL3);
    b4 = dtoufp24p8(VAL3);
    c4 = dtoufp16p16(VAL3);
    d4 = dtoufp8p24(VAL3);
    f4 = VAL3;
    g4 = VAL3;

    /* ADD */

    timeloop(avga, a1=a2+a3);
    timeloop(foo, bar=bar);
    timeloop(avgb, b1=b2+b3);
    timeloop(avgc, c1=c2+c3);
    timeloop(avgd, d1=d2+d3);
    timeloop(avgf, f1=f2+f3);
    timeloop(avgg, g1=g2+g3);
    calcallperc;
    printreport("ADD", 0);

    /* SUB */

    timeloop(avga, a1=a2-a3);
    timeloop(foo, bar=bar);
    timeloop(avgb, b1=b2-b3);
    timeloop(avgc, c1=c2-c3);
    timeloop(avgd, d1=d2-d3);
    timeloop(avgf, f1=f2-f3);
    timeloop(avgg, g1=g2-g3);
    calcallperc;
    printreport("SUB", 1);

    /* MUL */

    timeloop(avga, a1=mulufp8p8(a2,a3)  );
    timeloop(avgb, b1=mulufp24p8(b2,b3) );
    timeloop(avgc, c1=mulufp16p16(c2,c3));
    timeloop(avgd, d1=mulufp8p24(d2,d3) );
    timeloop(avgf, f1=f2*f3);
    timeloop(avgg, g1=g2*g3);
    calcallperc;
    printreport("MUL", 2);

    /* DIV */

    timeloop(avga, a1=divufp8p8(a2,a3)  );
    timeloop(avgb, b1=divufp24p8(b2,b3) );
    timeloop(avgc, c1=divufp16p16(c2,c3));
    timeloop(avgd, d1=divufp8p24(d2,d3) );
    timeloop(avgf, f1=f2/f3);
    timeloop(avgg, g1=g2/g3);
    calcallperc;
    printreport("DIV", 3);

    /* SQRT */

    timeloop(avga, a1=sqrtufp8p8(a2)  );
    timeloop(avgb, b1=sqrtufp24p8(b2) );
    timeloop(avgc, c1=sqrtufp16p16(c2));
    timeloop(avgd, d1=sqrtufp8p24(d2) );
    timeloop(avgf, f1=sqrt(f2));
    timeloop(avgg, g1=sqrt(g2));
    calcallperc;
    printreport("SQRT", 4);

    /* EXP */

    timeloop(avga, a1=expufp8p8(a2)  );
    timeloop(avgb, b1=expufp24p8(b2) );
    timeloop(avgc, c1=expufp16p16(c2));
    timeloop(avgd, d1=expufp8p24(d2) );
    timeloop(avgf, f1=exp(f2));
    timeloop(avgg, g1=exp(g2));
    calcallperc;
    printreport("EXP", 5);

    /* LN */

    timeloop(avga, a1=lnufp8p8(a3)  );
    timeloop(avgb, b1=lnufp24p8(b3) );
    timeloop(avgc, c1=lnufp16p16(c3));
    timeloop(avgd, d1=lnufp8p24(d3) );
    timeloop(avgf, f1=log(f3));
    timeloop(avgg, g1=log(g3));
    calcallperc;
    printreport("LN", 6);

    /* POW */

    timeloop(avga, a1=powufp8p8(a3,a4)  );
    timeloop(avgb, b1=powufp24p8(b3,b4) );
    timeloop(avgc, c1=powufp16p16(c3,c4));
    timeloop(avgd, d1=powufp8p24(d3,d4) );
    timeloop(avgf, f1=pow(f3,f4));
    timeloop(avgg, g1=pow(g3,g4));
    calcallperc;
    printreport("POW", 7);

    return 0;
}

/* ------------------------------------------------------------------------- */


--- NEW FILE: ChangeLog ---
ChangeLog
=========

$Id: ChangeLog,v 1.1 2005/09/13 03:31:02 ivop Exp $

v0.30   [First alpha release]

    - Better Makefile(s)
    - Fixed exp macro's conditional expressions to always evaluate as true
    - Added make install/uninstall
    - Generation of index.html for graphs
    - Barcharts index.html "tool"
    - Updated documentation

v0.29   Added lut support for ln, exp and pow (indirectly)
v0.28   Added precision(lut) and script to generate graphs of the output
v0.27   First draft of documentation
v0.26   Setup documentation build system
v0.25   Moved types to code.h, finished sqrt LUT support (maybe 8fp24 needs
        one more table, or at least higher resolution for lut256)
v0.24   All todo's for 0.23 done.
v0.23   Decent non-autotools configure script added; todo: test for gnuplot,
        awk and fig2dev and have genbarchart act on that if one of them isn't
        found. also add --with-indent= etc. options
v0.22   Benchmark output changed to values and comments only, wrote barchart
        script to generate PNG files of benchmark output, adjusted makefile
        to do that
v0.21   Preliminary sqrt LUT support and split of code and API in two .h
        files.
v0.20   Added pow()
v0.19   After doing some timing tests, the "oh-so-clever" sqrt algorithm
        turned out to be 10-15 times slower than floating point <g>
        So, I completely rewrote the sqrt algorithm. It's still 3-11
        times slower than the FPU, but is it possible to beat hardware
        fsqrt that has a 14-bit lookup table? (athlon)
v0.18   Fixed type problem in ftoufpxpx causing false integer overflow
        compiler warnings.
v0.17   Added a wrapper around ln() so constants can be passed. If a
        variable is passed, it's no longer changed itself!
v0.16   Replaced divs by muls in ln()
v0.15   Added ln()
v0.14   Removed silly 16p8 and 8p16 types
v0.13   Added exp()
v0.12   Changed sqrt() from nested macros to use a temp var (gcc trouble)
v0.11   Added sqrt()
v0.10   Basic types, mul() and div()


--- NEW FILE: configure ---
#! /bin/sh

#
# Alternate configure
# Loosely based on MPlayer's configure
#
# (C)opyright 2005 by Ivo van Poorten
# Licensed under version 2 of the GPL
#
# $Id: configure,v 1.1 2005/09/13 03:31:02 ivop Exp $
#

rm -f config.mak

TMPC="configure-test-file.c"
TMPO="configure-test-file.o"
TMPLOG="configure.log"

rm -f $TMPLOG

_debug=
_cc=gcc
_ccfordeps="$_cc -MM"
_ldd=ldd
_prefix=/usr/local
_cflags="-O4"
_warnings=
_ldflags=-lm
_inc_extra=
_ld_extra=
_make=make
_indent=indent
_makedepend=makedepend
_gnuplot=gnuplot
_awk=
_fig2dev=fig2dev
_fig2dev_png=


# check environment

if test "$CC" != "" ; then
    _cc=$CC
    _ccfordeps="$_cc -MM"
fi
if test "$CFLAGS" != "" ; then
    echo "Warning: Overriding CFLAGS with environment variable ($CFLAGS)"
    echo "If that's not what you want, run CFLAGS= ./configure"
    _cflags=$CFLAGS
    echo
fi

# Functions

case `echo -n` in
    -n)     _echo_n=        _echo_c='\c'    ;; # SysV echo
    *)      _echo_n='-n '   _echo_c=        ;; # BSD echo
esac

echocheck() {
    echo "============ Checking for $@ ============" >> "$TMPLOG"
    echo ${_echo_n} "Checking for $@ ... ${_echo_c}"
}

echores() {
    echo "Result is: $@" >> "$TMPLOG"
    echo "##########################################" >> "$TMPLOG"
    echo "" >> "$TMPLOG"
    echo "$@"
}

cc_check() {
    echo "" >> "$TMPLOG"
    cat "$TMPC" >> "$TMPLOG"
    echo "" >> "$TMPLOG"
    echo "$_cc $CFLAGS $_inc_extra $_ld_extra $TMPC -o $TMPO $@" >> "$TMPLOG"
    rm -f "$TMPO"
    ( $_cc $CFLAGS $_inc_extra $_ld_extra "$TMPC" -o "$TMPO" "$@" ) >> "$TMPLOG" 2>&1
    TMP="$?"
    echo >> "$TMPLOG"
    echo "ldd $TMPO" >> "$TMPLOG"
    ( $_ldd "$TMPO" ) >> "$TMPLOG" 2>&1
    echo >> "$TMPLOG"
    return "$TMP"
}

die () {
    echo
    echo "Error: $@" >&2
    echo >&2
    rm -f "$TMPO" "$TMPC"
    echo "Check \"$TMPLOG\" if you do not understand why it failed."
    echo
    exit 1
}

# Parse commandline

for parm in "$@"; do
    if test "$parm" = "--help" || test "$parm" = "-help" || test "$parm" = "-h" ; then
        cat << EOF

Usage $0 [options] ...

Configuration:
  -h, --help                display this help and exit

Installation directories:
  --prefix=DIR              use this prefix for installation [/usr/local]

Miscellaneous options:
  --cc=COMPILER             use this C compiler to build [gcc]
  --with-extraincdir=DIR    extra headers
  --with-extralibdir=DIR    extra library files

Advanced options:
  --enable-debug            enable debug symbols [disabled]
  --enable-warnings         enable all compiler warnings [disabled]

  --with-make=              use a custom make program
  --with-indent=            use a custom indent program
  --with-makedepend=        use a custom makedepend program (if needed)
  --with-gnuplot=           use a custom gnuplot program (if needed)
  --with-awk=               use a custom awk program (if needed)
  --with-fig2dev=           use a custom fig2dev program (if needed)

EOF
        exit 0
    fi
done

for ac_option do
    case "$ac_option" in
    --prefix=*)
        _prefix=`echo $ac_option | cut -d '=' -f 2`
        ;;
    --cc=*)
        _cc=`echo $ac_option | cut -d '=' -f 2`
        ;;
    --with-extraincdir=*)
        _inc_extra=-I`echo $ac_option | cut -d '=' -f 2 | sed 's,:, -I,g'`
        ;;
    --with-extralibdir=*)
        _ld_extra=-L`echo $ac_option | cut -d '=' -f 2 | sed 's,:, -L,g'`
        ;;
    --disable-debug)
        _debug=""
        ;;
    --enable-debug)
        _debug="-g"
        _cflags=""
        ;;
    --disable-warnings)
        _warnings=""
        ;;
    --enable-warnings)
        _warnings="-Wall"
        ;;
    --with-make=*)
        _make=`echo $ac_option | cut -d '=' -f 2`
        ;;
    --with-indent=*)
        _indent=`echo $ac_option | cut -d '=' -f 2`
        ;;
    --with-makedepend=*)
        _makedepend=`echo $ac_option | cut -d '=' -f 2`
        ;;
    --with-gnuplot=*)
        _gnuplot=`echo $ac_option | cut -d '=' -f 2`
        ;;
    --with-awk=*)
        _awk=`echo $ac_option | cut -d '=' -f 2`
        ;;
    --with-fig2dev=*)
        _fig2dev=`echo $ac_option | cut -d '=' -f 2`
        ;;
    *)
        echo "unknown option: $ac_option"
        exit 1
        ;;
    esac
done


# Do tests...

echocheck "c compiler"
cc_run=`( $_cc ) 2>&1`
if test "$?" -gt 1; then
    echores "no"
    die "can't find compiler"
fi
echores "$_cc"



echocheck "extra headers"
if test "$_inc_extra" ; then
    echores "$_inc_extra"
else
    echores "no"
fi



echocheck "extra libraries"
if test "$_ld_extra" ; then
    echores "$_ld_extra"
else
    echores "no"
fi



echocheck "indent"
(echo "$_indent" | $_indent) >> "$TMPLOG" 2>&1
_tmp=`(echo "indent" | $_indent) 2>&1`
if test "$_tmp" = "indent" ; then
    echores "yes, $_indent"
else
    echores "no, using cat instead"
    _indent=cat
fi



echocheck "$_cc support of -MM option"
cat > $TMPC << EOF
int main(void) { return 0; }
EOF
$_cc -MM $TMPC >> $TMPLOG 2>&1
if test "$?" -gt 0; then
    echores "no"
    _ccfordeps=""
else
    echores "yes"
    _ccfordeps="$_cc -MM"
fi



if test "$_ccfordeps" = ""; then
    echocheck "makedepend"
    cat > $TMPC << EOF
int main(void) { return 0; }
EOF
    $_makedepend -f- $TMPC >> $TMPLOG 2>&1
    if test "$?" -gt 0; then
        echores "no"
        die "If you compiler doensn't understand -MM, makedepend is needed."
    else
        echores "yes, $_makedepend"
        _ccfordeps="$_makedepend -f-"
    fi
fi



echocheck "gnuplot"
(echo "set terminal fig; plot x;" | $_gnuplot) 2>> "$TMPLOG" 1>/dev/null
if test "$?" -gt 0 ; then
    echores "no"
    _gnuplot=""
    _nobarcharts="yes"
else
    echores "yes, $_gnuplot"
fi



echocheck "awk"
for _awkt in $_awk mawk gawk nawk awk noawkpresent; do
    ( $_awkt 'BEGIN{testme();}function testme(){print "";}' ) >> "$TMPLOG" 2>&1
    if test "$?" -eq 0 ; then
        echores "yes, $_awkt"
        break
    fi
done
_awk=$_awkt
if test "$_awk" = "noawkpresent"; then
    echores "no"
    _awk=""
    _nobarcharts="yes"
fi



echocheck "fig2dev"
($_fig2dev -h) 2>> "$TMPLOG" 1>/dev/null
if test "$?" -gt 0 ; then
    echores "no"
    _fig2dev=""
    _nobarcharts="yes"
else
    echores "yes, $_fig2dev"
fi



if test "$_fig2dev" != "" ; then
    echocheck "$_fig2dev support of PNG output"
    _fig2dev_png=`($_fig2dev -h | grep png) 2>>"$TMPLOG"`
    if test "$_fig2dev_png" = "" ; then
        echores "no"
        _fig2dev_png=no
    else
        echores "yes"
        _fig2dev_png=yes
    fi
fi



# Write report

echo
if test "$_debug" = ""; then
    echo "Debug symbols disabled."
else
    echo "Debug symbols enabled."
fi
if test "$_warnings" = ""; then
    echo "All compiler warnings disabled."
else
    echo "All compiler warnings enabled."
fi

if test "$_nobarcharts" = "yes"; then
    echo ${_echo_n} "No benchmark barcharts support because the ${_echo_c}"
    echo "following programs were not found:"
    echo ${_echo_n} "    ${_echo_c}"
    if test "$_gnuplot" = ""; then
        echo ${_echo_n} "gnuplot ${_echo_c}"
    fi
    if test "$_awk" = ""; then
        echo ${_echo_n} "awk ${_echo_c}"
    fi
    if test "$_fig2dev" = ""; then
        echo ${_echo_n} "fig2dev ${_echo_c}"
    fi
    echo
fi



# Cleaning up source tree

echo
echo ${_echo_n} "Cleaning up source tree ... ${_echo_c}"
> config.mak
$_make clean >> $TMPLOG 2>&1
echores "done"


# Assemble _cflags and _ldflags

_cflags="$_cflags"
_ldflags="$_ldflags $_ld_extra"

# Generate config.mak

echo
echo ${_echo_n} "Generating config.mak ... ${_echo_c}"
cat > config.mak << EOF
CC=$_cc
CFLAGS=$_cflags
INCLUDES=-I./include $_inc_extra
CCFORDEPS=$_ccfordeps
LD=$_cc
LDFLAGS=$_ldflags
INDENT=$_indent
DEBUG=$_debug
WARNINGS=$_warnings
MAKE=$_make
PREFIX=$_prefix
EOF

echo "done."

# Generate config.sh for shellscripts (like genbarcharts.sh)

echo ${_echo_n} "Generating config.sh ... ${_echo_c}"
cat > config.sh << EOF
_gnuplot=$_gnuplot
_awk=$_awk
_fig2dev=$_fig2dev
_fig2dev_png=$_fig2dev_png
EOF

echo "done."
echo
echo "Now type 'make' to build."
echo

# Clean up

rm -f "$TMPC" "$TMPO"


--- NEW FILE: genbarcharts.sh ---
#!/bin/sh

# $Id: genbarcharts.sh,v 1.1 2005/09/13 03:31:02 ivop Exp $

# Script to generate barcharts from benchmark output
# (C)opyright 2005 by Ivo van Poorten
# Licensed under version 2 of the GPL

# awk trick inspired by:
# http://www.togaware.com/datamining/gdatamine/barchart

# Read config

. ./config.sh

# Test if all tools were available

testavail() {
    if [ "$1" == "" ]; then
        echo "Can't create barcharts. $2 is not available on your system."
        exit 0
    fi
}

testavail "$_gnuplot" "gnuplot"
testavail "$_awk" "awk"
testavail "$_fig2dev" "fig2dev"

if [ "$_fig2dev_png" == "no" ]; then
    echo "Can't generate barcharts. Your $_fig2dev doesn't have PNG support."
    exit 0
fi

# check command line

if [ "$#" != "3" ]; then
    echo "usage: $0 <datafile> <outputdirectory> <prefix-to-filenames>"
    exit -1
fi

# generate all barcharts

xleft=0
xright=7

for i in add sub mul div sqrt exp ln pow
do

( cat << __EOF__
set nokey
set xrange [$xleft:$xright]
set yrange [0:150]
set data style boxes
set grid
set noborder

set terminal fig color

plot "$1" using 1:2, "$1" using 1:3, "$1" using 1:4, "$1" using 1:5, "$1" using 1:6, "$1" using 1:7, "$1" using 1:8, "$1" using 1:9

__EOF__
) | $_gnuplot | $_awk 'BEGIN {} /10 0 -1     0.000 0 0 0 0 0 5/{$9=20} {print}' | $_fig2dev -L png -m 1 > $2/$3\_benchmark_$i.png

xleft=`expr $xleft + 10`
xright=`expr $xright + 10`

done


--- NEW FILE: gengraphs.sh ---
#!/bin/sh

# $Id: gengraphs.sh,v 1.1 2005/09/13 03:31:02 ivop Exp $

# Script to generate graphs from precision output
# (C)opyright 2005 by Ivo van Poorten
# Licensed under version 2 of the GPL

# generic function

# xrange yrange outfile

gengraph() {
    echo "Generating $3.png"
( cat << __EOF__
set nokey
set xrange [$1]
set yrange [$2]
set data style lines
set grid
set border

set terminal fig color

plot "precision.dat" using 1:2, "precision.dat" using 1:3

__EOF__
) | $_gnuplot | $_fig2dev -L png -m 0.85 > $3.png
}

# Read config

. ./config.sh

# Test if all tools were available

testavail() {
    if [ "$1" == "" ]; then
        echo "Can't create graphs. $2 is not available on your system."
        exit 0
    fi
}

testavail "$_gnuplot" "gnuplot"
testavail "$_fig2dev" "fig2dev"

if [ "$_fig2dev_png" == "no" ]; then
    echo "Can't generate barcharts. Your $_fig2dev doesn't have PNG support."
    exit 0
fi

# check command line

if [ "$#" != "1" ]; then
    echo "usage: $0 <output-directory>"
    exit -1
fi

# generate all graphs + index.html

( cat << __EOF__
<HTML>
<HEAD></HEAD>
<BODY BGCOLOR="#f0f0f0">
__EOF__
) > $1/index.html

overview(){
    case $1 in
    sqrt)
        echo 0:256 0:16
        ;;
    exp)
        echo 0:5.5 0:256
        ;;
    ln)
        echo 1:256 0:6
        ;;
    pow)
        echo 1:16 0:256
        ;;
    esac
}

zoom1() {
    case $1 in
    sqrt)
        echo 0:4 0:2
        ;;
    exp)
        echo 0:3 0:16
        ;;
    ln)
        echo 1:5 0:2
        ;;
    pow)
        echo 1:2 0:4
        ;;
    esac
}

zoom2() {
    case $1 in
    sqrt)
        echo 112:144 10.25:12.25
        ;;
    exp)
        echo 4:5 50:150
        ;;
    ln)
        echo 3:4 1:1.5
        ;;
    pow)
        echo 8:12 50:150
        ;;
    esac
}

for func in sqrt exp ln pow
do

    for fptype in ufp8p8 ufp24p8 ufp16p16 ufp8p24
    do
        echo "Calculating algorithmic data..."
        ./precision $fptype $func > precision.dat

        outfile=$1/algo_precision_$fptype\_$func
        gengraph `overview $func` $outfile\_overview
        gengraph `zoom1 $func` $outfile\_zoom1
        gengraph `zoom2 $func` $outfile\_zoom2

        echo "Adding lines to index.html..."

        outfile=`basename $outfile`
        ( cat << __EOF__
<B> $func - $fptype - algorithmic </B><BR>
<IMG SRC="${outfile}_overview.png">
<IMG SRC="${outfile}_zoom1.png">
<IMG SRC="${outfile}_zoom2.png">
<BR>
__EOF__
) >> $1/index.html

        echo "Calculating LUT data..."
        ./precisionlut $fptype $func > precision.dat

        outfile=$1/lut_precision_$fptype\_$func
        gengraph `overview $func` $outfile\_overview
        gengraph `zoom1 $func` $outfile\_zoom1
        gengraph `zoom2 $func` $outfile\_zoom2

        echo "Adding lines to index.html..."

        outfile=`basename $outfile`
        ( cat << __EOF__
<B> $func - $fptype - lut </B><BR>
<IMG SRC="${outfile}_overview.png">
<IMG SRC="${outfile}_zoom1.png">
<IMG SRC="${outfile}_zoom2.png">
<P><HR>
__EOF__
) >> $1/index.html


    done
done

echo "</BODY>" >> $1/index.html


--- NEW FILE: genlut.c ---
/* ------------------------------------------------------------------------- */

/*
 * Fixed Point Math Macro Library - Generate Look-Up-Tables
 *
 * (C)opyright 2005 by Ivo van Poorten
 * Licensed under version 2 of the GPL
 *
 * $Id: genlut.c,v 1.1 2005/09/13 03:31:02 ivop Exp $
 *
 */

/* ------------------------------------------------------------------------- */

#include <math.h>
#include <stdio.h>
#include <inttypes.h>

/* ------------------------------------------------------------------------- */

#define outputccode(A, B, C, D, e) \
    printf("\n/* "A" */\n\n"); \
    printf("static "B" "C"[%i] = {\n", e); \
    for (i=0; i<e-1; i++) { \
        printf("%uU, ", D[i]); \
    } \
    printf("%uU };\n", D[i]);

/* ------------------------------------------------------------------------- */

int main()
{
    double round(double d);
    uint16_t ufp8p8sqrtlut_16[129],   ufp8p8sqrtlut_256[121];
    uint32_t ufp24p8sqrtlut_16[129],  ufp24p8sqrtlut_256[121],
             ufp24p8sqrtlut_64k[129], ufp24p8sqrtlut_16m[129];
    uint32_t ufp16p16sqrtlut_16[129], ufp16p16sqrtlut_256[121],
             ufp16p16sqrtlut_64k[129];
    uint32_t ufp8p24sqrtlut_4[129],   ufp8p24sqrtlut_16[129],
             ufp8p24sqrtlut_256[121];

    uint16_t ufp8p8explut_16[129],   ufp8p8explut_256[121];
    uint32_t ufp24p8explut_16[129],  ufp24p8explut_256[121],
             ufp24p8explut_64k[129], ufp24p8explut_16m[129];
    uint32_t ufp16p16explut_16[129], ufp16p16explut_256[121],
             ufp16p16explut_64k[129];
    uint32_t ufp8p24explut_4[129],   ufp8p24explut_16[129],
             ufp8p24explut_256[121];

    uint16_t ufp8p8lnlut_16[129],   ufp8p8lnlut_256[121];
    uint32_t ufp24p8lnlut_16[129],  ufp24p8lnlut_256[121],
             ufp24p8lnlut_64k[129], ufp24p8lnlut_16m[129];
    uint32_t ufp16p16lnlut_16[129], ufp16p16lnlut_256[121],
             ufp16p16lnlut_64k[129];
    uint32_t ufp8p24lnlut_4[129],   ufp8p24lnlut_16[129],
             ufp8p24lnlut_256[121];
    int i;
    double d, e, f;

    for (i=0; i<=128; i++) {
        d = sqrt(i/32.0);
        e = exp(i/32.0);
        f = log(i/32.0);
        /* sqrt */
        ufp8p24sqrtlut_4[i] = round(d*65536.0*256.0);
        /* exp */
        ufp8p24explut_4[i]  = round(e*65536.0*256.0);
        /* ln */
        if (f<0) f = 0.0;
        ufp8p24lnlut_4[i]   = round(f*65536.0*256.0);
    }

    for (i=0; i<=128; i++) {
        d = sqrt(i/8.0);
        e = exp(i/8.0);
        f = log(i/8.0);
        /* sqrt */
        ufp8p8sqrtlut_16[i]   = round(d*256.0);
        ufp24p8sqrtlut_16[i]  = round(d*256.0);
        ufp16p16sqrtlut_16[i] = round(d*65536.0);
        ufp8p24sqrtlut_16[i]  = round(d*65536.0*256.0);
        /* exp */
        if (e>=16777216.0) e = 0.0;
        ufp24p8explut_16[i]  = round(e*256.0);
        if (e>=65536.0) e = 0.0;
        ufp16p16explut_16[i] = round(e*65536.0);
        if (e>=256.0) e = 256.0;
        ufp8p24explut_16[i]  = round(e*65536.0*256.0);
        ufp8p8explut_16[i]   = round(e*256.0);
        /* ln */
        if (f<0) f = 0.0;
        ufp8p8lnlut_16[i]   = round(f*256.0);
        ufp24p8lnlut_16[i]  = round(f*256.0);
        ufp16p16lnlut_16[i] = round(f*65536.0);
        ufp8p24lnlut_16[i]  = round(f*65536.0*256.0);
    }

    for (i=0; i<=120; i++) {
        d = sqrt(16.0 + i*2.0);
        e = exp(16.0 + i*2.0);
        f = log(16.0 + i*2.0);
        /* sqrt */
        ufp8p8sqrtlut_256[i]   = round(d*256.0);
        ufp24p8sqrtlut_256[i]  = round(d*256.0);
        ufp16p16sqrtlut_256[i] = round(d*65536.0);
        ufp8p24sqrtlut_256[i]  = round(d*65536.0*256.0);
        /* exp */
        if (e>=16777216.0) e = 0.0;
        ufp24p8explut_256[i]  = round(e*256.0);
        if (e>=65536.0) e = 0.0;
        ufp16p16explut_256[i] = round(e*65536.0);
        if (e>=256.0) e = 0.0;
        ufp8p24explut_256[i]  = round(e*65536.0*256.0);
        ufp8p8explut_256[i]   = round(e*256.0);
        /* ln */
        ufp8p8lnlut_256[i]   = round(f*256.0);
        ufp24p8lnlut_256[i]  = round(f*256.0);
        ufp16p16lnlut_256[i] = round(f*65536.0);
        ufp8p24lnlut_256[i]  = round(f*65536.0*256.0);
    }

    for (i=0; i<=128; i++) {
        d = sqrt(256.0 + i*2.0*256.0);
        e = exp(256.0 + i*2.0*256.0);
        f = log(256.0 + i*2.0*256.0);
        /* sqrt */
        ufp24p8sqrtlut_64k[i]   = round(d*256.0);
        ufp16p16sqrtlut_64k[i]  = round(d*65536.0);
        /* exp */
        e = 0.0;
        ufp24p8explut_64k[i]   = round(e*256.0);
        ufp16p16explut_64k[i]  = round(e*65536.0);
        /* ln */
        ufp24p8lnlut_64k[i]   = round(f*256.0);
        ufp16p16lnlut_64k[i]  = round(f*65536.0);
    }

    for (i=0; i<=128; i++) {
        d = sqrt(65536.0 + i*2.0*65536.0);
        e = exp(65536.0 + i*2.0*65536.0);
        f = log(65536.0 + i*2.0*65536.0);
        /* sqrt */
        ufp24p8sqrtlut_16m[i] = round(d*256.0);
        /* exp */
        e = 0.0;
        ufp24p8explut_16m[i] = round(e*256.0);
        /* ln */
        ufp24p8lnlut_16m[i] = round(f*256.0);
    }

    printf("/* DO NOT INCLUDE THIS FILE DIRECTLY! ALWAYS ");
    printf("INCLUDE fixedpointmath.h only!! */\n\n");

    printf("/*\n * Fixed Point Math Macro Library - Look Up Tables\n");
    printf(" * Licensed under version 2 of the GPL\n */\n\n");

    printf("#ifndef __FIXEDPOINTMATHLUT_H__\n");
    printf("#define __FIXEDPOINTMATHLUT_H__\n");

    /* sqrt */
    printf("\n#if defined(__FPM_ENABLE_SQRT_LUT__) || "
                 "defined(__FPM_ENABLE_ALL_LUT__)\n");

    outputccode("ufp8p8 sqrt 16",  "ufp8p8_t", "_ufp8p8sqrtlut_16",
                ufp8p8sqrtlut_16, 129);
    outputccode("ufp8p8 sqrt 256", "ufp8p8_t", "_ufp8p8sqrtlut_256",
                ufp8p8sqrtlut_256, 121);

    outputccode("ufp24p8 sqrt 16",  "ufp24p8_t", "_ufp24p8sqrtlut_16",
                ufp24p8sqrtlut_16, 129);
    outputccode("ufp24p8 sqrt 256", "ufp24p8_t", "_ufp24p8sqrtlut_256",
                ufp24p8sqrtlut_256, 121);
    outputccode("ufp24p8 sqrt 64k", "ufp24p8_t", "_ufp24p8sqrtlut_64k",
                ufp24p8sqrtlut_64k, 129);
    outputccode("ufp24p8 sqrt 16m", "ufp24p8_t", "_ufp24p8sqrtlut_16m",
                ufp24p8sqrtlut_16m, 129);

    outputccode("ufp16p16 sqrt 16",  "ufp16p16_t", "_ufp16p16sqrtlut_16",
                ufp16p16sqrtlut_16, 129);
    outputccode("ufp16p16 sqrt 256", "ufp16p16_t", "_ufp16p16sqrtlut_256",
                ufp16p16sqrtlut_256, 121);
    outputccode("ufp16p16 sqrt 64k", "ufp16p16_t", "_ufp16p16sqrtlut_64k",
                ufp16p16sqrtlut_64k, 129);

    outputccode("ufp8p24 sqrt 4",  "ufp8p24_t", "_ufp8p24sqrtlut_4",
                ufp8p24sqrtlut_4, 129);
    outputccode("ufp8p24 sqrt 16", "ufp8p24_t", "_ufp8p24sqrtlut_16",
                ufp8p24sqrtlut_16, 129);
    outputccode("ufp8p24 sqrt 256", "ufp8p24_t", "_ufp8p24sqrtlut_256",
                ufp8p24sqrtlut_256, 121);

    printf("\n#endif /* SQRT LUT */\n");

    /* exp */
    printf("\n#if defined(__FPM_ENABLE_EXP_LUT__) || "
                 "defined(__FPM_ENABLE_ALL_LUT__)\n");

    outputccode("ufp8p8 exp 16",  "ufp8p8_t", "_ufp8p8explut_16",
                ufp8p8explut_16, 129);
    outputccode("ufp8p8 exp 256", "ufp8p8_t", "_ufp8p8explut_256",
                ufp8p8explut_256, 121);

    outputccode("ufp24p8 exp 16",  "ufp24p8_t", "_ufp24p8explut_16",
                ufp24p8explut_16, 129);
    outputccode("ufp24p8 exp 256", "ufp24p8_t", "_ufp24p8explut_256",
                ufp24p8explut_256, 121);
    outputccode("ufp24p8 exp 64k", "ufp24p8_t", "_ufp24p8explut_64k",
                ufp24p8explut_64k, 129);
    outputccode("ufp24p8 exp 16m", "ufp24p8_t", "_ufp24p8explut_16m",
                ufp24p8explut_16m, 129);

    outputccode("ufp16p16 exp 16",  "ufp16p16_t", "_ufp16p16explut_16",
                ufp16p16explut_16, 129);
    outputccode("ufp16p16 exp 256", "ufp16p16_t", "_ufp16p16explut_256",
                ufp16p16explut_256, 121);
    outputccode("ufp16p16 exp 64k", "ufp16p16_t", "_ufp16p16explut_64k",
                ufp16p16explut_64k, 129);

    outputccode("ufp8p24 exp 4",  "ufp8p24_t", "_ufp8p24explut_4",
                ufp8p24explut_4, 129);
    outputccode("ufp8p24 exp 16", "ufp8p24_t", "_ufp8p24explut_16",
                ufp8p24explut_16, 129);
    outputccode("ufp8p24 exp 256", "ufp8p24_t", "_ufp8p24explut_256",
                ufp8p24explut_256, 121);

    printf("\n#endif /* EXP LUT */\n");

    /* ln */
    printf("\n#if defined(__FPM_ENABLE_LN_LUT__) || "
                 "defined(__FPM_ENABLE_ALL_LUT__)\n");

    outputccode("ufp8p8 ln 16",  "ufp8p8_t", "_ufp8p8lnlut_16",
                ufp8p8lnlut_16, 129);
    outputccode("ufp8p8 ln 256", "ufp8p8_t", "_ufp8p8lnlut_256",
                ufp8p8lnlut_256, 121);

    outputccode("ufp24p8 ln 16",  "ufp24p8_t", "_ufp24p8lnlut_16",
                ufp24p8lnlut_16, 129);
    outputccode("ufp24p8 ln 256", "ufp24p8_t", "_ufp24p8lnlut_256",
                ufp24p8lnlut_256, 121);
    outputccode("ufp24p8 ln 64k", "ufp24p8_t", "_ufp24p8lnlut_64k",
                ufp24p8lnlut_64k, 129);
    outputccode("ufp24p8 ln 16m", "ufp24p8_t", "_ufp24p8lnlut_16m",
                ufp24p8lnlut_16m, 129);

    outputccode("ufp16p16 ln 16",  "ufp16p16_t", "_ufp16p16lnlut_16",
                ufp16p16lnlut_16, 129);
    outputccode("ufp16p16 ln 256", "ufp16p16_t", "_ufp16p16lnlut_256",
                ufp16p16lnlut_256, 121);
    outputccode("ufp16p16 ln 64k", "ufp16p16_t", "_ufp16p16lnlut_64k",
                ufp16p16lnlut_64k, 129);

    outputccode("ufp8p24 ln 4",  "ufp8p24_t", "_ufp8p24lnlut_4",
                ufp8p24lnlut_4, 129);
    outputccode("ufp8p24 ln 16", "ufp8p24_t", "_ufp8p24lnlut_16",
                ufp8p24lnlut_16, 129);
    outputccode("ufp8p24 ln 256", "ufp8p24_t", "_ufp8p24lnlut_256",
                ufp8p24lnlut_256, 121);

    printf("\n#endif /* LN LUT */\n");

    printf("\n#endif\n");

    return 0;
}

/* ------------------------------------------------------------------------- */


--- NEW FILE: INSTALL ---
$Id: INSTALL,v 1.1 2005/09/13 03:31:02 ivop Exp $

See http://fpm.berlios.de/


--- NEW FILE: Makefile ---
#
# Fixed Point Math Macro Library - Makefile
#
# (C)opyright 2005 by Ivo van Poorten
# Licensed under version 2 of the GPL
#
# $Id: Makefile,v 1.1 2005/09/13 03:31:02 ivop Exp $
#

include config.mak

GENLUTOBJS		= genlut.o
BENCHOBJS		= benchmark.o
BENCHLUTOBJS	= benchmarklut.o
PRECOBJS		= precision.o
PRECLUTOBJS		= precisionlut.o

GENERATEDFILES	= config.mak include/fixedpointmathlut.h

.PHONY:	all
all:				$(GENERATEDFILES)

#This file is generated
include/fixedpointmathlut.h:	genlut
	./genlut 2>/dev/null | $(INDENT) 1>include/fixedpointmathlut.h

genlut:				$(GENLUTOBJS)
	$(LD) -o $@ $(GENLUTOBJS) $(LDFLAGS)

benchmark:			$(GENERATEDFILES) $(BENCHOBJS)
	$(LD) -o $@ $(BENCHOBJS) $(LDFLAGS)

benchmarklut:		$(GENERATEDFILES) $(BENCHLUTOBJS)
	$(LD) -o $@ $(BENCHLUTOBJS) $(LDFLAGS)

precision:			$(GENERATEDFILES) $(PRECOBJS)
	$(LD) -o $@ $(PRECOBJS) $(LDFLAGS)

precisionlut:		$(GENERATEDFILES) $(PRECLUTOBJS)
	$(LD) -o $@ $(PRECLUTOBJS) $(LDFLAGS)

.PHONY:	benchmarks
benchmarks:			benchmark benchmarklut

.PHONY: precisions
precisions:			precision precisionlut

benchmarklut.c:		benchmark.c
	echo "#define __FPM_ENABLE_ALL_LUT__" 1> benchmarklut.c
	cat benchmark.c 1>> benchmarklut.c

precisionlut.c:		precision.c
	echo "#define __FPM_ENABLE_ALL_LUT__" 1> precisionlut.c
	cat precision.c 1>> precisionlut.c

.PHONY:	barcharts
barcharts:			benchmark.dat benchmarklut.dat
	mkdir -p barcharts
	sh ./genbarcharts.sh benchmark.dat    barcharts algo
	sh ./genbarcharts.sh benchmarklut.dat barcharts lut

benchmark.dat:		benchmark
	./benchmark		1> benchmark.dat 2>/dev/null

benchmarklut.dat:	benchmarklut
	./benchmarklut	1> benchmarklut.dat 2>/dev/null

graphs:				precision precisionlut
	mkdir -p graphs
	sh ./gengraphs.sh graphs

config.mak:			configure
	@echo
	@echo "#############################"
	@echo "Please run ./configure first!"
	@echo "#############################"
	@echo
	@echo "If you have done so before, you have to do it again, because it"
	@echo "has changed."
	@echo
	@exit 1

-include deps/$(GENLUTOBJS:.o=.d)

-include deps/$(BENCHOBJS:.o=.d)

-include deps/$(BENCHLUTOBJS):.o=.d)

-include deps/$(PRECOBJS:.o=.d)

-include deps/$(PRECLUTOBJS:.0=.d)

%.o:	%.c
	$(CC) -c $(CFLAGS) $(INCLUDES) $*.c -o $*.o $(DEBUG) $(WARNINGS)
	mkdir -p deps
	$(CCFORDEPS) $(CFLAGS) $(INCLUDES) $*.c 1>deps/$*.d

.PHONY:	clean
clean:
	$(MAKE) -C docs/xml clean
	$(MAKE) -C include clean
	$(MAKE) -C tools clean
	rm -f *.o benchmark genlut
	rm -f benchmark.dat benchmarklut benchmarklut.c benchmarklut.dat
	rm -f precision.dat precision precisionlut precisionlut.c
	rm -rf deps barcharts graphs

.PHONY:	distclean
distclean:		clean
	$(MAKE) -C docs/xml distclean
	$(MAKE) -C include distclean
	$(MAKE) -C tools distclean
	rm -f config.mak config.sh configure.log
	rm -f *~

.PHONY:	install
install:		all
	@echo Installing to $(PREFIX)
	test -d $(PREFIX)/include || mkdir -p $(PREFIX)/include
	cp -v include/fixedpointmath*.h $(PREFIX)/include
	chmod 644 $(PREFIX)/include/fixedpointmath*.h

.PHONY: uninstall
uninstall:
	@echo Uninstalling from $(PREFIX)
	rm -f $(PREFIX)/include/fixedpointmath*.h

.PHONY: docs
docs:
	$(MAKE) -C docs/xml

.PHONY: docs2web
docs2web:	docs
	@echo
	cp -af docs/HTML docs/HTML-single ../website/docs
	@echo
	@echo "Don't forget to run cvs diff and/or cvs commit in ../website/docs"
	@echo


--- NEW FILE: precision.c ---
/* ------------------------------------------------------------------------- */

/*
 * Fixed Point Math Macro Library - Precision
 *
 * (C)2005 by Ivo van Poorten
 * Licensed under version 2 of the GPL
 *
 * $Id: precision.c,v 1.1 2005/09/13 03:31:02 ivop Exp $
 *
 */

/* ------------------------------------------------------------------------- */

#include <stdio.h>
#include <math.h>
#include <string.h>

#include "fixedpointmath.h"

/* ------------------------------------------------------------------------- */

#define TYPEufp8p8   0
#define TYPEufp24p8  1
#define TYPEufp16p16 2
#define TYPEufp8p24  3

#define FUNCsqrt    0
#define FUNCexp     1
#define FUNCln      2
#define FUNCpow     3

#define PVAL      2.0L

/* ------------------------------------------------------------------------- */

double startat[4] = { 0.0L, 0.0L, 1.0L, 1.0L };

/* ------------------------------------------------------------------------- */

int main(int argc, char **argv)
{
    double f, g1 = 0.0L, g2 = 0.0L;
    int fptype = -1, func = -1;

    if (argc != 3) {
        fprintf(stderr,"usage: %s <fixed-point-type> <function>\n", argv[0]);
        return -1;
    }

    if (!strncmp(argv[1], "ufp8p8",   5))    fptype = TYPEufp8p8;
    if (!strncmp(argv[1], "ufp24p8",  6))    fptype = TYPEufp24p8;
    if (!strncmp(argv[1], "ufp16p16", 7))    fptype = TYPEufp16p16;
    if (!strncmp(argv[1], "ufp8p24",  6))    fptype = TYPEufp8p24;

    if (!strncmp(argv[2], "sqrt", 4))       func = FUNCsqrt;
    if (!strncmp(argv[2], "exp",  3))       func = FUNCexp;
    if (!strncmp(argv[2], "ln",   2))       func = FUNCln;
    if (!strncmp(argv[2], "pow",  3))       func = FUNCpow;

    if (fptype == -1) {
        fprintf(stderr, "unknown type!\n");
        return -1;
    }

    if (func == -1) {
        fprintf(stderr, "unknown function!\n");
        return -1;
    }

    for (f=startat[func]; f<256.0L; f+=0.01L) {

        switch(func) {
        case FUNCsqrt:
            g1 = sqrt(f);
            break;
        case FUNCexp:
            g1 = exp(f);
            break;
        case FUNCln:
            g1 = log(f);
            break;
        case FUNCpow:
            g1 = pow(f, PVAL);
            break;
        }

        switch(fptype) {

        case TYPEufp8p8:
            switch(func) {
            case FUNCsqrt:
                g2 = ufp8p8tod ( sqrtufp8p8 (dtoufp8p8(f)) );
                break;
            case FUNCexp:
                g2 = ufp8p8tod ( expufp8p8 (dtoufp8p8(f)) );
                break;
            case FUNCln:
                g2 = ufp8p8tod ( lnufp8p8 (dtoufp8p8(f)) );
                break;
            case FUNCpow:
                g2 = ufp8p8tod ( powufp8p8 (dtoufp8p8(f), dtoufp8p8(PVAL)) );
                break;
            }
            break;

        case TYPEufp24p8:
            switch(func) {
            case FUNCsqrt:
                g2 = ufp24p8tod ( sqrtufp24p8 (dtoufp24p8(f)) );
                break;
            case FUNCexp:
                g2 = ufp24p8tod ( expufp24p8 (dtoufp24p8(f)) );
                break;
            case FUNCln:
                g2 = ufp24p8tod ( lnufp24p8 (dtoufp24p8(f)) );
                break;
            case FUNCpow:
                g2 = ufp24p8tod ( powufp24p8 (dtoufp24p8(f),
                                                        dtoufp24p8(PVAL)) );
                break;
            }
            break;

        case TYPEufp16p16:
            switch(func) {
            case FUNCsqrt:
                g2 = ufp16p16tod ( sqrtufp16p16 (dtoufp16p16(f)) );
                break;
            case FUNCexp:
                g2 = ufp16p16tod ( expufp16p16 (dtoufp16p16(f)) );
                break;
            case FUNCln:
                g2 = ufp16p16tod ( lnufp16p16 (dtoufp16p16(f)) );
                break;
            case FUNCpow:
                g2 = ufp16p16tod ( powufp16p16 (dtoufp16p16(f),
                                                        dtoufp16p16(PVAL)) );
                break;
            }
            break;

        case TYPEufp8p24:
            switch(func) {
            case FUNCsqrt:
                g2 = ufp8p24tod ( sqrtufp8p24 (dtoufp8p24(f)) );
                break;
            case FUNCexp:
                g2 = ufp8p24tod ( expufp8p24 (dtoufp8p24(f)) );
                break;
            case FUNCln:
                g2 = ufp8p24tod ( lnufp8p24 (dtoufp8p24(f)) );
                break;
            case FUNCpow:
                g2 = ufp8p24tod ( powufp8p24 (dtoufp8p24(f),
                                                        dtoufp8p24(PVAL)) );
                break;
            }
            break;

        } /* end of outer-switch */

        printf("%0.8lf %0.8lf %0.8lf\n", f, g1, g2);

    }

    return 0;
}

/* ------------------------------------------------------------------------- */


--- NEW FILE: README ---
$Id: README,v 1.1 2005/09/13 03:31:02 ivop Exp $

See http://fpm.berlios.de/


--- NEW FILE: TODO ---
TODO
====

$Id: TODO,v 1.1 2005/09/13 03:31:02 ivop Exp $

- Regression tests.
- Removal of conditional statement in sqrt macros (in converge); find a way
  to change them into 0 or 1 and use multiplication. This should be a huge
  speed up for the algorithmic versions.
- Add more functions like (arc)sin, (arc)cos, (arc)tan, et cetera.
- Inivestigate possibilities to increase speed with SIMD instructions. (might
  be difficult because a lot of algorithms use 64 bits at times. SSE2 maybe? )
- Write sample code. Preferably something that does something useful :)
- Document __FPM_VERSION_RELEASE__  valid values are: alpha, beta, stable and
  cvs.
- Add selective LUT support, like only include luts for a specific f.p type




From nobody at sheep.berlios.de  Tue Sep 13 05:40:21 2005
From: nobody at sheep.berlios.de (ivop)
Date: Tue, 13 Sep 2005 05:40:21 +0200
Subject: [fpm-cvslog] fpm .cvsignore,1.6,1.7
Message-ID: <200509130340.j8D3eL124471@bat.berlios.de>

Update of /cvsroot/fpm/fpm
In directory sheep:/tmp/cvs-serv28754

Modified Files:
	.cvsignore 
Log Message:


Index: .cvsignore
===================================================================
RCS file: /cvsroot/fpm/fpm/.cvsignore,v
retrieving revision 1.6
retrieving revision 1.7
diff -u -d -r1.6 -r1.7
--- .cvsignore	4 Sep 2005 02:00:12 -0000	1.6
+++ .cvsignore	13 Sep 2005 03:40:18 -0000	1.7
@@ -1,7 +1,6 @@
 deps
 barcharts
 graphs
-test
 genlut
 benchmark
 benchmarklut



From nobody at sheep.berlios.de  Tue Sep 13 05:43:59 2005
From: nobody at sheep.berlios.de (ivop)
Date: Tue, 13 Sep 2005 05:43:59 +0200
Subject: [fpm-cvslog] fpm/include - New directory
Message-ID: <200509130343.j8D3hx124530@bat.berlios.de>

Update of /cvsroot/fpm/fpm/include
In directory sheep:/tmp/cvs-serv29350/include

Log Message:
Directory /cvsroot/fpm/fpm/include added to the repository




From nobody at sheep.berlios.de  Tue Sep 13 05:44:47 2005
From: nobody at sheep.berlios.de (ivop)
Date: Tue, 13 Sep 2005 05:44:47 +0200
Subject: [fpm-cvslog] fpm/include Makefile,NONE,1.1 fixedpointmath.h,NONE,1.1 fixedpointmathcode.h,NONE,1.1
Message-ID: <200509130344.j8D3il124552@bat.berlios.de>

Update of /cvsroot/fpm/fpm/include
In directory sheep:/tmp/cvs-serv29544

Added Files:
	Makefile fixedpointmath.h fixedpointmathcode.h 
Log Message:
initial check in



--- NEW FILE: Makefile ---
#
# Fixed Point Math Macro Library - Makefile
#
# (C)opyright 2005 by Ivo van Poorten
# Licensed under version 2 of the GPL
#
# $Id: Makefile,v 1.1 2005/09/13 03:44:44 ivop Exp $
#

include ../config.mak

.PHONY:	clean
clean:
	rm -f fixedpointmathlut.h

.PHONY:	distclean
distclean:		clean
	rm -f *~


--- NEW FILE: fixedpointmath.h ---
/* ------------------------------------------------------------------------- */

/*
 * Fixed Point Math Macro Library
 *
 * (C)opyright 2005 by Ivo van Poorten
 * Licensed under version 2 of the GPL
 *
 * $Id: fixedpointmath.h,v 1.1 2005/09/13 03:44:44 ivop Exp $
 *
 */

/* ------------------------------------------------------------------------- */

#ifndef __FIXEDPOINTMATH_H__
#define __FIXEDPOINTMATH_H__

/* ------------------------------------------------------------------------- */

#define __FPM_VERSION__         0.30
#define __FPM_VERSION_MAJOR__   0
#define __FPM_VERSION_MINOR__   30
#define __FPM_VERSION_RELEASE__ cvs

/* ------------------------------------------------------------------------- */

#include <inttypes.h>
#include "fixedpointmathcode.h"

/* ------------------------------------------------------------------------- */

/* int to fixed point */

#define itofp8p8(x)     _itofp8p8(x)
#define itofp24p8(x)    _itofp24p8(x)
#define itofp16p16(x)   _itofp16p16(x)
#define itofp8p24(x)    _itofp8p24(x)
#define itoufp8p8(x)    _itoufp8p8(x)
#define itoufp24p8(x)   _itoufp24p8(x)
#define itoufp16p16(x)  _itoufp16p16(x)
#define itoufp8p24(x)   _itoufp8p24(x)

/* float to fixed point */

#define ftofp8p8(x)     _ftofp8p8(x)
#define ftofp24p8(x)    _ftofp24p8(x)
#define ftofp16p16(x)   _ftofp16p16(x)
#define ftofp8p24(x)    _ftofp8p24(x)
#define ftoufp8p8(x)    _ftoufp8p8(x)
#define ftoufp24p8(x)   _ftoufp24p8(x)
#define ftoufp16p16(x)  _ftoufp16p16(x)
#define ftoufp8p24(x)   _ftoufp8p24(x)

/* double to fixed point */

#define dtofp8p8(x)     _dtofp8p8(x)
#define dtofp24p8(x)    _dtofp24p8(x)
#define dtofp16p16(x)   _dtofp16p16(x)
#define dtofp8p24(x)    _dtofp8p24(x)
#define dtoufp8p8(x)    _dtoufp8p8(x)
#define dtoufp24p8(x)   _dtoufp24p8(x)
#define dtoufp16p16(x)  _dtoufp16p16(x)
#define dtoufp8p24(x)   _dtoufp8p24(x)

/* fixed point to int */

#define fp8p8toi(x)     _fp8p8toi(x)
#define fp24p8toi(x)    _fp24p8toi(x)
#define fp16p16toi(x)   _fp16p16toi(x)
#define fp8p24toi(x)    _fp8p24toi(x)
#define ufp8p8toi(x)    _ufp8p8toi(x)
#define ufp24p8toi(x)   _ufp24p8toi(x)
#define ufp16p16toi(x)  _ufp16p16toi(x)
#define ufp8p24toi(x)   _ufp8p24toi(x)

/* fixed point to float */

#define fp8p8tof(x)     _fp8p8tof(x)
#define fp24p8tof(x)    _fp24p8tof(x)
#define fp16p16tof(x)   _fp16p16tof(x)
#define fp8p24tof(x)    _fp8p24tof(x)
#define ufp8p8tof(x)    _ufp8p8tof(x)
#define ufp24p8tof(x)   _ufp24p8tof(x)
#define ufp16p16tof(x)  _ufp16p16tof(x)
#define ufp8p24tof(x)   _ufp8p24tof(x)

/* fixed point to double */

#define fp8p8tod(x)     _fp8p8tod(x)
#define fp24p8tod(x)    _fp24p8tod(x)
#define fp16p16tod(x)   _fp16p16tod(x)
#define fp8p24tod(x)    _fp8p24tod(x)
#define ufp8p8tod(x)    _ufp8p8tod(x)
#define ufp24p8tod(x)   _ufp24p8tod(x)
#define ufp16p16tod(x)  _ufp16p16tod(x)
#define ufp8p24tod(x)   _ufp8p24tod(x)

/* multiplication (x*y) */

#define mulfp8p8(x,y)    _mulfp8p8(x,y)
#define mulfp24p8(x,y)   _mulfp24p8(x,y)
#define mulfp16p16(x,y)  _mulfp16p16(x,y)
#define mulfp8p24(x,y)   _mulfp8p24(x,y)
#define mulufp8p8(x,y)   _mulufp8p8(x,y)
#define mulufp24p8(x,y)  _mulufp24p8(x,y)
#define mulufp16p16(x,y) _mulufp16p16(x,y)
#define mulufp8p24(x,y)  _mulufp8p24(x,y)

/* division (x/y) */

#define divfp8p8(x,y)    _divfp8p8(x,y)
#define divfp24p8(x,y)   _divfp24p8(x,y)
#define divfp16p16(x,y)  _divfp16p16(x,y)
#define divfp8p24(x,y)   _divfp8p24(x,y)
#define divufp8p8(x,y)   _divufp8p8(x,y)
#define divufp24p8(x,y)  _divufp24p8(x,y)
#define divufp16p16(x,y) _divufp16p16(x,y)
#define divufp8p24(x,y)  _divufp8p24(x,y)

/* square root */

/* Hmm, might need to move this stuff to ....code and have one more level
 * of _ so here it's just #define bla(x) _bla(x) no matter what, especially
 * when the other functions get LUT support too and/or more functions
 * are added.
 */

#if defined(__FPM_ENABLE_ALL_LUT__) || defined(__FPM_ENABLE_SQRT_LUT__)

#define sqrtufp8p8(x)   _sqrtufp8p8lut(x)
#define sqrtufp24p8(x)  _sqrtufp24p8lut(x)
#define sqrtufp16p16(x) _sqrtufp16p16lut(x)
#define sqrtufp8p24(x)  _sqrtufp8p24lut(x)
#define sqrtfp8p8(x)    _sqrtfp8p8lut(x)
#define sqrtfp24p8(x)   _sqrtfp24p8lut(x)
#define sqrtfp16p16(x)  _sqrtfp16p16lut(x)
#define sqrtfp8p24(x)   _sqrtfp8p24lut(x)

#else

#define sqrtufp8p8(x)   _sqrtufp8p8(x)
#define sqrtufp24p8(x)  _sqrtufp24p8(x)
#define sqrtufp16p16(x) _sqrtufp16p16(x)
#define sqrtufp8p24(x)  _sqrtufp8p24(x)
#define sqrtfp8p8(x)    _sqrtfp8p8(x)
#define sqrtfp24p8(x)   _sqrtfp24p8(x)
#define sqrtfp16p16(x)  _sqrtfp16p16(x)
#define sqrtfp8p24(x)   _sqrtfp8p24(x)

#endif

/* exponential function e^x for x>=0 */

#if defined(__FPM_ENABLE_ALL_LUT__) || defined(__FPM_ENABLE_EXP_LUT__)

#define expufp8p8(x)   _expufp8p8lut(x)
#define expufp24p8(x)  _expufp24p8lut(x)
#define expufp16p16(x) _expufp16p16lut(x)
#define expufp8p24(x)  _expufp8p24lut(x)
#define expfp8p8(x)    _expfp8p8lut(x)
#define expfp24p8(x)   _expfp24p8lut(x)
#define expfp16p16(x)  _expfp16p16lut(x)
#define expfp8p24(x)   _expfp8p24lut(x)

#else

#define expfp8p8(x)     _expfp8p8(x)
#define expfp24p8(x)    _expfp24p8(x)
#define expfp16p16(x)   _expfp16p16(x)
#define expfp8p24(x)    _expfp8p24(x)
#define expufp8p8(x)    _expufp8p8(x)
#define expufp24p8(x)   _expufp24p8(x)
#define expufp16p16(x)  _expufp16p16(x)
#define expufp8p24(x)   _expufp8p24(x)

#endif

/* natural logarithm ln(x) */

#if defined(__FPM_ENABLE_ALL_LUT__) || defined(__FPM_ENABLE_LN_LUT__)

#define lnufp8p8(x)   _lnufp8p8lut(x)
#define lnufp24p8(x)  _lnufp24p8lut(x)
#define lnufp16p16(x) _lnufp16p16lut(x)
#define lnufp8p24(x)  _lnufp8p24lut(x)
#define lnfp8p8(x)    _lnfp8p8lut(x)
#define lnfp24p8(x)   _lnfp24p8lut(x)
#define lnfp16p16(x)  _lnfp16p16lut(x)
#define lnfp8p24(x)   _lnfp8p24lut(x)

#else

#define lnfp8p8(a)      _lnfp8p8(a)
#define lnfp24p8(a)     _lnfp24p8(a)
#define lnfp16p16(a)    _lnfp16p16(a)
#define lnfp8p24(a)     _lnfp8p24(a)
#define lnufp8p8(a)     _lnufp8p8(a)
#define lnufp24p8(a)    _lnufp24p8(a)
#define lnufp16p16(a)   _lnufp16p16(a)
#define lnufp8p24(a)    _lnufp8p24(a)

#endif

/* power function  pow(x,y) = x^y */

#define powfp8p8(x,y)    _powfp8p8(x,y)
#define powfp24p8(x,y)   _powfp24p8(x,y)
#define powfp16p16(x,y)  _powfp16p16(x,y)
#define powfp8p24(x,y)   _powfp8p24(x,y)
#define powufp8p8(x,y)   _powufp8p8(x,y)
#define powufp24p8(x,y)  _powufp24p8(x,y)
#define powufp16p16(x,y) _powufp16p16(x,y)
#define powufp8p24(x,y)  _powufp8p24(x,y)

/* ------------------------------------------------------------------------- */

#endif

/* ------------------------------------------------------------------------- */


--- NEW FILE: fixedpointmathcode.h ---
/* ------------------------------------------------------------------------- */

/* DO NOT INCLUDE THIS FILE DIRECTLY! ALWAYS INCLUDE fixedpointmath.h only!! */

/*
 * Fixed Point Math Macro Library
 *
 * This file contains the actual implementations of the functions.
 *
 * (C)opyright 2005 by Ivo van Poorten
 * Licensed under version 2 of the GPL
 *
 * $Id: fixedpointmathcode.h,v 1.1 2005/09/13 03:44:44 ivop Exp $
 *
 */

/* ------------------------------------------------------------------------- */

#ifndef __FIXEDPOINTMATHCODE_H__
#define __FIXEDPOINTMATHCODE_H__

/* ------------------------------------------------------------------------- */

#include <inttypes.h>

/* ------------------------------------------------------------------------- */

/* signed */

typedef int16_t fp8p8_t;
typedef int32_t fp24p8_t;
typedef int32_t fp16p16_t;
typedef int32_t fp8p24_t;

/* unsigned */

typedef uint16_t ufp8p8_t;
typedef uint32_t ufp24p8_t;
typedef uint32_t ufp16p16_t;
typedef uint32_t ufp8p24_t;

/* ------------------------------------------------------------------------- */

#if defined(__FPM_ENABLE_ALL_LUT__) || defined(__FPM_ENABLE_SQRT_LUT__)
#include "fixedpointmathlut.h"
#endif

/* ------------------------------------------------------------------------- */

#if defined(__INTEL_COMPILER)
#pragma warning(disable:187)    /* '=' where '==' may have been intended */
#endif

/* ------------------------------------------------------------------------- */

/* CONVERSION */

/* int to fixed point */

#define _itofp8p8(x)    ( (int16_t)  (x) << 8 )
#define _itofp24p8(x)   ( (int32_t)  (x) << 8 )
#define _itofp16p16(x)  ( (int32_t)  (x) << 16 )
#define _itofp8p24(x)   ( (int32_t)  (x) << 24 )
#define _itoufp8p8(x)   ( (uint16_t) (x) << 8 )
#define _itoufp24p8(x)  ( (uint32_t) (x) << 8 )
#define _itoufp16p16(x) ( (uint32_t) (x) << 16 )
#define _itoufp8p24(x)  ( (uint32_t) (x) << 24 )

/* float to fixed point */

#define _ftofp8p8(x)    ( (fp8p8_t)    ((x) * 256.0) )
#define _ftofp24p8(x)   ( (fp24p8_t)   ((x) * 256.0) )
#define _ftofp16p16(x)  ( (fp16p16_t)  ((x) * 65536.0) )
#define _ftofp8p24(x)   ( (fp8p24_t)   ((x) * 16777216.0) )
#define _ftoufp8p8(x)   ( (ufp8p8_t)   ((x) * 256.0) )
#define _ftoufp24p8(x)  ( (ufp24p8_t)  ((x) * 256.0) )
#define _ftoufp16p16(x) ( (ufp16p16_t) ((x) * 65536.0) )
#define _ftoufp8p24(x)  ( (ufp8p24_t)  ((x) * 16777216.0) )

/* double to fixed point */

#define _dtofp8p8(x)    _ftofp8p8(x)
#define _dtofp24p8(x)   _ftofp24p8(x)
#define _dtofp16p16(x)  _ftofp16p16(x)
#define _dtofp8p24(x)   _ftofp8p24(x)
#define _dtoufp8p8(x)   _ftoufp8p8(x)
#define _dtoufp24p8(x)  _ftoufp24p8(x)
#define _dtoufp16p16(x) _ftoufp16p16(x)
#define _dtoufp8p24(x)  _ftoufp8p24(x)

/* fixed point to int */

#define _fp8p8toi(x)    ( (x) >> 8 )
#define _fp24p8toi(x)   ( (x) >> 8 )
#define _fp16p16toi(x)  ( (x) >> 16 )
#define _fp8p24toi(x)   ( (x) >> 24 )
#define _ufp8p8toi(x)   _fp8p8toi(x)
#define _ufp24p8toi(x)  _fp24p8toi(x)
#define _ufp16p16toi(x) _fp16p16toi(x)
#define _ufp8p24toi(x)  _fp8p24toi(x)

/* fixed point to float */

#define _fp8p8tof(x)    ( (float) (x) / 256.0 )
#define _fp24p8tof(x)   ( (float) (x) / 256.0 )
#define _fp16p16tof(x)  ( (float) (x) / 65536.0 )
#define _fp8p24tof(x)   ( (float) (x) / 16777216.0 )
#define _ufp8p8tof(x)   _fp8p8tof(x)
#define _ufp24p8tof(x)  _fp24p8tof(x)
#define _ufp16p16tof(x) _fp16p16tof(x)
#define _ufp8p24tof(x)  _fp8p24tof(x)

/* fixed point to double */

#define _fp8p8tod(x)    ( (double) (x) / 256.0 )
#define _fp24p8tod(x)   ( (double) (x) / 256.0 )
#define _fp16p16tod(x)  ( (double) (x) / 65536.0 )
#define _fp8p24tod(x)   ( (double) (x) / 16777216.0 )
#define _ufp8p8tod(x)   _fp8p8tod(x)
#define _ufp24p8tod(x)  _fp24p8tod(x)
#define _ufp16p16tod(x) _fp16p16tod(x)
#define _ufp8p24tod(x)  _fp8p24tod(x)

/* fixed point to fixed point */

#define _fp8p8tofp8p8(x)                        (x)
#define _fp8p8tofp24p8(x)         ((fp24p8_t)   (x))
#define _fp8p8tofp16p16(x)      ( ((fp16p16_t)  (x)) <<  8 )
#define _fp8p8tofp8p24(x)       ( ((fp8p24_t)   (x)) << 16 )
#define _ufp8p8toufp8p8(x)                      (x)
#define _ufp8p8toufp24p8(x)       ((ufp24p8_t)  (x))
#define _ufp8p8toufp16p16(x)    ( ((ufp16p16_t) (x)) <<  8 )
#define _ufp8p8toufp8p24(x)     ( ((ufp8p24_t)  (x)) << 16 )

#define _fp24p8tofp8p8(x)         ((fp8p8_t)    (x))
#define _fp24p8tofp24p8(x)                      (x)
#define _fp24p8tofp16p16(x)     ( ((fp16p16_t)  (x)) << 8 )
#define _fp24p8tofp8p24(x)      ( ((fp8p24_t)   (x)) << 16)
#define _ufp24p8toufp8p8(x)       ((ufp8p8_t)   (x))
#define _ufp24p8toufp24p8(x)                    (x)
#define _ufp24p8toufp16p16(x)   ( ((ufp16p16_t) (x)) << 8 )
#define _ufp24p8toufp8p24(x)    ( ((ufp8p24_t)  (x)) << 16)

#define _fp16p16tofp8p8(x)      ( (fp8p8_t)    ((x)  >> 8 ) )
#define _fp16p16tofp24p8(x)     ( (fp24p8_t)   ((x)  >> 8 ) )
#define _fp16p16tofp16p16(x)                    (x)
#define _fp16p16tofp8p24(x)     ( (fp8p24_t)   ((x)  << 8 ) )
#define _ufp16p16toufp8p8(x)    ( (ufp8p8_t)   ((x)  >> 8 ) )
#define _ufp16p16toufp24p8(x)   ( (ufp24p8_t)  ((x)  >> 8 ) )
#define _ufp16p16toufp16p16(x)                  (x)
#define _ufp16p16toufp8p24(x)   ( (ufp8p24_t)  ((x)  << 8 ) )

#define _fp8p24tofp8p8(x)       ( (fp8p8_t)    ((x)  >> 16) )
#define _fp8p24tofp24p8(x)      ( (fp24p8_t)   ((x)  >> 16) )
#define _fp8p24tofp16p16(x)     ( (fp16p16_t)  ((x)  >> 8 ) )
#define _fp8p24tofp8p24(x)                      (x)
#define _ufp8p24toufp8p8(x)     ( (ufp8p8_t)   ((x)  >> 16) )
#define _ufp8p24toufp24p8(x)    ( (ufp24p8_t)  ((x)  >> 16) )
#define _ufp8p24toufp16p16(x)   ( (ufp16p16_t) ((x)  >> 8 ) )
#define _ufp8p24toufp8p24(x)                    (x)

/* ------------------------------------------------------------------------- */

/* SIMPLE MATH */

/* multiplication (x*y) */

#define _mulfp8p8(x,y)    ( ( (int32_t)(x) *  (int32_t)(y)) >> 8  )
#define _mulfp24p8(x,y)   ( ( (int64_t)(x) *  (int64_t)(y)) >> 8  )
#define _mulfp16p16(x,y)  ( ( (int64_t)(x) *  (int64_t)(y)) >> 16 )
#define _mulfp8p24(x,y)   ( ( (int64_t)(x) *  (int64_t)(y)) >> 24 )
#define _mulufp8p8(x,y)   ( ((uint32_t)(x) * (uint32_t)(y)) >> 8  )
#define _mulufp24p8(x,y)  ( ((uint64_t)(x) * (uint64_t)(y)) >> 8  )
#define _mulufp16p16(x,y) ( ((uint64_t)(x) * (uint64_t)(y)) >> 16 )
#define _mulufp8p24(x,y)  ( ((uint64_t)(x) * (uint64_t)(y)) >> 24 )

/* division (x/y) */

#define _divfp8p8(x,y)    ( ( (int32_t)(x) << 8 ) / (y) )
#define _divfp24p8(x,y)   ( ( (int64_t)(x) << 8 ) / (y) )
#define _divfp16p16(x,y)  ( ( (int64_t)(x) << 16) / (y) )
#define _divfp8p24(x,y)   ( ( (int64_t)(x) << 24) / (y) )
#define _divufp8p8(x,y)   ( ((uint32_t)(x) << 8 ) / (y) )
#define _divufp24p8(x,y)  ( ((uint64_t)(x) << 8 ) / (y) )
#define _divufp16p16(x,y) ( ((uint64_t)(x) << 16) / (y) )
#define _divufp8p24(x,y)  ( ((uint64_t)(x) << 24) / (y) )

/* ------------------------------------------------------------------------- */

/* MORE ADVANCED MATH */

/* ------------------------------------------------------------------------- */

/* >>> Square root <<< */

/* I've tried numerous algorithms here (Newton, Knuth, Halleck, etc...) but
 * for any type larger than 8p8 they became way too slow (factor 15++ slower
 * than the FPU), so I have to resort to a simple binary search
 * convergence algorithm for now. At least it's only 3-11 times slower,
 * depending on the type chosen :/  It does tend to be less precise though
 * as x increases. Have to check how these algorithms perform on older
 * CPU's without a modern FPU.
 */

/* temporary variables */

static ufp8p8_t   _ufp8p8tmp,   _ufp8p8tmp2;
static ufp24p8_t  _ufp24p8tmp,  _ufp24p8tmp2;
static ufp16p16_t _ufp16p16tmp, _ufp16p16tmp2;
static ufp8p24_t  _ufp8p24tmp,  _ufp8p24tmp2;

#define _mid(a,b)           (a+((b-a)>>1))

#define _convergeufp8p8(a,b,x)    ( (_mulufp8p8(_mid(a,b),_mid(a,b))<x)   ? \
                                       (a=_mid(a,b)):(b=_mid(a,b)) )
#define _convergeufp24p8(a,b,x)   ( (_mulufp24p8(_mid(a,b),_mid(a,b))<x)  ? \
                                       (a=_mid(a,b)):(b=_mid(a,b)) )
#define _convergeufp16p16(a,b,x)  ( (_mulufp16p16(_mid(a,b),_mid(a,b))<x) ? \
                                       (a=_mid(a,b)):(b=_mid(a,b)) )
#define _convergeufp8p24(a,b,x)   ( (_mulufp8p24(_mid(a,b),_mid(a,b))<x)  ? \
                                       (a=_mid(a,b)):(b=_mid(a,b)) )

#define __sqrtufp8p8(a,b,x)   ( (x>(4<<8)) ? (a=1<<8) && (b=(x>>1)) \
                                           : ((a=0)||1) && (b=x<<1) \
                              ) \
                              && _convergeufp8p8(a,b,x) \
                              && _convergeufp8p8(a,b,x) \
                              && _convergeufp8p8(a,b,x) \
                              && _convergeufp8p8(a,b,x) \
                              && _convergeufp8p8(a,b,x) \
                              && _convergeufp8p8(a,b,x) \
                              && _convergeufp8p8(a,b,x) \
                              && _convergeufp8p8(a,b,x) \
                              ? _mid(a,b) : 0

#define __sqrtufp24p8(a,b,x)  ( (x>(4<<8)) ? (a=1<<8) && (b=(x>>1)) \
                                           : ((a=0)||1) && (b=x<<1) \
                              ) \
                              && _convergeufp24p8(a,b,x) \
                              && _convergeufp24p8(a,b,x) \
                              && _convergeufp24p8(a,b,x) \
                              && _convergeufp24p8(a,b,x) \
                              && _convergeufp24p8(a,b,x) \
                              && _convergeufp24p8(a,b,x) \
                              && _convergeufp24p8(a,b,x) \
                              && _convergeufp24p8(a,b,x) \
                              && _convergeufp24p8(a,b,x) \
                              && _convergeufp24p8(a,b,x) \
                              && _convergeufp24p8(a,b,x) \
                              && _convergeufp24p8(a,b,x) \
                              && _convergeufp24p8(a,b,x) \
                              && _convergeufp24p8(a,b,x) \
                              && _convergeufp24p8(a,b,x) \
                              && _convergeufp24p8(a,b,x) \
                              ? _mid(a,b) : 0

#define __sqrtufp16p16(a,b,x) ( (x>(4<<16)) ? (a=1<<16) && (b=(x>>1)) \
                                           : ((a=0)||1) && (b=x<<1) \
                              ) \
                              && _convergeufp16p16(a,b,x) \
                              && _convergeufp16p16(a,b,x) \
                              && _convergeufp16p16(a,b,x) \
                              && _convergeufp16p16(a,b,x) \
                              && _convergeufp16p16(a,b,x) \
                              && _convergeufp16p16(a,b,x) \
                              && _convergeufp16p16(a,b,x) \
                              && _convergeufp16p16(a,b,x) \
                              && _convergeufp16p16(a,b,x) \
                              && _convergeufp16p16(a,b,x) \
                              && _convergeufp16p16(a,b,x) \
                              && _convergeufp16p16(a,b,x) \
                              ? _mid(a,b) : 0

#define __sqrtufp8p24(a,b,x) ( (x>(4<<24)) ? (a=1<<24) && (b=(x>>1)) \
                                           : ((a=0)||1) && (b=x<<1) \
                              ) \
                              && _convergeufp8p24(a,b,x) \
                              && _convergeufp8p24(a,b,x) \
                              && _convergeufp8p24(a,b,x) \
                              && _convergeufp8p24(a,b,x) \
                              && _convergeufp8p24(a,b,x) \
                              && _convergeufp8p24(a,b,x) \
                              && _convergeufp8p24(a,b,x) \
                              && _convergeufp8p24(a,b,x) \
                              && _convergeufp8p24(a,b,x) \
                              && _convergeufp8p24(a,b,x) \
                              && _convergeufp8p24(a,b,x) \
                              && _convergeufp8p24(a,b,x) \
                              && _convergeufp8p24(a,b,x) \
                              && _convergeufp8p24(a,b,x) \
                              && _convergeufp8p24(a,b,x) \
                              && _convergeufp8p24(a,b,x) \
                              ? _mid(a,b) : 0

#define _sqrtufp8p8(x)      __sqrtufp8p8  (_ufp8p8tmp,   _ufp8p8tmp2,   x)
#define _sqrtufp24p8(x)     __sqrtufp24p8 (_ufp24p8tmp,  _ufp24p8tmp2,  x)
#define _sqrtufp16p16(x)    __sqrtufp16p16(_ufp16p16tmp, _ufp16p16tmp2, x)
#define _sqrtufp8p24(x)     __sqrtufp8p24 (_ufp8p24tmp,  _ufp8p24tmp2,  x)

#define _sqrtfp8p8(x)       (x>0 ? _sqrtufp8p8(x)   : 0)
#define _sqrtfp24p8(x)      (x>0 ? _sqrtufp24p8(x)  : 0)
#define _sqrtfp16p16(x)     (x>0 ? _sqrtufp16p16(x) : 0)
#define _sqrtfp8p24(x)      (x>0 ? _sqrtufp8p24(x)  : 0)

#define _sqrtufp8p8lut(x)   ( __genericufp8p8lut  (_ufp8p8sqrtlut_16,      \
                                                   _ufp8p8sqrtlut_256,   x ) )
#define _sqrtufp24p8lut(x)  ( __genericufp24p8lut (_ufp24p8sqrtlut_16,     \
                                                   _ufp24p8sqrtlut_256,    \
                                                   _ufp24p8sqrtlut_64k,    \
                                                   _ufp24p8sqrtlut_16m,  x ) )
#define _sqrtufp16p16lut(x) ( __genericufp16p16lut(_ufp16p16sqrtlut_16,    \
                                                   _ufp16p16sqrtlut_256,   \
                                                   _ufp16p16sqrtlut_64k, x ) )
#define _sqrtufp8p24lut(x)  ( __genericufp8p24lut (_ufp8p24sqrtlut_4,      \
                                                   _ufp8p24sqrtlut_16,     \
                                                   _ufp8p24sqrtlut_256,  x ) )

#define _sqrtfp8p8lut(x)    (x>0 ? _sqrtufp8p8lut(x)   : 0)
#define _sqrtfp24p8lut(x)   (x>0 ? _sqrtufp24p8lut(x)  : 0)
#define _sqrtfp16p16lut(x)  (x>0 ? _sqrtufp16p16lut(x) : 0)
#define _sqrtfp8p24lut(x)   (x>0 ? _sqrtufp8p24lut(x)  : 0)

/* >>> Exponential function <<< */

/* e^x for x>=0 */

/* temporary variables */

static uint32_t _fp32_x2,  _fp32_x3,  _fp32_x4,  _fp32_x5,  _fp32_x6;
static uint64_t _fp64_x2,  _fp64_x3,  _fp64_x4,  _fp64_x5,  _fp64_x6,
                _fp64_x7,  _fp64_x8,  _fp64_x9,  _fp64_x10, _fp64_x11,
                _fp64_x12, _fp64_x13, _fp64_x14, _fp64_x15, _fp64_x16;

/* I cheat a little here by passing overflowed ufp8p8's to mul and div,
 * but they get cast to uint32_t anyway, so this gives a bit more precission.
 * However, it does _not_ use 64-bit (u)ints and that's intentional!
 * Precision is reasonable for 0 < x < 3 and starts to degrade after that.
 * x>5 will soon start to overflow!
 *
 * All of them have problems when they reach zero, because some of the terms
 * won't fit in the type (i.e. 0.0001 becomes 0) and the expression is
 * false. That's why I add 1 to each term, so every expression evaluates
 * as true. 1 equals to 1/2^8, 1/2^16 and 1/2^24, depending on the type,
 * so the loss of precision is very limited.
 */

#define _expufp8p8(x)   (_fp32_x2 = _mulufp8p8(x       , x        )+1) && \
                        (_fp32_x3 = _mulufp8p8(_fp32_x2, x        )+1) && \
                        (_fp32_x4 = _mulufp8p8(_fp32_x2, _fp32_x2 )+1) && \
                        (_fp32_x5 = _mulufp8p8(_fp32_x4, x        )+1) && \
                        (_fp32_x6 = _mulufp8p8(_fp32_x4, _fp32_x2 )+1) ? \
                        ( 1<<8 ) + \
                        x + _divufp8p8(_fp32_x2, 2<<8 )   + \
                            _divufp8p8(_fp32_x3, 6<<8 )   + \
                            _divufp8p8(_fp32_x4, 24<<8 )  + \
                            _divufp8p8(_fp32_x5, 120<<8 ) + \
                            _divufp8p8(_fp32_x6, 720<<8 ) \
                        : (1<<8)

/* Same cheat for the next three macro's, but with uint64_t instead */

/* precision degrades after x = 9 or there about and overflows soon if x>15 */

#define _expufp24p8(x)  (_fp64_x2  = _mulufp24p8(x       , x        )+1) && \
                        (_fp64_x3  = _mulufp24p8(_fp64_x2, x        )+1) && \
                        (_fp64_x4  = _mulufp24p8(_fp64_x2, _fp64_x2 )+1) && \
                        (_fp64_x5  = _mulufp24p8(_fp64_x3, _fp64_x2 )+1) && \
                        (_fp64_x6  = _mulufp24p8(_fp64_x3, _fp64_x3 )+1) && \
                        (_fp64_x7  = _mulufp24p8(_fp64_x4, _fp64_x3 )+1) && \
                        (_fp64_x8  = _mulufp24p8(_fp64_x4, _fp64_x4 )+1) && \
                        (_fp64_x9  = _mulufp24p8(_fp64_x5, _fp64_x4 )+1) && \
                        (_fp64_x10 = _mulufp24p8(_fp64_x5, _fp64_x5 )+1) && \
                        (_fp64_x11 = _mulufp24p8(_fp64_x6, _fp64_x5 )+1) && \
                        (_fp64_x12 = _mulufp24p8(_fp64_x6, _fp64_x6 )+1) && \
                        (_fp64_x13 = _mulufp24p8(_fp64_x7, _fp64_x6 )+1) && \
                        (_fp64_x14 = _mulufp24p8(_fp64_x7, _fp64_x7 )+1) && \
                        (_fp64_x15 = _mulufp24p8(_fp64_x8, _fp64_x7 )+1) && \
                        (_fp64_x16 = _mulufp24p8(_fp64_x8, _fp64_x8 )+1)  ? \
                        ( 1<<8 ) + \
                        x + \
                        _divufp24p8(_fp64_x2,  2<<8 )     + \
                        _divufp24p8(_fp64_x3,  6<<8 )     + \
                        _divufp24p8(_fp64_x4,  24<<8 )    + \
                        _divufp24p8(_fp64_x5,  120<<8 )   + \
                        _divufp24p8(_fp64_x6,  720<<8 )   + \
                        _divufp24p8(_fp64_x7,  5040<<8 )  + \
                        _divufp24p8(_fp64_x8,  (uint64_t) 40320<<8 )         +\
                        _divufp24p8(_fp64_x9,  (uint64_t) 362880L<<8 )       +\
                        _divufp24p8(_fp64_x10, (uint64_t) 3628800L<<8 )      +\
                        _divufp24p8(_fp64_x11, (uint64_t) 39916800L<<8 )     +\
                        _divufp24p8(_fp64_x12, (uint64_t) 479001600L<<8 )    +\
                        _divufp24p8(_fp64_x13, (uint64_t) 6227020800LL<<8 )  +\
                        _divufp24p8(_fp64_x14, (uint64_t) 87178291200LL<<8 ) +\
                        _divufp24p8(_fp64_x15, (uint64_t) 1307674368000LL<<8)+\
                        _divufp24p8(_fp64_x16, (uint64_t) 20922789888000LL<<8)\
                        : (1<<8)

/* best precision-to-value ratio since it's well balanced */

#define _expufp16p16(x) (_fp64_x2  = _mulufp16p16(x       , x        )+1) && \
                        (_fp64_x3  = _mulufp16p16(_fp64_x2, x        )+1) && \
                        (_fp64_x4  = _mulufp16p16(_fp64_x2, _fp64_x2 )+1) && \
                        (_fp64_x5  = _mulufp16p16(_fp64_x3, _fp64_x2 )+1) && \
                        (_fp64_x6  = _mulufp16p16(_fp64_x3, _fp64_x3 )+1) && \
                        (_fp64_x7  = _mulufp16p16(_fp64_x4, _fp64_x3 )+1) && \
                        (_fp64_x8  = _mulufp16p16(_fp64_x4, _fp64_x4 )+1) && \
                        (_fp64_x9  = _mulufp16p16(_fp64_x5, _fp64_x4 )+1) && \
                        (_fp64_x10 = _mulufp16p16(_fp64_x5, _fp64_x5 )+1)  ? \
                        ( 1<<16 ) + \
                        x + \
                        _divufp16p16(_fp64_x2,  2<<16 )     + \
                        _divufp16p16(_fp64_x3,  6<<16 )     + \
                        _divufp16p16(_fp64_x4,  24<<16 )    + \
                        _divufp16p16(_fp64_x5,  120<<16 )   + \
                        _divufp16p16(_fp64_x6,  720<<16 )   + \
                        _divufp16p16(_fp64_x7,  5040<<16 )  + \
                        _divufp16p16(_fp64_x8,  (uint64_t) 40320<<16 )    + \
                        _divufp16p16(_fp64_x9,  (uint64_t) 362880L<<16 )  + \
                        _divufp16p16(_fp64_x10, (uint64_t) 3628800L<<16 )   \
                        : (1<<16)

/* upper limit of x lowered compared to expfp8p8, so the precision of
 * the fraction is somewhat better, but it overflows sooner if x increases  */

#define _expufp8p24(x)  (_fp64_x2  = _mulufp8p24(x       , x        )+1) && \
                        (_fp64_x3  = _mulufp8p24(_fp64_x2, x        )+1) && \
                        (_fp64_x4  = _mulufp8p24(_fp64_x2, _fp64_x2 )+1) && \
                        (_fp64_x5  = _mulufp8p24(_fp64_x3, _fp64_x2 )+1) && \
                        (_fp64_x6  = _mulufp8p24(_fp64_x3, _fp64_x3 )+1) && \
                        (_fp64_x7  = _mulufp8p24(_fp64_x4, _fp64_x3 )+1) && \
                        (_fp64_x8  = _mulufp8p24(_fp64_x4, _fp64_x4 )+1)  ? \
                        ( 1<<24 ) + \
                        x + \
                        _divufp8p24(_fp64_x2,  2<<24 )     + \
                        _divufp8p24(_fp64_x3,  6<<24 )     + \
                        _divufp8p24(_fp64_x4,  24<<24 )    + \
                        _divufp8p24(_fp64_x5,  120<<24 )   + \
                        _divufp8p24(_fp64_x6,  720<<24 )   +  \
                        _divufp8p24(_fp64_x7,  5040<<24 )  + \
                        _divufp8p24(_fp64_x8,  (uint64_t) 40320<<24 ) \
                        : (1<<24)

#define _expfp8p8(x)    _expufp8p8(x)
#define _expfp24p8(x)   _expufp24p8(x)
#define _expfp16p16(x)  _expufp16p16(x)
#define _expfp8p24(x)   _expufp8p24(x)

#define _expufp8p8lut(x)   ( __genericufp8p8lut  (_ufp8p8explut_16,      \
                                                  _ufp8p8explut_256,   x ) )
#define _expufp24p8lut(x)  ( __genericufp24p8lut (_ufp24p8explut_16,     \
                                                  _ufp24p8explut_256,    \
                                                  _ufp24p8explut_64k,    \
                                                  _ufp24p8explut_16m,  x ) )
#define _expufp16p16lut(x) ( __genericufp16p16lut(_ufp16p16explut_16,    \
                                                  _ufp16p16explut_256,   \
                                                  _ufp16p16explut_64k, x ) )
#define _expufp8p24lut(x)  ( __genericufp8p24lut (_ufp8p24explut_4,      \
                                                  _ufp8p24explut_16,     \
                                                  _ufp8p24explut_256,  x ) )

#define _expfp8p8lut(x)    (x>0 ? _expufp8p8lut(x)   : 1<<8)
#define _expfp24p8lut(x)   (x>0 ? _expufp24p8lut(x)  : 1<<8)
#define _expfp16p16lut(x)  (x>0 ? _expufp16p16lut(x) : 1<<16)
#define _expfp8p24lut(x)   (x>0 ? _expufp8p24lut(x)  : 1<<24)

/* >>> Natural logarithm <<< */

/* ln x or log_e x */
/* f(x)=ln(x) for x>=1
 */

#define __lnufp8p8(a)   (a>=1<<8) ? ( /* x>= 1 */ \
      (         (a<=1<<9)?     0:\
       (a>>=1)&&(a<=1<<9)? 177:(a>>=1)&&(a<=1<<9)? 355:\
       (a>>=1)&&(a<=1<<9)? 532:(a>>=1)&&(a<=1<<9)? 710:\
       (a>>=1)&&(a<=1<<9)? 887:(a>>=1)&&(a<=1<<9)?1065:\
       (a>>=1)&&(a<=1<<9)?1242:(a>>=1)&&(a<=1<<9)?1420:0)\
      +((a<=(1<<8)+(1<< 7))?0:(a=_mulufp8p8(a,171))?104:104)\
      +((a<=(1<<8)+(1<< 6))?0:(a=_mulufp8p8(a,205))?57:57)\
      +((a<=(1<<8)+(1<< 5))?0:(a=_mulufp8p8(a,228))?30:30)\
      +((a<=(1<<8)+(1<< 4))?0:(a=_mulufp8p8(a,241))?16:16)\
      +((a<=(1<<8)+(1<< 3))?0:(a=_mulufp8p8(a,248))?8:8)\
      +((a<=(1<<8)+(1<< 2))?0:(a=_mulufp8p8(a,252))?4:4)\
      +((a<=(1<<8)+(1<< 1))?0:(a=_mulufp8p8(a,254))?2:2)\
      +((a<=(1<<8)+(1<< 0))?0:(a=_mulufp8p8(a,255))?1:1)\
      ) /* done */ \
      : /* x<1 */ itofp8p8(0)

#define __lnufp24p8(a)   (a>=1<<8) ? ( /* x>= 1 */ \
      (         (a<=1<<9)?   0:\
       (a>>=1)&&(a<=1<<9)? 177:(a>>=1)&&(a<=1<<9)? 355:\
       (a>>=1)&&(a<=1<<9)? 532:(a>>=1)&&(a<=1<<9)? 710:\
       (a>>=1)&&(a<=1<<9)? 887:(a>>=1)&&(a<=1<<9)?1065:\
       (a>>=1)&&(a<=1<<9)?1242:(a>>=1)&&(a<=1<<9)?1420:\
       (a>>=1)&&(a<=1<<9)?1597:(a>>=1)&&(a<=1<<9)?1774:\
       (a>>=1)&&(a<=1<<9)?1952:(a>>=1)&&(a<=1<<9)?2129:\
       (a>>=1)&&(a<=1<<9)?2307:(a>>=1)&&(a<=1<<9)?2484:\
       (a>>=1)&&(a<=1<<9)?2662:(a>>=1)&&(a<=1<<9)?2839:\
       (a>>=1)&&(a<=1<<9)?3017:(a>>=1)&&(a<=1<<9)?3194:\
       (a>>=1)&&(a<=1<<9)?3371:(a>>=1)&&(a<=1<<9)?3549:\
       (a>>=1)&&(a<=1<<9)?3726:(a>>=1)&&(a<=1<<9)?3904:\
       (a>>=1)&&(a<=1<<9)?4081:(a>>=1)&&(a<=1<<9)?4259:0)\
      +((a<=(1<<8)+(1<< 7))?0:(a=_mulufp24p8(a,171))?104:104)\
      +((a<=(1<<8)+(1<< 6))?0:(a=_mulufp24p8(a,205))?57:57)\
      +((a<=(1<<8)+(1<< 5))?0:(a=_mulufp24p8(a,228))?30:30)\
      +((a<=(1<<8)+(1<< 4))?0:(a=_mulufp24p8(a,241))?16:16)\
      +((a<=(1<<8)+(1<< 3))?0:(a=_mulufp24p8(a,248))?8:8)\
      +((a<=(1<<8)+(1<< 2))?0:(a=_mulufp24p8(a,252))?4:4)\
      +((a<=(1<<8)+(1<< 1))?0:(a=_mulufp24p8(a,254))?2:2)\
      +((a<=(1<<8)+(1<< 0))?0:(a=_mulufp24p8(a,255))?1:1)\
      ) /* done */ \
      : /* x<1 */ itofp24p8(0)

#define __lnufp16p16(a)   (a>=1<<16) ? ( /* x>= 1 */ \
      (         (a<=1<<17)?     0:\
       (a>>=1)&&(a<=1<<17)? 45426:(a>>=1)&&(a<=1<<17)? 90852:\
       (a>>=1)&&(a<=1<<17)?136278:(a>>=1)&&(a<=1<<17)?181704:\
       (a>>=1)&&(a<=1<<17)?227130:(a>>=1)&&(a<=1<<17)?272557:\
       (a>>=1)&&(a<=1<<17)?317983:(a>>=1)&&(a<=1<<17)?363409:\
       (a>>=1)&&(a<=1<<17)?408835:(a>>=1)&&(a<=1<<17)?454261:\
       (a>>=1)&&(a<=1<<17)?499687:(a>>=1)&&(a<=1<<17)?545113:\
       (a>>=1)&&(a<=1<<17)?590539:(a>>=1)&&(a<=1<<17)?635965:\
       (a>>=1)&&(a<=1<<17)?681391:(a>>=1)&&(a<=1<<17)?726818:0)\
      +((a<=(1<<16)+(1<<15))?0:(a=_mulufp16p16(a,43691))?26573:26573)\
      +((a<=(1<<16)+(1<<14))?0:(a=_mulufp16p16(a,52429))?14624:14624)\
      +((a<=(1<<16)+(1<<13))?0:(a=_mulufp16p16(a,58254))?7719:7719)\
      +((a<=(1<<16)+(1<<12))?0:(a=_mulufp16p16(a,61681))?3973:3973)\
      +((a<=(1<<16)+(1<<11))?0:(a=_mulufp16p16(a,63550))?2017:2017)\
      +((a<=(1<<16)+(1<<10))?0:(a=_mulufp16p16(a,64528))?1016:1016)\
      +((a<=(1<<16)+(1<< 9))?0:(a=_mulufp16p16(a,65028))?510:510)\
      +((a<=(1<<16)+(1<< 8))?0:(a=_mulufp16p16(a,65281))?256:256)\
      +((a<=(1<<16)+(1<< 7))?0:(a=_mulufp16p16(a,65408))?128:128)\
      +((a<=(1<<16)+(1<< 6))?0:(a=_mulufp16p16(a,65472))?64:64)\
      +((a<=(1<<16)+(1<< 5))?0:(a=_mulufp16p16(a,65504))?32:32)\
      +((a<=(1<<16)+(1<< 4))?0:(a=_mulufp16p16(a,65520))?16:16)\
      +((a<=(1<<16)+(1<< 3))?0:(a=_mulufp16p16(a,65528))?8:8)\
      +((a<=(1<<16)+(1<< 2))?0:(a=_mulufp16p16(a,65532))?4:4)\
      +((a<=(1<<16)+(1<< 1))?0:(a=_mulufp16p16(a,65534))?2:2)\
      +((a<=(1<<16)+(1<< 0))?0:(a=_mulufp16p16(a,65535))?1:1)\
      ) /* done */ \
      : /* x<1 */ itofp16p16(0)

#define __lnufp8p24(a)   (a>=1<<24) ? ( /* x>= 1 */ \
      (         (a<=1<<25)?     0:\
       (a>>=1)&&(a<=1<<25)?11629080:(a>>=1)&&(a<=1<<25)?23258160:\
       (a>>=1)&&(a<=1<<25)?34887240:(a>>=1)&&(a<=1<<25)?46516320:\
       (a>>=1)&&(a<=1<<25)?58145400:(a>>=1)&&(a<=1<<25)?69774480:\
       (a>>=1)&&(a<=1<<25)?81403560:(a>>=1)&&(a<=1<<25)?93032640:0)\
      +((a<=(1<<24)+(1<<23))?0:(a=_mulufp8p24(a,11184811))?6802576:6802576)\
      +((a<=(1<<24)+(1<<22))?0:(a=_mulufp8p24(a,13421773))?3743728:3743728)\
      +((a<=(1<<24)+(1<<21))?0:(a=_mulufp8p24(a,14913081))?1976071:1976071)\
      +((a<=(1<<24)+(1<<20))?0:(a=_mulufp8p24(a,15790321))?1017112:1017112)\
      +((a<=(1<<24)+(1<<19))?0:(a=_mulufp8p24(a,16268816))?516263:516263)\
      +((a<=(1<<24)+(1<<18))?0:(a=_mulufp8p24(a,16519105))?260117:260117)\
      +((a<=(1<<24)+(1<<17))?0:(a=_mulufp8p24(a,16647160))?130563:130563)\
      +((a<=(1<<24)+(1<<16))?0:(a=_mulufp8p24(a,16711935))?65408:65408)\
      +((a<=(1<<24)+(1<<15))?0:(a=_mulufp8p24(a,16744512))?32736:32736)\
      +((a<=(1<<24)+(1<<14))?0:(a=_mulufp8p24(a,16760848))?16376:16376)\
      +((a<=(1<<24)+(1<<13))?0:(a=_mulufp8p24(a,16769028))?8190:8190)\
      +((a<=(1<<24)+(1<<12))?0:(a=_mulufp8p24(a,16773121))?4096:4096)\
      +((a<=(1<<24)+(1<<11))?0:(a=_mulufp8p24(a,16775168))?2048:2048)\
      +((a<=(1<<24)+(1<<10))?0:(a=_mulufp8p24(a,16776192))?1024:1024)\
      +((a<=(1<<24)+(1<< 9))?0:(a=_mulufp8p24(a,16776704))?512:512)\
      +((a<=(1<<24)+(1<< 8))?0:(a=_mulufp8p24(a,16776960))?256:256)\
      +((a<=(1<<24)+(1<< 7))?0:(a=_mulufp8p24(a,16777088))?128:128)\
      +((a<=(1<<24)+(1<< 6))?0:(a=_mulufp8p24(a,16777152))?64:64)\
      +((a<=(1<<24)+(1<< 5))?0:(a=_mulufp8p24(a,16777184))?32:32)\
      +((a<=(1<<24)+(1<< 4))?0:(a=_mulufp8p24(a,16777200))?16:16)\
      +((a<=(1<<24)+(1<< 3))?0:(a=_mulufp8p24(a,16777208))?8:8)\
      +((a<=(1<<24)+(1<< 2))?0:(a=_mulufp8p24(a,16777212))?4:4)\
      +((a<=(1<<24)+(1<< 1))?0:(a=_mulufp8p24(a,16777214))?2:2)\
      +((a<=(1<<24)+(1<< 0))?0:(a=_mulufp8p24(a,16777216))?1:1)\
      ) /* done */ \
      : /* x<1 */ itofp8p24(0)

#define _lnufp8p8(a)    (_ufp8p8tmp=a)   ? (__lnufp8p8(_ufp8p8tmp)) \
                                         : (__lnufp8p8(_ufp8p8tmp))
#define _lnufp24p8(a)   (_ufp24p8tmp=a)  ? (__lnufp24p8(_ufp24p8tmp)) \
                                         : (__lnufp24p8(_ufp24p8tmp))
#define _lnufp16p16(a)  (_ufp16p16tmp=a) ? (__lnufp16p16(_ufp16p16tmp)) \
                                         : (__lnufp16p16(_ufp16p16tmp))
#define _lnufp8p24(a)   (_ufp8p24tmp=a)  ? (__lnufp8p24(_ufp8p24tmp)) \
                                         : (__lnufp8p24(_ufp8p24tmp))

#define _lnfp8p8(a)      _lnufp8p8(a)
#define _lnfp24p8(a)     _lnufp24p8(a)
#define _lnfp16p16(a)    _lnufp16p16(a)
#define _lnfp8p24(a)     _lnufp8p24(a)

#define _lnufp8p8lut(x)   ( __genericufp8p8lut  (_ufp8p8lnlut_16,      \
                                                 _ufp8p8lnlut_256,   x ) )
#define _lnufp24p8lut(x)  ( __genericufp24p8lut (_ufp24p8lnlut_16,     \
                                                 _ufp24p8lnlut_256,    \
                                                 _ufp24p8lnlut_64k,    \
                                                 _ufp24p8lnlut_16m,  x ) )
#define _lnufp16p16lut(x) ( __genericufp16p16lut(_ufp16p16lnlut_16,    \
                                                 _ufp16p16lnlut_256,   \
                                                 _ufp16p16lnlut_64k, x ) )
#define _lnufp8p24lut(x)  ( __genericufp8p24lut (_ufp8p24lnlut_4,      \
                                                 _ufp8p24lnlut_16,     \
                                                 _ufp8p24lnlut_256,  x ) )

#define _lnfp8p8lut(x)    (x>(1<<8)  ? _lnufp8p8lut(x)   : 0)
#define _lnfp24p8lut(x)   (x>(1<<8)  ? _lnufp24p8lut(x)  : 0)
#define _lnfp16p16lut(x)  (x>(1<<16) ? _lnufp16p16lut(x) : 0)
#define _lnfp8p24lut(x)   (x>(1<<24) ? _lnufp8p24lut(x)  : 0)

/* >>> Power function <<< */

/* x^y */

#define _powufp8p8(x,y)   ((_ufp8p8tmp2   = _mulufp8p8 (y, lnufp8p8(x)  )) ? \
                                           expufp8p8  (_ufp8p8tmp2) : 1<<8)
#define _powufp24p8(x,y)  ((_ufp24p8tmp2  = _mulufp24p8(y, lnufp24p8(x)  )) ? \
                                           expufp24p8 (_ufp24p8tmp2) : 1<<24)
#define _powufp16p16(x,y) ((_ufp16p16tmp2 = _mulufp16p16(y, lnufp16p16(x)  ))?\
                                           expufp16p16 (_ufp16p16tmp2) : 1<<16)
#define _powufp8p24(x,y)  ((_ufp8p24tmp2  = _mulufp8p24 (y, lnufp8p24(x)  )) ?\
                                           expufp8p24  (_ufp8p24tmp2) : 1<<8)

#define _powfp8p8(x,y)   _powufp8p8(x,y)
#define _powfp24p8(x,y)  _powufp24p8(x,y)
#define _powfp16p16(x,y) _powufp16p16(x,y)
#define _powfp8p24(x,y)  _powufp8p24(x,y)

/* ------------------------------------------------------------------------- */

/* Generic LUT macro's, used for sqrt, exp and ln in LUT mode 
 *
 * Use linear interpolation for values that don't map exactly
 */

#define __genericufp8p8lut(lut16, lut256, x) \
            (x<16<<8)    ? lut16[x>>5] +                              \
                           _mulufp8p8( ((x<<3)&0x0ff),                 \
                                      (lut16[(x>>5)+1] - lut16[x>>5]) \
                                    ) \
                         : lut256[((x>>8)-16)>>1] + \
                           _mulufp8p8( ((x>>1)&0x0ff),       \
                                      (lut256[(((x>>8)-16)>>1)+1] - \
                                       lut256[ ((x>>8)-16)>>1   ])  \
                                    )

#define __genericufp24p8lut(lut16, lut256, lut64k, lut16m, x) \
            (x<16<<8)    ? lut16[x>>5] + \
                           _mulufp24p8( ((x<<3)&0x0ff), \
                                       (lut16[(x>>5)+1] - lut16[x>>5]) \
                                     ) \
          : (x<256<<8)   ? lut256[((x>>8)-16)>>1] +\
                           _mulufp24p8( ((x>>1)&0x0ff), \
                                       (lut256[(((x>>8)-16)>>1)+1] - \
                                        lut256[ ((x>>8)-16)>>1   ])  \
                                     ) \
          : (x<65536<<8) ? lut64k[((x>>8)-256)>>9] + \
                           _mulufp24p8( (((x-(256<<8))>>9)&0x0ff), \
                                       (lut64k[(((x>>8)-256)>>9)+1] - \
                                        lut64k[ ((x>>8)-256)>>9   ])  \
                                     ) \
                         : lut16m[((x>>8)-65536)>>17] + \
                           _mulufp24p8( (((x-(65536<<8))>>17)&0x0ff), \
                                       (lut16m[(((x>>8)-65536)>>17)+1] - \
                                        lut16m[ ((x>>8)-65536)>>17   ])  \
                                     )

#define __genericufp16p16lut(lut16, lut256, lut64k, x) \
            (x<16<<16)   ? lut16[x>>13] + \
                           _mulufp16p16( ((x<<3)&0x0ffff),     \
                                        (lut16[(x>>13)+1] -   \
                                         lut16[(x>>13)  ]) \
                                       ) \
          : (x<256<<16)  ? lut256[((x>>16)-16)>>1] + \
                           _mulufp16p16(  ((x>>1)&0x0ffff), \
                                         (lut256[(((x>>16)-16)>>1)+1] - \
                                          lut256[ ((x>>16)-16)>>1   ]) \
                                       ) \
                         : lut64k[((x>>16)-256)>>9] + \
                           _mulufp16p16(  (((x-(256<<16))>>9)&0x0ffff), \
                                         (lut64k[(((x>>16)-256)>>9)+1] - \
                                          lut64k[ ((x>>16)-256)>>9   ]) \
                                       )

#define __genericufp8p24lut(lut4, lut16, lut256, x) \
            (x<4<<24)    ? lut4[x>>19]  + \
                           _mulufp8p24( ((x<<5)&0x0ffffff),     \
                                       (lut4[(x>>19)+1] -       \
                                        lut4[(x>>19)  ])        \
                                      ) \
          : (x<16<<24)   ? lut16[x>>21] + \
                           _mulufp8p24( ((x<<3)&0x0ffffff),     \
                                       (lut16[(x>>21)+1] -      \
                                        lut16[(x>>21)  ])       \
                                      ) \
                         : lut256[((x>>24)-16)>>1] + \
                           _mulufp8p24( ((x>>1)&0x0ffffff),     \
                                       (lut256[(((x>>24)-16)>>1)+1] - \
                                        lut256[(((x>>24)-16)>>1)  ]) \
                                      )

/* ------------------------------------------------------------------------- */

/* MAKE COMPILER WARNINGS GO AWAY */

/* This makes sure the compiler doesn't warn you about blabla defined but
 * not used. It does add a little code to your program though. If you don't
 * like that and really care about code size (maybe for embedded systems for
 * example), you can define __FPM_LEAVE_WARNINGS__ before including this file,
 * although stripping the binary will remove this code on most systems anyway.
 *
 * Funny though, ICC starts complaining about a function that's never
 * called :-) But ICC complains about anything, like "warning: '=' where
 * '==' may have been intended". MAY HAVE BEEN??? STFU!
 */

/* Not sure if I keep this "function". About every compiler either complains
 * about unused variables or about a function that never gets called,
 * depending on the optimization level and if this function is here or not.
 * Maybe change it into some "init" function that has to be called by
 * the program that uses this macro lib?? Have to think about it.
 */

#ifndef __FPM_LEAVE_WARNINGS___
static void __fixed_point_math_make_compiler_warnings_go_away(void)
{
    _sqrtufp8p8(1);
    _sqrtufp24p8(1);
    _sqrtufp16p16(1);
    _sqrtufp8p24(1);
    _expufp8p8(1);
    _expufp24p8(1);
}
#endif

/* ------------------------------------------------------------------------- */

#endif

/* ------------------------------------------------------------------------- */




From nobody at sheep.berlios.de  Tue Sep 13 05:45:52 2005
From: nobody at sheep.berlios.de (ivop)
Date: Tue, 13 Sep 2005 05:45:52 +0200
Subject: [fpm-cvslog] fpm/misc - New directory
Message-ID: <200509130345.j8D3jq124608@bat.berlios.de>

Update of /cvsroot/fpm/fpm/misc
In directory sheep:/tmp/cvs-serv29695/misc

Log Message:
Directory /cvsroot/fpm/fpm/misc added to the repository




From nobody at sheep.berlios.de  Tue Sep 13 05:46:41 2005
From: nobody at sheep.berlios.de (ivop)
Date: Tue, 13 Sep 2005 05:46:41 +0200
Subject: [fpm-cvslog] fpm/misc gentab.c,NONE,1.1
Message-ID: <200509130346.j8D3kf124649@bat.berlios.de>

Update of /cvsroot/fpm/fpm/misc
In directory sheep:/tmp/cvs-serv29757

Added Files:
	gentab.c 
Log Message:
initial check in



--- NEW FILE: gentab.c ---
/* $Id: gentab.c,v 1.1 2005/09/13 03:46:39 ivop Exp $ */
#include <math.h>
#include <stdio.h>
#include "fixedpointmath.h"

double round(double x);

// used to calculate numbers for ln

int main(void)
{
    int i, d;
    double z;

    for (i=0; i<27; i++) {
        z = log(1 + pow(2, -(i+1)));
        d = round(z * 16777216);
        printf("%i\n", d );
    }

    printf("\n\n");

    for (i=0; i<=24; i++) {
        z = log(pow(2, i));
        d = round(z * 16777216);
        printf("%i\n", d);
    }

    printf("\n\n");

    for (i=0; i<24; i++) {
        z = 1.0 + 1/pow(2, 1+i);
        z = 1/z;
        d = round(z*16777216);
        printf("%i\n", d);
    }

    return 0;
}




From nobody at sheep.berlios.de  Tue Sep 13 05:48:57 2005
From: nobody at sheep.berlios.de (ivop)
Date: Tue, 13 Sep 2005 05:48:57 +0200
Subject: [fpm-cvslog] fpm/tools Makefile,NONE,1.1 genbarchartsindex.sh,NONE,1.1
Message-ID: <200509130348.j8D3mv124693@bat.berlios.de>

Update of /cvsroot/fpm/fpm/tools
In directory sheep:/tmp/cvs-serv30320

Added Files:
	Makefile genbarchartsindex.sh 
Log Message:
initial checkin



--- NEW FILE: Makefile ---
#
# Fixed Point Math Macro Library - Makefile
#
# (C)opyright 2005 by Ivo van Poorten
# Licensed under version 2 of the GPL
#
# $Id: Makefile,v 1.1 2005/09/13 03:48:54 ivop Exp $
#

include ../config.mak

.PHONY:	clean
clean:


.PHONY:	distclean
distclean:		clean
	rm -f *~


--- NEW FILE: genbarchartsindex.sh ---
#!/bin/sh

# $Id: genbarchartsindex.sh,v 1.1 2005/09/13 03:48:54 ivop Exp $

# Script to generate index for barcharts
# (C)opyright 2005 by Ivo van Poorten
# Licensed under version 2 of the GPL

# Read config

# check command line

if [ "$#" != "2" ]; then
    echo "usage: $0 <outputdirectory> <title>"
    exit -1
fi

( cat << __EOF__
<HTML>
<HEAD></HEAD>
<BODY BGCOLOR="#f0f0f0">
<B> BENCHMARKS - $2 </B> <P>
Bars: ufp8p8, ufp24p8, ufp16p16, ufp8p24, float, double
<HR>
__EOF__
) > $1/index.html

for i in add sub mul div sqrt exp ln pow
do

( cat << __EOF__
<B>$i</B>
<TABLE> <TR>
<TD ALIGN="CENTER">
algorithmic <BR>
<IMG SRC="algo_benchmark_$i.png">
</TD>
<TD ALIGN="CENTER">
lut <BR>
<IMG SRC="lut_benchmark_$i.png">
</TD>
</TR> </TABLE>
<BR><HR>
__EOF__
) >> $1/index.html

done




From nobody at sheep.berlios.de  Tue Sep 13 05:55:37 2005
From: nobody at sheep.berlios.de (ivop)
Date: Tue, 13 Sep 2005 05:55:37 +0200
Subject: [fpm-cvslog] fpm .cvsignore,1.7,1.8
Message-ID: <200509130355.j8D3tb124787@bat.berlios.de>

Update of /cvsroot/fpm/fpm
In directory sheep:/tmp/cvs-serv32754

Modified Files:
	.cvsignore 
Log Message:
ignore more generated files



Index: .cvsignore
===================================================================
RCS file: /cvsroot/fpm/fpm/.cvsignore,v
retrieving revision 1.7
retrieving revision 1.8
diff -u -d -r1.7 -r1.8
--- .cvsignore	13 Sep 2005 03:40:18 -0000	1.7
+++ .cvsignore	13 Sep 2005 03:55:34 -0000	1.8
@@ -4,8 +4,10 @@
 genlut
 benchmark
 benchmarklut
+benchmarklut.c
 precision
 precisionlut
+precisionlut.c
 configure.log
 config.mak
 config.sh



From nobody at sheep.berlios.de  Tue Sep 13 05:57:40 2005
From: nobody at sheep.berlios.de (ivop)
Date: Tue, 13 Sep 2005 05:57:40 +0200
Subject: [fpm-cvslog] fpm/include .cvsignore,NONE,1.1
Message-ID: <200509130357.j8D3ve124940@bat.berlios.de>

Update of /cvsroot/fpm/fpm/include
In directory sheep:/tmp/cvs-serv571

Added Files:
	.cvsignore 
Log Message:
ignore fixedpointmathlut.h as it's generated



--- NEW FILE: .cvsignore ---
fixedpointmathlut.h



From nobody at sheep.berlios.de  Wed Sep 14 01:35:22 2005
From: nobody at sheep.berlios.de (ivop)
Date: Wed, 14 Sep 2005 01:35:22 +0200
Subject: [fpm-cvslog] website download.html,1.4,1.5 home.html,1.6,1.7
Message-ID: <200509132335.j8DNZM103589@bat.berlios.de>

Update of /cvsroot/fpm/website
In directory sheep:/tmp/cvs-serv30953

Modified Files:
	download.html home.html 
Log Message:
First alpha release



Index: download.html
===================================================================
RCS file: /cvsroot/fpm/website/download.html,v
retrieving revision 1.4
retrieving revision 1.5
diff -u -d -r1.4 -r1.5
--- download.html	30 Aug 2005 01:45:07 -0000	1.4
+++ download.html	13 Sep 2005 23:35:19 -0000	1.5
@@ -17,7 +17,12 @@
 <B> DOWNLOAD </B>
 <P>
 
-There are no files to download yet.
+First alpha release:
+<P>
+
+<A HREF="http://download.berlios.de/fpm/fpm-0.30-alpha.tar.bz2">
+fpm-0.30-alpha.tar.bz2</A>
+<P>
 
 </TD></TR></TABLE>
 </BODY>

Index: home.html
===================================================================
RCS file: /cvsroot/fpm/website/home.html,v
retrieving revision 1.6
retrieving revision 1.7
diff -u -d -r1.6 -r1.7
--- home.html	5 Sep 2005 01:17:13 -0000	1.6
+++ home.html	13 Sep 2005 23:35:19 -0000	1.7
@@ -16,6 +16,15 @@
 <B> HOME </B>
 <P>
 
+<I STYLE="font-size: 8pt;"> Tuesday, September 14, 2005 </I>
+<BR>
+Today, the first alpha release is released. The fpm-0.30-alpha tarball can
+be downloaded from the <A HREF="download.html">download section</A>.
+<BR>
+<I STYLE="font-size: 8pt;"> --Ivo </I>
+
+<HR>
+
 <I STYLE="font-size: 8pt;"> Monday, September 5, 2005 </I>
 <BR>
 Two weeks passed. Here's a short update. I have setup a documentation



From nobody at sheep.berlios.de  Thu Sep 15 01:19:44 2005
From: nobody at sheep.berlios.de (ivop)
Date: Thu, 15 Sep 2005 01:19:44 +0200
Subject: [fpm-cvslog] fpm/include fixedpointmath.h,1.1,1.2
Message-ID: <200509142319.j8ENJi126255@bat.berlios.de>

Update of /cvsroot/fpm/fpm/include
In directory sheep:/tmp/cvs-serv3302

Modified Files:
	fixedpointmath.h 
Log Message:
continue development, increase version number by one



Index: fixedpointmath.h
===================================================================
RCS file: /cvsroot/fpm/fpm/include/fixedpointmath.h,v
retrieving revision 1.1
retrieving revision 1.2
diff -u -d -r1.1 -r1.2
--- fixedpointmath.h	13 Sep 2005 03:44:44 -0000	1.1
+++ fixedpointmath.h	14 Sep 2005 23:19:40 -0000	1.2
@@ -17,9 +17,9 @@
 
 /* ------------------------------------------------------------------------- */
 
-#define __FPM_VERSION__         0.30
+#define __FPM_VERSION__         0.31
 #define __FPM_VERSION_MAJOR__   0
-#define __FPM_VERSION_MINOR__   30
+#define __FPM_VERSION_MINOR__   31
 #define __FPM_VERSION_RELEASE__ cvs
 
 /* ------------------------------------------------------------------------- */



From nobody at sheep.berlios.de  Thu Sep 15 01:20:11 2005
From: nobody at sheep.berlios.de (ivop)
Date: Thu, 15 Sep 2005 01:20:11 +0200
Subject: [fpm-cvslog] fpm/include fixedpointmathcode.h,1.1,1.2
Message-ID: <200509142320.j8ENKB126289@bat.berlios.de>

Update of /cvsroot/fpm/fpm/include
In directory sheep:/tmp/cvs-serv3565

Modified Files:
	fixedpointmathcode.h 
Log Message:
fix pow macro's for x==1



Index: fixedpointmathcode.h
===================================================================
RCS file: /cvsroot/fpm/fpm/include/fixedpointmathcode.h,v
retrieving revision 1.1
retrieving revision 1.2
diff -u -d -r1.1 -r1.2
--- fixedpointmathcode.h	13 Sep 2005 03:44:44 -0000	1.1
+++ fixedpointmathcode.h	14 Sep 2005 23:20:08 -0000	1.2
@@ -609,14 +609,19 @@
 
 /* x^y */
 
-#define _powufp8p8(x,y)   ((_ufp8p8tmp2   = _mulufp8p8 (y, lnufp8p8(x)  )) ? \
+#define __powufp8p8(x,y)   ((_ufp8p8tmp2   = _mulufp8p8 (y, lnufp8p8(x)  )) ?\
                                            expufp8p8  (_ufp8p8tmp2) : 1<<8)
-#define _powufp24p8(x,y)  ((_ufp24p8tmp2  = _mulufp24p8(y, lnufp24p8(x)  )) ? \
-                                           expufp24p8 (_ufp24p8tmp2) : 1<<24)
-#define _powufp16p16(x,y) ((_ufp16p16tmp2 = _mulufp16p16(y, lnufp16p16(x)  ))?\
+#define __powufp24p8(x,y)  ((_ufp24p8tmp2  = _mulufp24p8(y, lnufp24p8(x)  )) ?\
+                                           expufp24p8 (_ufp24p8tmp2) : 1<<8)
+#define __powufp16p16(x,y) ((_ufp16p16tmp2 = _mulufp16p16(y, lnufp16p16(x) ))?\
                                            expufp16p16 (_ufp16p16tmp2) : 1<<16)
-#define _powufp8p24(x,y)  ((_ufp8p24tmp2  = _mulufp8p24 (y, lnufp8p24(x)  )) ?\
-                                           expufp8p24  (_ufp8p24tmp2) : 1<<8)
+#define __powufp8p24(x,y)  ((_ufp8p24tmp2  = _mulufp8p24 (y, lnufp8p24(x)  ))?\
+                                           expufp8p24  (_ufp8p24tmp2) : 1<<24)
+
+#define _powufp8p8(x,y)   ( x>(1<<8)  ? __powufp8p8(x,y)   : 1<<8 )
+#define _powufp24p8(x,y)  ( x>(1<<8)  ? __powufp24p8(x,y)  : 1<<8 )
+#define _powufp16p16(x,y) ( x>(1<<16) ? __powufp16p16(x,y) : 1<<16 )
+#define _powufp8p24(x,y)  ( x>(1<<24) ? __powufp8p24(x,y)  : 1<<24 )
 
 #define _powfp8p8(x,y)   _powufp8p8(x,y)
 #define _powfp24p8(x,y)  _powufp24p8(x,y)



From nobody at sheep.berlios.de  Thu Sep 15 01:27:57 2005
From: nobody at sheep.berlios.de (ivop)
Date: Thu, 15 Sep 2005 01:27:57 +0200
Subject: [fpm-cvslog] website/graphs - New directory
Message-ID: <200509142327.j8ENRv126396@bat.berlios.de>

Update of /cvsroot/fpm/website/graphs
In directory sheep:/tmp/cvs-serv8689/graphs

Log Message:
Directory /cvsroot/fpm/website/graphs added to the repository




From nobody at sheep.berlios.de  Thu Sep 15 01:29:21 2005
From: nobody at sheep.berlios.de (ivop)
Date: Thu, 15 Sep 2005 01:29:21 +0200
Subject: [fpm-cvslog] website/graphs index.html,NONE,1.1 algo_precision_ufp16p16_exp_overview.png,NONE,1.1 algo_precision_ufp16p16_exp_zoom1.png,NONE,1.1 algo_precision_ufp16p16_exp_zoom2.png,NONE,1.1 algo_precision_ufp16p16_ln_overview.png,NONE,1.1 algo_precision_ufp16p16_ln_zoom1.png,NONE,1.1 algo_precision_ufp16p16_ln_zoom2.png,NONE,1.1 algo_precision_ufp16p16_pow_overview.png,NONE,1.1 algo_precision_ufp16p16_pow_zoom1.png,NONE,1.1 algo_precision_ufp16p16_pow_zoom2.png,NONE,1.1 algo_precision_ufp16p16_sqrt_overview.png,NONE,1.1 algo_precision_ufp16p16_sqrt_zoom1.png,NONE,1.1 algo_precision_ufp16p16_sqrt_zoom2.png,NONE,1.1 algo_precision_ufp24p8_exp_overview.png,NONE,1.1 algo_precision_ufp24p8_exp_zoom1.png,NONE,1.1 algo_precision_ufp24p8_exp_zoom2.png,NONE,1.1 algo_precision_ufp24p8_ln_overview.png,NONE,1.1 algo_precision_ufp24p8_ln_zoom1.png,NONE,1.1 algo_precision_ufp24p8_ln_zoom2.png,NONE,1.1 algo_precision_ufp24p8_pow_overview.png,NONE,1.1 algo_precision_ufp24p8_pow_zoom1.png,NONE,1.1 algo_precision_ufp24p8_pow_zoom2.png,NONE,1.1 algo_precision_ufp24p8_sqrt_overview.png,NONE,1.1 algo_precision_ufp24p8_sqrt_zoom1.png,NONE,1.1 algo_precision_ufp24p8_sqrt_zoom2.png,NONE,1.1 algo_precision_ufp8p24_exp_overview.png,NONE,1.1 algo_precision_ufp8p24_exp_zoom1.png,NONE,1.1 algo_precision_ufp8p24_exp_zoom2.png,NONE,1.1 algo_precision_ufp8p24_ln_overview.png,NONE,1.1 algo_precision_ufp8p24_ln_zoom1.png,NONE,1.1 algo_precision_ufp8p24_ln_zoom2.png,NONE,1.1 algo_precision_ufp8p24_pow_overview.png,NONE,1.1 algo_precision_ufp8p24_pow_zoom1.png,NONE,1.1 algo_precision_ufp8p24_pow_zoom2.png,NONE,1.1 algo_precision_ufp8p24_sqrt_overview.png,NONE,1.1 algo_precision_ufp8p24_sqrt_zoom1.png,NONE,1.1 algo_precision_ufp8p24_sqrt_zoom2.png,NONE,1.1 algo_precision_ufp8p8_exp_overview.png,NONE,1.1 algo_precision_ufp8p8_exp_zoom1.png,NONE,1.1 algo_precision_ufp8p8_exp_zoom2.png,NONE,1.1 algo_precision_ufp8p8_ln_overview.png,NONE,1.1 algo_precision_ufp8p8_ln_zoom1.png,NONE,1.1 algo_precision_ufp8p8_ln_zoom2.png,NONE,1.1 algo_precision_ufp8p8_pow_
Message-ID: <200509142329.j8ENTL126428@bat.berlios.de>

Update of /cvsroot/fpm/website/graphs
In directory sheep:/tmp/cvs-serv9237

Added Files:
	index.html algo_precision_ufp16p16_exp_overview.png 
	algo_precision_ufp16p16_exp_zoom1.png 
	algo_precision_ufp16p16_exp_zoom2.png 
	algo_precision_ufp16p16_ln_overview.png 
	algo_precision_ufp16p16_ln_zoom1.png 
	algo_precision_ufp16p16_ln_zoom2.png 
	algo_precision_ufp16p16_pow_overview.png 
	algo_precision_ufp16p16_pow_zoom1.png 
	algo_precision_ufp16p16_pow_zoom2.png 
	algo_precision_ufp16p16_sqrt_overview.png 
	algo_precision_ufp16p16_sqrt_zoom1.png 
	algo_precision_ufp16p16_sqrt_zoom2.png 
	algo_precision_ufp24p8_exp_overview.png 
	algo_precision_ufp24p8_exp_zoom1.png 
	algo_precision_ufp24p8_exp_zoom2.png 
	algo_precision_ufp24p8_ln_overview.png 
	algo_precision_ufp24p8_ln_zoom1.png 
	algo_precision_ufp24p8_ln_zoom2.png 
	algo_precision_ufp24p8_pow_overview.png 
	algo_precision_ufp24p8_pow_zoom1.png 
	algo_precision_ufp24p8_pow_zoom2.png 
	algo_precision_ufp24p8_sqrt_overview.png 
	algo_precision_ufp24p8_sqrt_zoom1.png 
	algo_precision_ufp24p8_sqrt_zoom2.png 
	algo_precision_ufp8p24_exp_overview.png 
	algo_precision_ufp8p24_exp_zoom1.png 
	algo_precision_ufp8p24_exp_zoom2.png 
	algo_precision_ufp8p24_ln_overview.png 
	algo_precision_ufp8p24_ln_zoom1.png 
	algo_precision_ufp8p24_ln_zoom2.png 
	algo_precision_ufp8p24_pow_overview.png 
	algo_precision_ufp8p24_pow_zoom1.png 
	algo_precision_ufp8p24_pow_zoom2.png 
	algo_precision_ufp8p24_sqrt_overview.png 
	algo_precision_ufp8p24_sqrt_zoom1.png 
	algo_precision_ufp8p24_sqrt_zoom2.png 
	algo_precision_ufp8p8_exp_overview.png 
	algo_precision_ufp8p8_exp_zoom1.png 
	algo_precision_ufp8p8_exp_zoom2.png 
	algo_precision_ufp8p8_ln_overview.png 
	algo_precision_ufp8p8_ln_zoom1.png 
	algo_precision_ufp8p8_ln_zoom2.png 
	algo_precision_ufp8p8_pow_overview.png 
	algo_precision_ufp8p8_pow_zoom1.png 
	algo_precision_ufp8p8_pow_zoom2.png 
	algo_precision_ufp8p8_sqrt_overview.png 
	algo_precision_ufp8p8_sqrt_zoom1.png 
	algo_precision_ufp8p8_sqrt_zoom2.png 
	lut_precision_ufp16p16_exp_overview.png 
	lut_precision_ufp16p16_exp_zoom1.png 
	lut_precision_ufp16p16_exp_zoom2.png 
	lut_precision_ufp16p16_ln_overview.png 
	lut_precision_ufp16p16_ln_zoom1.png 
	lut_precision_ufp16p16_ln_zoom2.png 
	lut_precision_ufp16p16_pow_overview.png 
	lut_precision_ufp16p16_pow_zoom1.png 
	lut_precision_ufp16p16_pow_zoom2.png 
	lut_precision_ufp16p16_sqrt_overview.png 
	lut_precision_ufp16p16_sqrt_zoom1.png 
	lut_precision_ufp16p16_sqrt_zoom2.png 
	lut_precision_ufp24p8_exp_overview.png 
	lut_precision_ufp24p8_exp_zoom1.png 
	lut_precision_ufp24p8_exp_zoom2.png 
	lut_precision_ufp24p8_ln_overview.png 
	lut_precision_ufp24p8_ln_zoom1.png 
	lut_precision_ufp24p8_ln_zoom2.png 
	lut_precision_ufp24p8_pow_overview.png 
	lut_precision_ufp24p8_pow_zoom1.png 
	lut_precision_ufp24p8_pow_zoom2.png 
	lut_precision_ufp24p8_sqrt_overview.png 
	lut_precision_ufp24p8_sqrt_zoom1.png 
	lut_precision_ufp24p8_sqrt_zoom2.png 
	lut_precision_ufp8p24_exp_overview.png 
	lut_precision_ufp8p24_exp_zoom1.png 
	lut_precision_ufp8p24_exp_zoom2.png 
	lut_precision_ufp8p24_ln_overview.png 
	lut_precision_ufp8p24_ln_zoom1.png 
	lut_precision_ufp8p24_ln_zoom2.png 
	lut_precision_ufp8p24_pow_overview.png 
	lut_precision_ufp8p24_pow_zoom1.png 
	lut_precision_ufp8p24_pow_zoom2.png 
	lut_precision_ufp8p24_sqrt_overview.png 
	lut_precision_ufp8p24_sqrt_zoom1.png 
	lut_precision_ufp8p24_sqrt_zoom2.png 
	lut_precision_ufp8p8_exp_overview.png 
	lut_precision_ufp8p8_exp_zoom1.png 
	lut_precision_ufp8p8_exp_zoom2.png 
	lut_precision_ufp8p8_ln_overview.png 
	lut_precision_ufp8p8_ln_zoom1.png 
	lut_precision_ufp8p8_ln_zoom2.png 
	lut_precision_ufp8p8_pow_overview.png 
	lut_precision_ufp8p8_pow_zoom1.png 
	lut_precision_ufp8p8_pow_zoom2.png 
	lut_precision_ufp8p8_sqrt_overview.png 
	lut_precision_ufp8p8_sqrt_zoom1.png 
	lut_precision_ufp8p8_sqrt_zoom2.png 
Log Message:
first rendition of all precision graphs + generated index.html for display



--- NEW FILE: index.html ---
<HTML>
<HEAD></HEAD>
<BODY BGCOLOR="#f0f0f0">
<B> sqrt - ufp8p8 - algorithmic </B><BR>
<IMG SRC="algo_precision_ufp8p8_sqrt_overview.png">
<IMG SRC="algo_precision_ufp8p8_sqrt_zoom1.png">
<IMG SRC="algo_precision_ufp8p8_sqrt_zoom2.png">
<BR>
<B> sqrt - ufp8p8 - lut </B><BR>
<IMG SRC="lut_precision_ufp8p8_sqrt_overview.png">
<IMG SRC="lut_precision_ufp8p8_sqrt_zoom1.png">
<IMG SRC="lut_precision_ufp8p8_sqrt_zoom2.png">
<P><HR>
<B> sqrt - ufp24p8 - algorithmic </B><BR>
<IMG SRC="algo_precision_ufp24p8_sqrt_overview.png">
<IMG SRC="algo_precision_ufp24p8_sqrt_zoom1.png">
<IMG SRC="algo_precision_ufp24p8_sqrt_zoom2.png">
<BR>
<B> sqrt - ufp24p8 - lut </B><BR>
<IMG SRC="lut_precision_ufp24p8_sqrt_overview.png">
<IMG SRC="lut_precision_ufp24p8_sqrt_zoom1.png">
<IMG SRC="lut_precision_ufp24p8_sqrt_zoom2.png">
<P><HR>
<B> sqrt - ufp16p16 - algorithmic </B><BR>
<IMG SRC="algo_precision_ufp16p16_sqrt_overview.png">
<IMG SRC="algo_precision_ufp16p16_sqrt_zoom1.png">
<IMG SRC="algo_precision_ufp16p16_sqrt_zoom2.png">
<BR>
<B> sqrt - ufp16p16 - lut </B><BR>
<IMG SRC="lut_precision_ufp16p16_sqrt_overview.png">
<IMG SRC="lut_precision_ufp16p16_sqrt_zoom1.png">
<IMG SRC="lut_precision_ufp16p16_sqrt_zoom2.png">
<P><HR>
<B> sqrt - ufp8p24 - algorithmic </B><BR>
<IMG SRC="algo_precision_ufp8p24_sqrt_overview.png">
<IMG SRC="algo_precision_ufp8p24_sqrt_zoom1.png">
<IMG SRC="algo_precision_ufp8p24_sqrt_zoom2.png">
<BR>
<B> sqrt - ufp8p24 - lut </B><BR>
<IMG SRC="lut_precision_ufp8p24_sqrt_overview.png">
<IMG SRC="lut_precision_ufp8p24_sqrt_zoom1.png">
<IMG SRC="lut_precision_ufp8p24_sqrt_zoom2.png">
<P><HR>
<B> exp - ufp8p8 - algorithmic </B><BR>
<IMG SRC="algo_precision_ufp8p8_exp_overview.png">
<IMG SRC="algo_precision_ufp8p8_exp_zoom1.png">
<IMG SRC="algo_precision_ufp8p8_exp_zoom2.png">
<BR>
<B> exp - ufp8p8 - lut </B><BR>
<IMG SRC="lut_precision_ufp8p8_exp_overview.png">
<IMG SRC="lut_precision_ufp8p8_exp_zoom1.png">
<IMG SRC="lut_precision_ufp8p8_exp_zoom2.png">
<P><HR>
<B> exp - ufp24p8 - algorithmic </B><BR>
<IMG SRC="algo_precision_ufp24p8_exp_overview.png">
<IMG SRC="algo_precision_ufp24p8_exp_zoom1.png">
<IMG SRC="algo_precision_ufp24p8_exp_zoom2.png">
<BR>
<B> exp - ufp24p8 - lut </B><BR>
<IMG SRC="lut_precision_ufp24p8_exp_overview.png">
<IMG SRC="lut_precision_ufp24p8_exp_zoom1.png">
<IMG SRC="lut_precision_ufp24p8_exp_zoom2.png">
<P><HR>
<B> exp - ufp16p16 - algorithmic </B><BR>
<IMG SRC="algo_precision_ufp16p16_exp_overview.png">
<IMG SRC="algo_precision_ufp16p16_exp_zoom1.png">
<IMG SRC="algo_precision_ufp16p16_exp_zoom2.png">
<BR>
<B> exp - ufp16p16 - lut </B><BR>
<IMG SRC="lut_precision_ufp16p16_exp_overview.png">
<IMG SRC="lut_precision_ufp16p16_exp_zoom1.png">
<IMG SRC="lut_precision_ufp16p16_exp_zoom2.png">
<P><HR>
<B> exp - ufp8p24 - algorithmic </B><BR>
<IMG SRC="algo_precision_ufp8p24_exp_overview.png">
<IMG SRC="algo_precision_ufp8p24_exp_zoom1.png">
<IMG SRC="algo_precision_ufp8p24_exp_zoom2.png">
<BR>
<B> exp - ufp8p24 - lut </B><BR>
<IMG SRC="lut_precision_ufp8p24_exp_overview.png">
<IMG SRC="lut_precision_ufp8p24_exp_zoom1.png">
<IMG SRC="lut_precision_ufp8p24_exp_zoom2.png">
<P><HR>
<B> ln - ufp8p8 - algorithmic </B><BR>
<IMG SRC="algo_precision_ufp8p8_ln_overview.png">
<IMG SRC="algo_precision_ufp8p8_ln_zoom1.png">
<IMG SRC="algo_precision_ufp8p8_ln_zoom2.png">
<BR>
<B> ln - ufp8p8 - lut </B><BR>
<IMG SRC="lut_precision_ufp8p8_ln_overview.png">
<IMG SRC="lut_precision_ufp8p8_ln_zoom1.png">
<IMG SRC="lut_precision_ufp8p8_ln_zoom2.png">
<P><HR>
<B> ln - ufp24p8 - algorithmic </B><BR>
<IMG SRC="algo_precision_ufp24p8_ln_overview.png">
<IMG SRC="algo_precision_ufp24p8_ln_zoom1.png">
<IMG SRC="algo_precision_ufp24p8_ln_zoom2.png">
<BR>
<B> ln - ufp24p8 - lut </B><BR>
<IMG SRC="lut_precision_ufp24p8_ln_overview.png">
<IMG SRC="lut_precision_ufp24p8_ln_zoom1.png">
<IMG SRC="lut_precision_ufp24p8_ln_zoom2.png">
<P><HR>
<B> ln - ufp16p16 - algorithmic </B><BR>
<IMG SRC="algo_precision_ufp16p16_ln_overview.png">
<IMG SRC="algo_precision_ufp16p16_ln_zoom1.png">
<IMG SRC="algo_precision_ufp16p16_ln_zoom2.png">
<BR>
<B> ln - ufp16p16 - lut </B><BR>
<IMG SRC="lut_precision_ufp16p16_ln_overview.png">
<IMG SRC="lut_precision_ufp16p16_ln_zoom1.png">
<IMG SRC="lut_precision_ufp16p16_ln_zoom2.png">
<P><HR>
<B> ln - ufp8p24 - algorithmic </B><BR>
<IMG SRC="algo_precision_ufp8p24_ln_overview.png">
<IMG SRC="algo_precision_ufp8p24_ln_zoom1.png">
<IMG SRC="algo_precision_ufp8p24_ln_zoom2.png">
<BR>
<B> ln - ufp8p24 - lut </B><BR>
<IMG SRC="lut_precision_ufp8p24_ln_overview.png">
<IMG SRC="lut_precision_ufp8p24_ln_zoom1.png">
<IMG SRC="lut_precision_ufp8p24_ln_zoom2.png">
<P><HR>
<B> pow - ufp8p8 - algorithmic </B><BR>
<IMG SRC="algo_precision_ufp8p8_pow_overview.png">
<IMG SRC="algo_precision_ufp8p8_pow_zoom1.png">
<IMG SRC="algo_precision_ufp8p8_pow_zoom2.png">
<BR>
<B> pow - ufp8p8 - lut </B><BR>
<IMG SRC="lut_precision_ufp8p8_pow_overview.png">
<IMG SRC="lut_precision_ufp8p8_pow_zoom1.png">
<IMG SRC="lut_precision_ufp8p8_pow_zoom2.png">
<P><HR>
<B> pow - ufp24p8 - algorithmic </B><BR>
<IMG SRC="algo_precision_ufp24p8_pow_overview.png">
<IMG SRC="algo_precision_ufp24p8_pow_zoom1.png">
<IMG SRC="algo_precision_ufp24p8_pow_zoom2.png">
<BR>
<B> pow - ufp24p8 - lut </B><BR>
<IMG SRC="lut_precision_ufp24p8_pow_overview.png">
<IMG SRC="lut_precision_ufp24p8_pow_zoom1.png">
<IMG SRC="lut_precision_ufp24p8_pow_zoom2.png">
<P><HR>
<B> pow - ufp16p16 - algorithmic </B><BR>
<IMG SRC="algo_precision_ufp16p16_pow_overview.png">
<IMG SRC="algo_precision_ufp16p16_pow_zoom1.png">
<IMG SRC="algo_precision_ufp16p16_pow_zoom2.png">
<BR>
<B> pow - ufp16p16 - lut </B><BR>
<IMG SRC="lut_precision_ufp16p16_pow_overview.png">
<IMG SRC="lut_precision_ufp16p16_pow_zoom1.png">
<IMG SRC="lut_precision_ufp16p16_pow_zoom2.png">
<P><HR>
<B> pow - ufp8p24 - algorithmic </B><BR>
<IMG SRC="algo_precision_ufp8p24_pow_overview.png">
<IMG SRC="algo_precision_ufp8p24_pow_zoom1.png">
<IMG SRC="algo_precision_ufp8p24_pow_zoom2.png">
<BR>
<B> pow - ufp8p24 - lut </B><BR>
<IMG SRC="lut_precision_ufp8p24_pow_overview.png">
<IMG SRC="lut_precision_ufp8p24_pow_zoom1.png">
<IMG SRC="lut_precision_ufp8p24_pow_zoom2.png">
<P><HR>
</BODY>

--- NEW FILE: algo_precision_ufp16p16_exp_overview.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: algo_precision_ufp16p16_exp_zoom1.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: algo_precision_ufp16p16_exp_zoom2.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: algo_precision_ufp16p16_ln_overview.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: algo_precision_ufp16p16_ln_zoom1.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: algo_precision_ufp16p16_ln_zoom2.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: algo_precision_ufp16p16_pow_overview.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: algo_precision_ufp16p16_pow_zoom1.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: algo_precision_ufp16p16_pow_zoom2.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: algo_precision_ufp16p16_sqrt_overview.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: algo_precision_ufp16p16_sqrt_zoom1.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: algo_precision_ufp16p16_sqrt_zoom2.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: algo_precision_ufp24p8_exp_overview.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: algo_precision_ufp24p8_exp_zoom1.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: algo_precision_ufp24p8_exp_zoom2.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: algo_precision_ufp24p8_ln_overview.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: algo_precision_ufp24p8_ln_zoom1.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: algo_precision_ufp24p8_ln_zoom2.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: algo_precision_ufp24p8_pow_overview.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: algo_precision_ufp24p8_pow_zoom1.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: algo_precision_ufp24p8_pow_zoom2.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: algo_precision_ufp24p8_sqrt_overview.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: algo_precision_ufp24p8_sqrt_zoom1.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: algo_precision_ufp24p8_sqrt_zoom2.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: algo_precision_ufp8p24_exp_overview.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: algo_precision_ufp8p24_exp_zoom1.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: algo_precision_ufp8p24_exp_zoom2.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: algo_precision_ufp8p24_ln_overview.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: algo_precision_ufp8p24_ln_zoom1.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: algo_precision_ufp8p24_ln_zoom2.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: algo_precision_ufp8p24_pow_overview.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: algo_precision_ufp8p24_pow_zoom1.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: algo_precision_ufp8p24_pow_zoom2.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: algo_precision_ufp8p24_sqrt_overview.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: algo_precision_ufp8p24_sqrt_zoom1.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: algo_precision_ufp8p24_sqrt_zoom2.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: algo_precision_ufp8p8_exp_overview.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: algo_precision_ufp8p8_exp_zoom1.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: algo_precision_ufp8p8_exp_zoom2.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: algo_precision_ufp8p8_ln_overview.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: algo_precision_ufp8p8_ln_zoom1.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: algo_precision_ufp8p8_ln_zoom2.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: algo_precision_ufp8p8_pow_overview.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: algo_precision_ufp8p8_pow_zoom1.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: algo_precision_ufp8p8_pow_zoom2.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: algo_precision_ufp8p8_sqrt_overview.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: algo_precision_ufp8p8_sqrt_zoom1.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: algo_precision_ufp8p8_sqrt_zoom2.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: lut_precision_ufp16p16_exp_overview.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: lut_precision_ufp16p16_exp_zoom1.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: lut_precision_ufp16p16_exp_zoom2.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: lut_precision_ufp16p16_ln_overview.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: lut_precision_ufp16p16_ln_zoom1.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: lut_precision_ufp16p16_ln_zoom2.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: lut_precision_ufp16p16_pow_overview.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: lut_precision_ufp16p16_pow_zoom1.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: lut_precision_ufp16p16_pow_zoom2.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: lut_precision_ufp16p16_sqrt_overview.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: lut_precision_ufp16p16_sqrt_zoom1.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: lut_precision_ufp16p16_sqrt_zoom2.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: lut_precision_ufp24p8_exp_overview.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: lut_precision_ufp24p8_exp_zoom1.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: lut_precision_ufp24p8_exp_zoom2.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: lut_precision_ufp24p8_ln_overview.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: lut_precision_ufp24p8_ln_zoom1.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: lut_precision_ufp24p8_ln_zoom2.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: lut_precision_ufp24p8_pow_overview.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: lut_precision_ufp24p8_pow_zoom1.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: lut_precision_ufp24p8_pow_zoom2.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: lut_precision_ufp24p8_sqrt_overview.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: lut_precision_ufp24p8_sqrt_zoom1.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: lut_precision_ufp24p8_sqrt_zoom2.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: lut_precision_ufp8p24_exp_overview.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: lut_precision_ufp8p24_exp_zoom1.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: lut_precision_ufp8p24_exp_zoom2.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: lut_precision_ufp8p24_ln_overview.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: lut_precision_ufp8p24_ln_zoom1.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: lut_precision_ufp8p24_ln_zoom2.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: lut_precision_ufp8p24_pow_overview.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: lut_precision_ufp8p24_pow_zoom1.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: lut_precision_ufp8p24_pow_zoom2.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: lut_precision_ufp8p24_sqrt_overview.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: lut_precision_ufp8p24_sqrt_zoom1.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: lut_precision_ufp8p24_sqrt_zoom2.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: lut_precision_ufp8p8_exp_overview.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: lut_precision_ufp8p8_exp_zoom1.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: lut_precision_ufp8p8_exp_zoom2.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: lut_precision_ufp8p8_ln_overview.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: lut_precision_ufp8p8_ln_zoom1.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: lut_precision_ufp8p8_ln_zoom2.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: lut_precision_ufp8p8_pow_overview.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: lut_precision_ufp8p8_pow_zoom1.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: lut_precision_ufp8p8_pow_zoom2.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: lut_precision_ufp8p8_sqrt_overview.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: lut_precision_ufp8p8_sqrt_zoom1.png ---
(This appears to be a binary file; contents omitted.)

--- NEW FILE: lut_precision_ufp8p8_sqrt_zoom2.png ---
(This appears to be a binary file; contents omitted.)



From nobody at sheep.berlios.de  Thu Sep 15 01:45:09 2005
From: nobody at sheep.berlios.de (ivop)
Date: Thu, 15 Sep 2005 01:45:09 +0200
Subject: [fpm-cvslog] fpm/docs/xml/en advanced.xml,1.5,1.6
Message-ID: <200509142345.j8ENj9126719@bat.berlios.de>

Update of /cvsroot/fpm/fpm/docs/xml/en
In directory sheep:/tmp/cvs-serv15058

Modified Files:
	advanced.xml 
Log Message:
added precision section



Index: advanced.xml
===================================================================
RCS file: /cvsroot/fpm/fpm/docs/xml/en/advanced.xml,v
retrieving revision 1.5
retrieving revision 1.6
diff -u -d -r1.5 -r1.6
--- advanced.xml	12 Sep 2005 02:39:10 -0000	1.5
+++ advanced.xml	14 Sep 2005 23:45:06 -0000	1.6
@@ -78,11 +78,14 @@
         </para>
 
         <para>
-            Eventually, all mathematical functions will have their
+            All mathematical functions should have their
             look-up table equivalent. I even consider splitting it up for
             every basic fixed point type, which could save memory.
             Embedded systems with only limitted amount of RAM or ROM, could
-            benefit from that.
+            benefit from that. Note that pow is a special case as it takes
+            two arguments. Currently, it is implemented algorithmicly
+            by using ln and exp. If one of those (or both) are LUT enabled,
+            pow will be (partly) LUT enabled.
         </para>
 
         <para>
@@ -106,9 +109,35 @@
         <title> Precision </title>
 
         <para>
-            This section will eventually have a whole bunch of graphs that
-            show the precision and/or lack thereof of all fixed point
-            math macro's compared to 32/64-bit floating point.
+            This section describes how you can visualize the precision
+            of all fixed point macro's. The result will look like this:
+        </para>
+        <para>
+            <ulink url="http://fpm.berlios.de/website/graphs/">
+                Graphs (version 0.31-cvs)</ulink>
+        </para>
+        <para>
+            The easiest way is to unpack the tarball, run configure with your
+            desired command line options and run:
+
+            <screen>
+        make graphs </screen>
+        </para>
+        <para>
+            This will compile 'precision' and 'precisionlut' and run
+            gengraphs.sh to generate the graphs. You need to have gnuplot
+            and fig2dev installed.
+        </para>
+        <para>
+            It's also possible to run 'precision' and 'precisionlut' by hand.
+            They take an unsigned fixed point type and a function name as
+            arguments. A huge table will be printed to stdout. Each line
+            consists of the value of x, the value of function(x) calculated
+            by libm and the value of function(x) calculated by a fixed point
+            macro.
+
+            <screen>
+        ./precision ufp16p16 sqrt </screen>
         </para>
     </sect1>
 
@@ -125,7 +154,7 @@
         <para>
             Note: I already noticed that Intel's ICC, in all its wisdom,
             completely optimizes the benchmark program to oblivion, leaving
-            only 11 clockcycles (on a Sempron 2400 CPU) for almost all
+            only 11 clockcycles (on a Sempron 2400+ CPU) for almost all
             timing loops. Something has to be done about that :)
         </para>
 



From nobody at sheep.berlios.de  Thu Sep 15 01:46:31 2005
From: nobody at sheep.berlios.de (ivop)
Date: Thu, 15 Sep 2005 01:46:31 +0200
Subject: [fpm-cvslog] website/docs/HTML-single/en default.css,1.7,1.8 index.html,1.8,1.9
Message-ID: <200509142346.j8ENkV126747@bat.berlios.de>

Update of /cvsroot/fpm/website/docs/HTML-single/en
In directory sheep:/tmp/cvs-serv15537/HTML-single/en

Modified Files:
	default.css index.html 
Log Message:
precision section + minor fixes



Index: default.css
===================================================================
RCS file: /cvsroot/fpm/website/docs/HTML-single/en/default.css,v
retrieving revision 1.7
retrieving revision 1.8
diff -u -d -r1.7 -r1.8

Index: index.html
===================================================================
RCS file: /cvsroot/fpm/website/docs/HTML-single/en/index.html,v
retrieving revision 1.8
retrieving revision 1.9
diff -u -d -r1.8 -r1.9
--- index.html	12 Sep 2005 02:40:09 -0000	1.8
+++ index.html	14 Sep 2005 23:46:27 -0000	1.9
@@ -325,11 +325,14 @@
                                     calculations </td></tr><tr><td> __FPM_ENABLE_LN_LUT__ </td><td> Enable look-up tables for all natural
                                     logarithm calculations </td></tr></tbody></table></div>
         </p><p>
-            Eventually, all mathematical functions will have their
+            All mathematical functions should have their
             look-up table equivalent. I even consider splitting it up for
             every basic fixed point type, which could save memory.
             Embedded systems with only limitted amount of RAM or ROM, could
-            benefit from that.
+            benefit from that. Note that pow is a special case as it takes
+            two arguments. Currently, it is implemented algorithmicly
+            by using ln and exp. If one of those (or both) are LUT enabled,
+            pow will be (partly) LUT enabled.
         </p><p>
             Example:
 
@@ -344,9 +347,31 @@
         a = sqrtfp16p16(b);     /* will be "looked up" and possibly
                                  * interpolated */ </pre>
         </p></div><div class="sect1"><div class="titlepage"><div><h2 class="title" style="clear: both"><a name="precision"></a>4.2.  Precision </h2></div></div><p>
-            This section will eventually have a whole bunch of graphs that
-            show the precision and/or lack thereof of all fixed point
-            math macro's compared to 32/64-bit floating point.
+            This section describes how you can visualize the precision
+            of all fixed point macro's. The result will look like this:
+        </p><p>
+            <a href="http://fpm.berlios.de/website/graphs/" target="_top">
+                Graphs (version 0.31-cvs)</a>
+        </p><p>
+            The easiest way is to unpack the tarball, run configure with your
+            desired command line options and run:
+
+            <pre class="screen">
+        make graphs </pre>
+        </p><p>
+            This will compile 'precision' and 'precisionlut' and run
+            gengraphs.sh to generate the graphs. You need to have gnuplot
+            and fig2dev installed.
+        </p><p>
+            It's also possible to run 'precision' and 'precisionlut' by hand.
+            They take an unsigned fixed point type and a function name as
+            arguments. A huge table will be printed to stdout. Each line
+            consists of the value of x, the value of function(x) calculated
+            by libm and the value of function(x) calculated by a fixed point
+            macro.
+
+            <pre class="screen">
+        ./precision ufp16p16 sqrt </pre>
         </p></div><div class="sect1"><div class="titlepage"><div><h2 class="title" style="clear: both"><a name="benchmarks"></a>4.3.  Benchmarks </h2></div></div><p>
             This section (and possibly sub-sections) will have barcharts
             of how the fixed point math routines compare to floating point
@@ -355,7 +380,7 @@
         </p><p>
             Note: I already noticed that Intel's ICC, in all its wisdom,
             completely optimizes the benchmark program to oblivion, leaving
-            only 11 clockcycles (on a Sempron 2400 CPU) for almost all
+            only 11 clockcycles (on a Sempron 2400+ CPU) for almost all
             timing loops. Something has to be done about that :)
         </p><p>
             This section will also describe how to run benchmarks yourself.



From nobody at sheep.berlios.de  Thu Sep 15 01:46:36 2005
From: nobody at sheep.berlios.de (ivop)
Date: Thu, 15 Sep 2005 01:46:36 +0200
Subject: [fpm-cvslog] website/docs/HTML/en advanced.html,1.5,1.6 benchmarks.html,1.2,1.3 default.css,1.7,1.8 precision.html,1.2,1.3
Message-ID: <200509142346.j8ENka126750@bat.berlios.de>

Update of /cvsroot/fpm/website/docs/HTML/en
In directory sheep:/tmp/cvs-serv15537/HTML/en

Modified Files:
	advanced.html benchmarks.html default.css precision.html 
Log Message:
precision section + minor fixes



Index: advanced.html
===================================================================
RCS file: /cvsroot/fpm/website/docs/HTML/en/advanced.html,v
retrieving revision 1.5
retrieving revision 1.6
diff -u -d -r1.5 -r1.6
--- advanced.html	12 Sep 2005 02:40:09 -0000	1.5
+++ advanced.html	14 Sep 2005 23:46:27 -0000	1.6
@@ -43,11 +43,14 @@
                                     calculations </td></tr><tr><td> __FPM_ENABLE_LN_LUT__ </td><td> Enable look-up tables for all natural
                                     logarithm calculations </td></tr></tbody></table></div>
         </p><p>
-            Eventually, all mathematical functions will have their
+            All mathematical functions should have their
             look-up table equivalent. I even consider splitting it up for
             every basic fixed point type, which could save memory.
             Embedded systems with only limitted amount of RAM or ROM, could
-            benefit from that.
+            benefit from that. Note that pow is a special case as it takes
+            two arguments. Currently, it is implemented algorithmicly
+            by using ln and exp. If one of those (or both) are LUT enabled,
+            pow will be (partly) LUT enabled.
         </p><p>
             Example:
 

Index: benchmarks.html
===================================================================
RCS file: /cvsroot/fpm/website/docs/HTML/en/benchmarks.html,v
retrieving revision 1.2
retrieving revision 1.3
diff -u -d -r1.2 -r1.3
--- benchmarks.html	2 Sep 2005 03:24:59 -0000	1.2
+++ benchmarks.html	14 Sep 2005 23:46:27 -0000	1.3
@@ -10,7 +10,7 @@
         </p><p>
             Note: I already noticed that Intel's ICC, in all its wisdom,
             completely optimizes the benchmark program to oblivion, leaving
-            only 11 clockcycles (on a Sempron 2400 CPU) for almost all
+            only 11 clockcycles (on a Sempron 2400+ CPU) for almost all
             timing loops. Something has to be done about that :)
         </p><p>
             This section will also describe how to run benchmarks yourself.

Index: default.css
===================================================================
RCS file: /cvsroot/fpm/website/docs/HTML/en/default.css,v
retrieving revision 1.7
retrieving revision 1.8
diff -u -d -r1.7 -r1.8

Index: precision.html
===================================================================
RCS file: /cvsroot/fpm/website/docs/HTML/en/precision.html,v
retrieving revision 1.2
retrieving revision 1.3
diff -u -d -r1.2 -r1.3
--- precision.html	2 Sep 2005 03:24:59 -0000	1.2
+++ precision.html	14 Sep 2005 23:46:27 -0000	1.3
@@ -3,9 +3,31 @@
       <div class="navheader"><table width="100%" summary="Navigation header"><tr><td width="20%" align="left"><a accesskey="p" href="advanced.html">Prev</a>?</td><th width="60%" align="center">?</th><td width="20%" align="right">?<a accesskey="n" href="benchmarks.html">Next</a></td></tr></table><hr></div>
           
       <div class="sect1"><div class="titlepage"><div><h2 class="title" style="clear: both"><a name="precision"></a>4.2.  Precision </h2></div></div><p>
-            This section will eventually have a whole bunch of graphs that
-            show the precision and/or lack thereof of all fixed point
-            math macro's compared to 32/64-bit floating point.
+            This section describes how you can visualize the precision
+            of all fixed point macro's. The result will look like this:
+        </p><p>
+            <a href="http://fpm.berlios.de/website/graphs/" target="_top">
+                Graphs (version 0.31-cvs)</a>
+        </p><p>
+            The easiest way is to unpack the tarball, run configure with your
+            desired command line options and run:
+
+            <pre class="screen">
+        make graphs </pre>
+        </p><p>
+            This will compile 'precision' and 'precisionlut' and run
+            gengraphs.sh to generate the graphs. You need to have gnuplot
+            and fig2dev installed.
+        </p><p>
+            It's also possible to run 'precision' and 'precisionlut' by hand.
+            They take an unsigned fixed point type and a function name as
+            arguments. A huge table will be printed to stdout. Each line
+            consists of the value of x, the value of function(x) calculated
+            by libm and the value of function(x) calculated by a fixed point
+            macro.
+
+            <pre class="screen">
+        ./precision ufp16p16 sqrt </pre>
         </p></div>
           
       <div class="navfooter"><hr><table width="100%" summary="Navigation footer"><tr><td width="40%" align="left"><a accesskey="p" href="advanced.html">Prev</a>?</td><td width="20%" align="center"><a accesskey="u" href="advanced.html">Up</a></td><td width="40%" align="right">?<a accesskey="n" href="benchmarks.html">Next</a></td></tr><tr><td width="40%" align="left" valign="top">?</td><td width="20%" align="center"><a accesskey="h" href="index.html">Home</a></td><td width="40%" align="right" valign="top">?</td></tr></table></div>



From nobody at sheep.berlios.de  Thu Sep 15 02:03:42 2005
From: nobody at sheep.berlios.de (ivop)
Date: Thu, 15 Sep 2005 02:03:42 +0200
Subject: [fpm-cvslog] fpm/docs/xml html-common.xsl,1.4,1.5
Message-ID: <200509150003.j8F03g127008@bat.berlios.de>

Update of /cvsroot/fpm/fpm/docs/xml
In directory sheep:/tmp/cvs-serv22822

Modified Files:
	html-common.xsl 
Log Message:
fix ulinks (no target=_top)



Index: html-common.xsl
===================================================================
RCS file: /cvsroot/fpm/fpm/docs/xml/html-common.xsl,v
retrieving revision 1.4
retrieving revision 1.5
diff -u -d -r1.4 -r1.5
--- html-common.xsl	5 Sep 2005 00:42:06 -0000	1.4
+++ html-common.xsl	15 Sep 2005 00:03:37 -0000	1.5
@@ -59,4 +59,7 @@
       <b><xsl:apply-templates/></b>
   </xsl:template>
 
+  <!-- Override target=_top -->
+  <xsl:param name="ulink.target" select="''"/>
+
 </xsl:stylesheet>



From nobody at sheep.berlios.de  Thu Sep 15 02:04:33 2005
From: nobody at sheep.berlios.de (ivop)
Date: Thu, 15 Sep 2005 02:04:33 +0200
Subject: [fpm-cvslog] website/docs/HTML/en default.css,1.8,1.9 precision.html,1.3,1.4
Message-ID: <200509150004.j8F04X127032@bat.berlios.de>

Update of /cvsroot/fpm/website/docs/HTML/en
In directory sheep:/tmp/cvs-serv23247/docs/HTML/en

Modified Files:
	default.css precision.html 
Log Message:
fix ulink (no target=_top in documentation hyperlinks)



Index: default.css
===================================================================
RCS file: /cvsroot/fpm/website/docs/HTML/en/default.css,v
retrieving revision 1.8
retrieving revision 1.9
diff -u -d -r1.8 -r1.9

Index: precision.html
===================================================================
RCS file: /cvsroot/fpm/website/docs/HTML/en/precision.html,v
retrieving revision 1.3
retrieving revision 1.4
diff -u -d -r1.3 -r1.4
--- precision.html	14 Sep 2005 23:46:27 -0000	1.3
+++ precision.html	15 Sep 2005 00:04:30 -0000	1.4
@@ -6,7 +6,7 @@
             This section describes how you can visualize the precision
             of all fixed point macro's. The result will look like this:
         </p><p>
-            <a href="http://fpm.berlios.de/website/graphs/" target="_top">
+            <a href="http://fpm.berlios.de/website/graphs/">
                 Graphs (version 0.31-cvs)</a>
         </p><p>
             The easiest way is to unpack the tarball, run configure with your



From nobody at sheep.berlios.de  Thu Sep 15 02:04:33 2005
From: nobody at sheep.berlios.de (ivop)
Date: Thu, 15 Sep 2005 02:04:33 +0200
Subject: [fpm-cvslog] website/docs/HTML-single/en default.css,1.8,1.9 index.html,1.9,1.10
Message-ID: <200509150004.j8F04X127036@bat.berlios.de>

Update of /cvsroot/fpm/website/docs/HTML-single/en
In directory sheep:/tmp/cvs-serv23247/docs/HTML-single/en

Modified Files:
	default.css index.html 
Log Message:
fix ulink (no target=_top in documentation hyperlinks)



Index: default.css
===================================================================
RCS file: /cvsroot/fpm/website/docs/HTML-single/en/default.css,v
retrieving revision 1.8
retrieving revision 1.9
diff -u -d -r1.8 -r1.9

Index: index.html
===================================================================
RCS file: /cvsroot/fpm/website/docs/HTML-single/en/index.html,v
retrieving revision 1.9
retrieving revision 1.10
diff -u -d -r1.9 -r1.10
--- index.html	14 Sep 2005 23:46:27 -0000	1.9
+++ index.html	15 Sep 2005 00:04:31 -0000	1.10
@@ -350,7 +350,7 @@
             This section describes how you can visualize the precision
             of all fixed point macro's. The result will look like this:
         </p><p>
-            <a href="http://fpm.berlios.de/website/graphs/" target="_top">
+            <a href="http://fpm.berlios.de/website/graphs/">
                 Graphs (version 0.31-cvs)</a>
         </p><p>
             The easiest way is to unpack the tarball, run configure with your



