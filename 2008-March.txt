From ivop at mail.berlios.de  Wed Mar 19 15:31:42 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Wed, 19 Mar 2008 15:31:42 +0100
Subject: [fpm-cvslog] r98 - trunk/CVSROOT
Message-ID: <200803191431.m2JEVgpT011996@sheep.berlios.de>

Author: ivop
Date: 2008-03-19 15:31:36 +0100 (Wed, 19 Mar 2008)
New Revision: 98

Removed:
   trunk/CVSROOT/checkoutlist
   trunk/CVSROOT/commitinfo
   trunk/CVSROOT/config
   trunk/CVSROOT/cvswrappers
   trunk/CVSROOT/editinfo
   trunk/CVSROOT/loginfo
   trunk/CVSROOT/modules
   trunk/CVSROOT/notify
   trunk/CVSROOT/rcsinfo
   trunk/CVSROOT/taginfo
   trunk/CVSROOT/verifymsg
Log:
remove cvsroot cruft


Deleted: trunk/CVSROOT/checkoutlist
===================================================================
--- trunk/CVSROOT/checkoutlist	2006-04-03 20:42:47 UTC (rev 97)
+++ trunk/CVSROOT/checkoutlist	2008-03-19 14:31:36 UTC (rev 98)
@@ -1,13 +0,0 @@
-# The "checkoutlist" file is used to support additional version controlled
-# administrative files in $CVSROOT/CVSROOT, such as template files.
-#
-# The first entry on a line is a filename which will be checked out from
-# the corresponding RCS file in the $CVSROOT/CVSROOT directory.
-# The remainder of the line is an error message to use if the file cannot
-# be checked out.
-#
-# File format:
-#
-#	[<whitespace>]<filename><whitespace><error message><end-of-line>
-#
-# comment lines begin with '#'

Deleted: trunk/CVSROOT/commitinfo
===================================================================
--- trunk/CVSROOT/commitinfo	2006-04-03 20:42:47 UTC (rev 97)
+++ trunk/CVSROOT/commitinfo	2008-03-19 14:31:36 UTC (rev 98)
@@ -1,15 +0,0 @@
-# The "commitinfo" file is used to control pre-commit checks.
-# The filter on the right is invoked with the repository and a list 
-# of files to check.  A non-zero exit of the filter program will 
-# cause the commit to be aborted.
-#
-# The first entry on a line is a regular expression which is tested
-# against the directory that the change is being committed to, relative
-# to the $CVSROOT.  For the first match that is found, then the remainder
-# of the line is the name of the filter to run.
-#
-# If the repository name does not match any of the regular expressions in this
-# file, the "DEFAULT" line is used, if it is specified.
-#
-# If the name "ALL" appears as a regular expression it is always used
-# in addition to the first matching regex or "DEFAULT".

Deleted: trunk/CVSROOT/config
===================================================================
--- trunk/CVSROOT/config	2006-04-03 20:42:47 UTC (rev 97)
+++ trunk/CVSROOT/config	2008-03-19 14:31:36 UTC (rev 98)
@@ -1,21 +0,0 @@
-# Set this to "no" if pserver shouldn't check system users/passwords
-#SystemAuth=no
-
-# Put CVS lock files in this directory rather than directly in the repository.
-#LockDir=/var/lock/cvs
-
-# Set `TopLevelAdmin' to `yes' to create a CVS directory at the top
-# level of the new working directory when using the `cvs checkout'
-# command.
-#TopLevelAdmin=no
-
-# Set `LogHistory' to `all' or `TOFEWGCMAR' to log all transactions to the
-# history file, or a subset as needed (ie `TMAR' logs all write operations)
-#LogHistory=TOFEWGCMAR
-
-# Set `RereadLogAfterVerify' to `always' (the default) to allow the verifymsg
-# script to change the log message.  Set it to `stat' to force CVS to verify# that the file has changed before reading it (this can take up to an extra
-# second per directory being committed, so it is not recommended for large
-# repositories.  Set it to `never' (the previous CVS behavior) to prevent
-# verifymsg scripts from changing the log message.
-#RereadLogAfterVerify=always

Deleted: trunk/CVSROOT/cvswrappers
===================================================================
--- trunk/CVSROOT/cvswrappers	2006-04-03 20:42:47 UTC (rev 97)
+++ trunk/CVSROOT/cvswrappers	2008-03-19 14:31:36 UTC (rev 98)
@@ -1,19 +0,0 @@
-# This file affects handling of files based on their names.
-#
-# The -m option specifies whether CVS attempts to merge files.
-#
-# The -k option specifies keyword expansion (e.g. -kb for binary).
-#
-# Format of wrapper file ($CVSROOT/CVSROOT/cvswrappers or .cvswrappers)
-#
-#  wildcard	[option value][option value]...
-#
-#  where option is one of
-#  -f		from cvs filter		value: path to filter
-#  -t		to cvs filter		value: path to filter
-#  -m		update methodology	value: MERGE or COPY
-#  -k		expansion mode		value: b, o, kkv, &c
-#
-#  and value is a single-quote delimited value.
-# For example:
-#*.gif -k 'b'

Deleted: trunk/CVSROOT/editinfo
===================================================================
--- trunk/CVSROOT/editinfo	2006-04-03 20:42:47 UTC (rev 97)
+++ trunk/CVSROOT/editinfo	2008-03-19 14:31:36 UTC (rev 98)
@@ -1,21 +0,0 @@
-# The "editinfo" file is used to allow verification of logging
-# information.  It works best when a template (as specified in the
-# rcsinfo file) is provided for the logging procedure.  Given a
-# template with locations for, a bug-id number, a list of people who
-# reviewed the code before it can be checked in, and an external
-# process to catalog the differences that were code reviewed, the
-# following test can be applied to the code:
-#
-#   Making sure that the entered bug-id number is correct.
-#   Validating that the code that was reviewed is indeed the code being
-#       checked in (using the bug-id number or a seperate review
-#       number to identify this particular code set.).
-#
-# If any of the above test failed, then the commit would be aborted.
-#
-# Actions such as mailing a copy of the report to each reviewer are
-# better handled by an entry in the loginfo file.
-#
-# One thing that should be noted is the the ALL keyword is not
-# supported.  There can be only one entry that matches a given
-# repository.

Deleted: trunk/CVSROOT/loginfo
===================================================================
--- trunk/CVSROOT/loginfo	2006-04-03 20:42:47 UTC (rev 97)
+++ trunk/CVSROOT/loginfo	2008-03-19 14:31:36 UTC (rev 98)
@@ -1,31 +0,0 @@
-# The "loginfo" file controls where "cvs commit" log information
-# is sent.  The first entry on a line is a regular expression which must match
-# the directory that the change is being made to, relative to the
-# $CVSROOT.  If a match is found, then the remainder of the line is a filter
-# program that should expect log information on its standard input.
-#
-# If the repository name does not match any of the regular expressions in this
-# file, the "DEFAULT" line is used, if it is specified.
-#
-# If the name ALL appears as a regular expression it is always used
-# in addition to the first matching regex or DEFAULT.
-#
-# You may specify a format string as part of the
-# filter.  The string is composed of a `%' followed
-# by a single format character, or followed by a set of format
-# characters surrounded by `{' and `}' as separators.  The format
-# characters are:
-#
-#   s = file name
-#   V = old version number (pre-checkin)
-#   v = new version number (post-checkin)
-#
-# For example:
-#DEFAULT (echo ""; id; echo %s; date; cat) >> $CVSROOT/CVSROOT/commitlog
-# or
-#DEFAULT (echo ""; id; echo %{sVv}; date; cat) >> $CVSROOT/CVSROOT/commitlog
-
-CVSROOT /usr/local/bin/syncmail -u %{sVv} ivop at mail.berlios.de
-
-DEFAULT /usr/local/bin/syncmail -u %{sVv} fpm-cvslog at lists.berlios.de
-

Deleted: trunk/CVSROOT/modules
===================================================================
--- trunk/CVSROOT/modules	2006-04-03 20:42:47 UTC (rev 97)
+++ trunk/CVSROOT/modules	2008-03-19 14:31:36 UTC (rev 98)
@@ -1,26 +0,0 @@
-# Three different line formats are valid:
-#	key	-a    aliases...
-#	key [options] directory
-#	key [options] directory files...
-#
-# Where "options" are composed of:
-#	-i prog		Run "prog" on "cvs commit" from top-level of module.
-#	-o prog		Run "prog" on "cvs checkout" of module.
-#	-e prog		Run "prog" on "cvs export" of module.
-#	-t prog		Run "prog" on "cvs rtag" of module.
-#	-u prog		Run "prog" on "cvs update" of module.
-#	-d dir		Place module in directory "dir" instead of module name.
-#	-l		Top-level directory only -- do not recurse.
-#
-# NOTE:  If you change any of the "Run" options above, you'll have to
-# release and re-checkout any working directories of these modules.
-#
-# And "directory" is a path to a directory relative to $CVSROOT.
-#
-# The "-a" option specifies an alias.  An alias is interpreted as if
-# everything on the right of the "-a" had been typed on the command line.
-#
-# You can encode a module within a module by using the special '&'
-# character to interpose another module into the current module.  This
-# can be useful for creating a module that consists of many directories
-# spread out over the entire source repository.

Deleted: trunk/CVSROOT/notify
===================================================================
--- trunk/CVSROOT/notify	2006-04-03 20:42:47 UTC (rev 97)
+++ trunk/CVSROOT/notify	2008-03-19 14:31:36 UTC (rev 98)
@@ -1,12 +0,0 @@
-# The "notify" file controls where notifications from watches set by
-# "cvs watch add" or "cvs edit" are sent.  The first entry on a line is
-# a regular expression which is tested against the directory that the
-# change is being made to, relative to the $CVSROOT.  If it matches,
-# then the remainder of the line is a filter program that should contain
-# one occurrence of %s for the user to notify, and information on its
-# standard input.
-#
-# "ALL" or "DEFAULT" can be used in place of the regular expression.
-#
-# For example:
-#ALL mail -s "CVS notification" %s

Deleted: trunk/CVSROOT/rcsinfo
===================================================================
--- trunk/CVSROOT/rcsinfo	2006-04-03 20:42:47 UTC (rev 97)
+++ trunk/CVSROOT/rcsinfo	2008-03-19 14:31:36 UTC (rev 98)
@@ -1,13 +0,0 @@
-# The "rcsinfo" file is used to control templates with which the editor
-# is invoked on commit and import.
-#
-# The first entry on a line is a regular expression which is tested
-# against the directory that the change is being made to, relative to the
-# $CVSROOT.  For the first match that is found, then the remainder of the
-# line is the name of the file that contains the template.
-#
-# If the repository name does not match any of the regular expressions in this
-# file, the "DEFAULT" line is used, if it is specified.
-#
-# If the name "ALL" appears as a regular expression it is always used
-# in addition to the first matching regex or "DEFAULT".

Deleted: trunk/CVSROOT/taginfo
===================================================================
--- trunk/CVSROOT/taginfo	2006-04-03 20:42:47 UTC (rev 97)
+++ trunk/CVSROOT/taginfo	2008-03-19 14:31:36 UTC (rev 98)
@@ -1,20 +0,0 @@
-# The "taginfo" file is used to control pre-tag checks.
-# The filter on the right is invoked with the following arguments:
-#
-# $1 -- tagname
-# $2 -- operation "add" for tag, "mov" for tag -F, and "del" for tag -d
-# $3 -- repository
-# $4->  file revision [file revision ...]
-#
-# A non-zero exit of the filter program will cause the tag to be aborted.
-#
-# The first entry on a line is a regular expression which is tested
-# against the directory that the change is being committed to, relative
-# to the $CVSROOT.  For the first match that is found, then the remainder
-# of the line is the name of the filter to run.
-#
-# If the repository name does not match any of the regular expressions in this
-# file, the "DEFAULT" line is used, if it is specified.
-#
-# If the name "ALL" appears as a regular expression it is always used
-# in addition to the first matching regex or "DEFAULT".

Deleted: trunk/CVSROOT/verifymsg
===================================================================
--- trunk/CVSROOT/verifymsg	2006-04-03 20:42:47 UTC (rev 97)
+++ trunk/CVSROOT/verifymsg	2008-03-19 14:31:36 UTC (rev 98)
@@ -1,21 +0,0 @@
-# The "verifymsg" file is used to allow verification of logging
-# information.  It works best when a template (as specified in the
-# rcsinfo file) is provided for the logging procedure.  Given a
-# template with locations for, a bug-id number, a list of people who
-# reviewed the code before it can be checked in, and an external
-# process to catalog the differences that were code reviewed, the
-# following test can be applied to the code:
-#
-#   Making sure that the entered bug-id number is correct.
-#   Validating that the code that was reviewed is indeed the code being
-#       checked in (using the bug-id number or a seperate review
-#       number to identify this particular code set.).
-#
-# If any of the above test failed, then the commit would be aborted.
-#
-# Actions such as mailing a copy of the report to each reviewer are
-# better handled by an entry in the loginfo file.
-#
-# One thing that should be noted is the the ALL keyword is not
-# supported.  There can be only one entry that matches a given
-# repository.



From ivop at mail.berlios.de  Wed Mar 19 15:32:39 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Wed, 19 Mar 2008 15:32:39 +0100
Subject: [fpm-cvslog] r99 - trunk
Message-ID: <200803191432.m2JEWdtV012130@sheep.berlios.de>

Author: ivop
Date: 2008-03-19 15:32:38 +0100 (Wed, 19 Mar 2008)
New Revision: 99

Removed:
   trunk/CVSROOT/
Log:
remove cruft




From ivop at mail.berlios.de  Wed Mar 19 15:36:26 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Wed, 19 Mar 2008 15:36:26 +0100
Subject: [fpm-cvslog] r100 - trunk/website
Message-ID: <200803191436.m2JEaQ5u012573@sheep.berlios.de>

Author: ivop
Date: 2008-03-19 15:36:25 +0100 (Wed, 19 Mar 2008)
New Revision: 100

Modified:
   trunk/website/cvs.html
   trunk/website/head.html
Log:
rename cvs to svn


Modified: trunk/website/cvs.html
===================================================================
--- trunk/website/cvs.html	2008-03-19 14:32:38 UTC (rev 99)
+++ trunk/website/cvs.html	2008-03-19 14:36:25 UTC (rev 100)
@@ -4,7 +4,7 @@
 
 <HTML>
 <HEAD>
-    <TITLE> CVS </TITLE>
+    <TITLE> SVN </TITLE>
     <META http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
 </HEAD>
 
@@ -14,27 +14,24 @@
 <TR> <TD VALIGN="TOP" HEIGHT="1000">
 
 
-<B> CVS </B>
+<B> SVN </B>
 <P>
 
-To download the latest CVS development version anonymously, issue the
+To download the latest SVN development version anonymously, issue the
 following commands:
 
 <PRE>
-    cvs -d:pserver:anonymous at cvs.fpm.berlios.de:/cvsroot/fpm login
-    cvs -z3 -d:pserver:anonymous at cvs.fpm.berlios.de:/cvsroot/fpm co fpm
+    svn co svn://svn.berlios.de/fpm/trunk
 </PRE>
-
-When prompted for a password, just press enter.
 <P>
 
 To update an existing check-out, use:
 
 <PRE>
-    cvs -z3 up -dPA
+    svn up
 </PRE>
 
-If you want to receive an e-mail every time something has changed in CVS,
+If you want to receive an e-mail every time something has changed in SVN,
 you can subscribe yourself to the
 <A HREF="https://lists.berlios.de/mailman/listinfo/fpm-cvslog"
    TARGET="_new">CVS log mailinglist</A>

Modified: trunk/website/head.html
===================================================================
--- trunk/website/head.html	2008-03-19 14:32:38 UTC (rev 99)
+++ trunk/website/head.html	2008-03-19 14:36:25 UTC (rev 100)
@@ -49,7 +49,7 @@
             |
             <A HREF="download.html" TARGET="MAIN">DOWNLOAD</A>
             |
-            <A HREF="cvs.html" TARGET="MAIN">CVS</A>
+            <A HREF="cvs.html" TARGET="MAIN">SVN</A>
             |
             <A HREF="https://developer.berlios.de/forum/?group_id=4532"
                TARGET="_new">FORUM</A>



From ivop at mail.berlios.de  Wed Mar 19 15:36:59 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Wed, 19 Mar 2008 15:36:59 +0100
Subject: [fpm-cvslog] r101 - trunk/website
Message-ID: <200803191436.m2JEax7F012704@sheep.berlios.de>

Author: ivop
Date: 2008-03-19 15:36:59 +0100 (Wed, 19 Mar 2008)
New Revision: 101

Added:
   trunk/website/svn.html
Removed:
   trunk/website/cvs.html
Modified:
   trunk/website/head.html
Log:
further rename cvs to svn


Deleted: trunk/website/cvs.html
===================================================================
--- trunk/website/cvs.html	2008-03-19 14:36:25 UTC (rev 100)
+++ trunk/website/cvs.html	2008-03-19 14:36:59 UTC (rev 101)
@@ -1,43 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-
-<!-- $Id$ -->
-
-<HTML>
-<HEAD>
-    <TITLE> SVN </TITLE>
-    <META http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
-</HEAD>
-
-<BODY BGCOLOR="#ffffff" TEXT="#000000" LINK="#000080" VLINK="#000040" STYLE="font-size: 12pt; margin-left: 64px;">
-
-<TABLE BGCOLOR="#f0f0f0" BORDER="0" CELLSPACING="0" CELLPADDING="16" WIDTH="700">
-<TR> <TD VALIGN="TOP" HEIGHT="1000">
-
-
-<B> SVN </B>
-<P>
-
-To download the latest SVN development version anonymously, issue the
-following commands:
-
-<PRE>
-    svn co svn://svn.berlios.de/fpm/trunk
-</PRE>
-<P>
-
-To update an existing check-out, use:
-
-<PRE>
-    svn up
-</PRE>
-
-If you want to receive an e-mail every time something has changed in SVN,
-you can subscribe yourself to the
-<A HREF="https://lists.berlios.de/mailman/listinfo/fpm-cvslog"
-   TARGET="_new">CVS log mailinglist</A>
-<P>
-
-</TD></TR></TABLE>
-</BODY>
-
-</HTML>

Modified: trunk/website/head.html
===================================================================
--- trunk/website/head.html	2008-03-19 14:36:25 UTC (rev 100)
+++ trunk/website/head.html	2008-03-19 14:36:59 UTC (rev 101)
@@ -49,7 +49,7 @@
             |
             <A HREF="download.html" TARGET="MAIN">DOWNLOAD</A>
             |
-            <A HREF="cvs.html" TARGET="MAIN">SVN</A>
+            <A HREF="svn.html" TARGET="MAIN">SVN</A>
             |
             <A HREF="https://developer.berlios.de/forum/?group_id=4532"
                TARGET="_new">FORUM</A>

Copied: trunk/website/svn.html (from rev 100, trunk/website/cvs.html)



From ivop at mail.berlios.de  Wed Mar 19 15:41:26 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Wed, 19 Mar 2008 15:41:26 +0100
Subject: [fpm-cvslog] r102 - trunk/website
Message-ID: <200803191441.m2JEfQCb013397@sheep.berlios.de>

Author: ivop
Date: 2008-03-19 15:41:25 +0100 (Wed, 19 Mar 2008)
New Revision: 102

Modified:
   trunk/website/svn.html
Log:
old cvs list is now for svn commit messages


Modified: trunk/website/svn.html
===================================================================
--- trunk/website/svn.html	2008-03-19 14:36:59 UTC (rev 101)
+++ trunk/website/svn.html	2008-03-19 14:41:25 UTC (rev 102)
@@ -32,9 +32,10 @@
 </PRE>
 
 If you want to receive an e-mail every time something has changed in SVN,
-you can subscribe yourself to the
+you can subscribe yourself to the old
 <A HREF="https://lists.berlios.de/mailman/listinfo/fpm-cvslog"
    TARGET="_new">CVS log mailinglist</A>
+which is now used for Subversion commit messages.
 <P>
 
 </TD></TR></TABLE>



From ivop at mail.berlios.de  Wed Mar 19 15:43:18 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Wed, 19 Mar 2008 15:43:18 +0100
Subject: [fpm-cvslog] r103 - trunk/website
Message-ID: <200803191443.m2JEhIuG013491@sheep.berlios.de>

Author: ivop
Date: 2008-03-19 15:43:17 +0100 (Wed, 19 Mar 2008)
New Revision: 103

Modified:
   trunk/website/head.html
Log:
no forum, no bugs tracker


Modified: trunk/website/head.html
===================================================================
--- trunk/website/head.html	2008-03-19 14:41:25 UTC (rev 102)
+++ trunk/website/head.html	2008-03-19 14:43:17 UTC (rev 103)
@@ -51,12 +51,6 @@
             |
             <A HREF="svn.html" TARGET="MAIN">SVN</A>
             |
-            <A HREF="https://developer.berlios.de/forum/?group_id=4532"
-               TARGET="_new">FORUM</A>
-            |
-            <A HREF="https://developer.berlios.de/bugs/?group_id=4532"
-               TARGET="_new">BUGS</A>
-            |
             <A HREF="contact.html" TARGET="MAIN">CONTACT</A>
             |
             <A HREF="links.html" TARGET="MAIN">LINKS</A>



From ivop at mail.berlios.de  Wed Mar 19 16:04:59 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Wed, 19 Mar 2008 16:04:59 +0100
Subject: [fpm-cvslog] r104 - trunk/fpm
Message-ID: <200803191504.m2JF4xG4015485@sheep.berlios.de>

Author: ivop
Date: 2008-03-19 16:04:59 +0100 (Wed, 19 Mar 2008)
New Revision: 104

Modified:
   trunk/fpm/ChangeLog
Log:
migration to subversion


Modified: trunk/fpm/ChangeLog
===================================================================
--- trunk/fpm/ChangeLog	2008-03-19 14:43:17 UTC (rev 103)
+++ trunk/fpm/ChangeLog	2008-03-19 15:04:59 UTC (rev 104)
@@ -3,6 +3,8 @@
 
 $Id$
 
+v0.31	[Final macro release before rewrite]
+    - migrated to subversion
     - fix for systems that don't have round()
     - huge speed improvement of algorithmic versions of sqrt(). 40-100 times(!)
       faster, depending on type, by elimination of conditional code



From ivop at mail.berlios.de  Wed Mar 19 16:05:42 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Wed, 19 Mar 2008 16:05:42 +0100
Subject: [fpm-cvslog] r105 - in trunk/fpm: . docs docs/xml docs/xml/en
	include
Message-ID: <200803191505.m2JF5gb9015646@sheep.berlios.de>

Author: ivop
Date: 2008-03-19 16:05:42 +0100 (Wed, 19 Mar 2008)
New Revision: 105

Removed:
   trunk/fpm/.cvsignore
   trunk/fpm/docs/.cvsignore
   trunk/fpm/docs/xml/.cvsignore
   trunk/fpm/docs/xml/en/.cvsignore
   trunk/fpm/include/.cvsignore
Log:
remove cvsignore cruft


Deleted: trunk/fpm/.cvsignore
===================================================================
--- trunk/fpm/.cvsignore	2008-03-19 15:04:59 UTC (rev 104)
+++ trunk/fpm/.cvsignore	2008-03-19 15:05:42 UTC (rev 105)
@@ -1,16 +0,0 @@
-deps
-barcharts
-graphs
-genlut
-benchmark
-benchmarklut
-benchmarklut.c
-precision
-precisionlut
-precisionlut.c
-configure.log
-config.mak
-config.sh
-benchmark.dat
-benchmarklut.dat
-precision.dat

Deleted: trunk/fpm/docs/.cvsignore
===================================================================
--- trunk/fpm/docs/.cvsignore	2008-03-19 15:04:59 UTC (rev 104)
+++ trunk/fpm/docs/.cvsignore	2008-03-19 15:05:42 UTC (rev 105)
@@ -1,2 +0,0 @@
-HTML
-HTML-single

Deleted: trunk/fpm/docs/xml/.cvsignore
===================================================================
--- trunk/fpm/docs/xml/.cvsignore	2008-03-19 15:04:59 UTC (rev 104)
+++ trunk/fpm/docs/xml/.cvsignore	2008-03-19 15:05:42 UTC (rev 105)
@@ -1,4 +0,0 @@
-html-chunk.xsl
-html-single.xsl
-xsltproc.sh
-xmllint.sh

Deleted: trunk/fpm/docs/xml/en/.cvsignore
===================================================================
--- trunk/fpm/docs/xml/en/.cvsignore	2008-03-19 15:04:59 UTC (rev 104)
+++ trunk/fpm/docs/xml/en/.cvsignore	2008-03-19 15:05:42 UTC (rev 105)
@@ -1 +0,0 @@
-main.xml

Deleted: trunk/fpm/include/.cvsignore
===================================================================
--- trunk/fpm/include/.cvsignore	2008-03-19 15:04:59 UTC (rev 104)
+++ trunk/fpm/include/.cvsignore	2008-03-19 15:05:42 UTC (rev 105)
@@ -1 +0,0 @@
-fixedpointmathlut.h



From ivop at mail.berlios.de  Wed Mar 19 16:13:44 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Wed, 19 Mar 2008 16:13:44 +0100
Subject: [fpm-cvslog] r106 - in trunk/fpm: . include
Message-ID: <200803191513.m2JFDiH9016721@sheep.berlios.de>

Author: ivop
Date: 2008-03-19 16:13:43 +0100 (Wed, 19 Mar 2008)
New Revision: 106

Modified:
   trunk/fpm/Makefile
   trunk/fpm/benchmark.c
   trunk/fpm/configure
   trunk/fpm/genbarcharts.sh
   trunk/fpm/gengraphs.sh
   trunk/fpm/genlut.c
   trunk/fpm/include/fixedpointmath.h
   trunk/fpm/include/fixedpointmathcode.h
Log:
prepare for last macro release before major rewrite


Modified: trunk/fpm/Makefile
===================================================================
--- trunk/fpm/Makefile	2008-03-19 15:05:42 UTC (rev 105)
+++ trunk/fpm/Makefile	2008-03-19 15:13:43 UTC (rev 106)
@@ -1,7 +1,7 @@
 #
 # Fixed Point Math Macro Library - Makefile
 #
-# (C)opyright 2005 by Ivo van Poorten
+# (C)opyright 2005,2006 by Ivo van Poorten
 # Licensed under version 2 of the GPL
 #
 # $Id$

Modified: trunk/fpm/benchmark.c
===================================================================
--- trunk/fpm/benchmark.c	2008-03-19 15:05:42 UTC (rev 105)
+++ trunk/fpm/benchmark.c	2008-03-19 15:13:43 UTC (rev 106)
@@ -3,7 +3,7 @@
 /*
  * Fixed Point Math Macro Library - Benchmark
  *
- * (C)2005 by Ivo van Poorten
+ * (C)2005,2006 by Ivo van Poorten
  * Licensed under version 2 of the GPL
  *
  * $Id$

Modified: trunk/fpm/configure
===================================================================
--- trunk/fpm/configure	2008-03-19 15:05:42 UTC (rev 105)
+++ trunk/fpm/configure	2008-03-19 15:13:43 UTC (rev 106)
@@ -4,7 +4,7 @@
 # Alternate configure
 # Loosely based on MPlayer's configure
 #
-# (C)opyright 2005 by Ivo van Poorten
+# (C)opyright 2005,2006 by Ivo van Poorten
 # Licensed under version 2 of the GPL
 #
 # $Id$

Modified: trunk/fpm/genbarcharts.sh
===================================================================
--- trunk/fpm/genbarcharts.sh	2008-03-19 15:05:42 UTC (rev 105)
+++ trunk/fpm/genbarcharts.sh	2008-03-19 15:13:43 UTC (rev 106)
@@ -3,7 +3,7 @@
 # $Id$
 
 # Script to generate barcharts from benchmark output
-# (C)opyright 2005 by Ivo van Poorten
+# (C)opyright 2005,2006 by Ivo van Poorten
 # Licensed under version 2 of the GPL
 
 # awk trick inspired by:

Modified: trunk/fpm/gengraphs.sh
===================================================================
--- trunk/fpm/gengraphs.sh	2008-03-19 15:05:42 UTC (rev 105)
+++ trunk/fpm/gengraphs.sh	2008-03-19 15:13:43 UTC (rev 106)
@@ -3,7 +3,7 @@
 # $Id$
 
 # Script to generate graphs from precision output
-# (C)opyright 2005 by Ivo van Poorten
+# (C)opyright 2005,2006 by Ivo van Poorten
 # Licensed under version 2 of the GPL
 
 # generic function

Modified: trunk/fpm/genlut.c
===================================================================
--- trunk/fpm/genlut.c	2008-03-19 15:05:42 UTC (rev 105)
+++ trunk/fpm/genlut.c	2008-03-19 15:13:43 UTC (rev 106)
@@ -3,7 +3,7 @@
 /*
  * Fixed Point Math Macro Library - Generate Look-Up-Tables
  *
- * (C)opyright 2005 by Ivo van Poorten
+ * (C)opyright 2005,2006 by Ivo van Poorten
  * Licensed under version 2 of the GPL
  *
  * $Id$

Modified: trunk/fpm/include/fixedpointmath.h
===================================================================
--- trunk/fpm/include/fixedpointmath.h	2008-03-19 15:05:42 UTC (rev 105)
+++ trunk/fpm/include/fixedpointmath.h	2008-03-19 15:13:43 UTC (rev 106)
@@ -3,7 +3,7 @@
 /*
  * Fixed Point Math Macro Library
  *
- * (C)opyright 2005 by Ivo van Poorten
+ * (C)opyright 2005,2006 by Ivo van Poorten
  * Licensed under version 2 of the GPL
  *
  * $Id$
@@ -20,7 +20,7 @@
 #define __FPM_VERSION__         0.31
 #define __FPM_VERSION_MAJOR__   0
 #define __FPM_VERSION_MINOR__   31
-#define __FPM_VERSION_RELEASE__ cvs
+#define __FPM_VERSION_RELEASE__ beta
 
 /* ------------------------------------------------------------------------- */
 

Modified: trunk/fpm/include/fixedpointmathcode.h
===================================================================
--- trunk/fpm/include/fixedpointmathcode.h	2008-03-19 15:05:42 UTC (rev 105)
+++ trunk/fpm/include/fixedpointmathcode.h	2008-03-19 15:13:43 UTC (rev 106)
@@ -7,7 +7,7 @@
  *
  * This file contains the actual implementations of the functions.
  *
- * (C)opyright 2005 by Ivo van Poorten
+ * (C)opyright 2005,2006 by Ivo van Poorten
  * Licensed under version 2 of the GPL
  *
  * $Id$



From ivop at mail.berlios.de  Wed Mar 19 16:15:18 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Wed, 19 Mar 2008 16:15:18 +0100
Subject: [fpm-cvslog] r107 - trunk/fpm
Message-ID: <200803191515.m2JFFI7B016935@sheep.berlios.de>

Author: ivop
Date: 2008-03-19 16:15:18 +0100 (Wed, 19 Mar 2008)
New Revision: 107

Modified:
   trunk/fpm/INSTALL
   trunk/fpm/README
Log:
correct url


Modified: trunk/fpm/INSTALL
===================================================================
--- trunk/fpm/INSTALL	2008-03-19 15:13:43 UTC (rev 106)
+++ trunk/fpm/INSTALL	2008-03-19 15:15:18 UTC (rev 107)
@@ -1,4 +1,4 @@
 $Id$
 
-See http://fpm.berlios.de/
+See http://fpm.berlios.de/index.html
 

Modified: trunk/fpm/README
===================================================================
--- trunk/fpm/README	2008-03-19 15:13:43 UTC (rev 106)
+++ trunk/fpm/README	2008-03-19 15:15:18 UTC (rev 107)
@@ -1,4 +1,4 @@
 $Id$
 
-See http://fpm.berlios.de/
+See http://fpm.berlios.de/index.html
 



From ivop at mail.berlios.de  Wed Mar 19 16:40:36 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Wed, 19 Mar 2008 16:40:36 +0100
Subject: [fpm-cvslog] r108 - trunk/website
Message-ID: <200803191540.m2JFeaGU020644@sheep.berlios.de>

Author: ivop
Date: 2008-03-19 16:40:35 +0100 (Wed, 19 Mar 2008)
New Revision: 108

Modified:
   trunk/website/download.html
   trunk/website/home.html
Log:
update for 0.31-beta release


Modified: trunk/website/download.html
===================================================================
--- trunk/website/download.html	2008-03-19 15:15:18 UTC (rev 107)
+++ trunk/website/download.html	2008-03-19 15:40:35 UTC (rev 108)
@@ -17,7 +17,10 @@
 <B> DOWNLOAD </B>
 <P>
 
-First alpha release:
+<A HREF="http://download.berlios.de/fpm/fpm-0.31-beta.tar.gz">
+fpm-0.31-beta.tar.gz</A><BR>
+<A HREF="http://download.berlios.de/fpm/fpm-0.31-beta.tar.bz2">
+fpm-0.31-beta.tar.bz2</A>
 <P>
 
 <A HREF="http://download.berlios.de/fpm/fpm-0.30-alpha.tar.bz2">

Modified: trunk/website/home.html
===================================================================
--- trunk/website/home.html	2008-03-19 15:15:18 UTC (rev 107)
+++ trunk/website/home.html	2008-03-19 15:40:35 UTC (rev 108)
@@ -16,6 +16,15 @@
 <B> HOME </B>
 <P>
 
+<I STYLE="font-size: 8pt;"> Wednesday, March 19 , 2008 </I>
+<BR>
+New release (0.31-beta) which includes all that was added to CVS in 2006.
+Migrated the repo to Subversion before starting a major rewrite.
+<BR>
+<I STYLE="font-size: 8pt;"> --Ivo </I>
+
+<HR>
+
 <I STYLE="font-size: 8pt;"> Tuesday, September 14, 2005 </I>
 <BR>
 Today, the first alpha release is released. The fpm-0.30-alpha tarball can



From ivop at mail.berlios.de  Thu Mar 20 01:13:09 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Thu, 20 Mar 2008 01:13:09 +0100
Subject: [fpm-cvslog] r109 - in trunk/fpm: . macro_version
Message-ID: <200803200013.m2K0D9tU018258@sheep.berlios.de>

Author: ivop
Date: 2008-03-20 01:13:08 +0100 (Thu, 20 Mar 2008)
New Revision: 109

Added:
   trunk/fpm/macro_version/
   trunk/fpm/macro_version/ChangeLog
   trunk/fpm/macro_version/INSTALL
   trunk/fpm/macro_version/LICENSE
   trunk/fpm/macro_version/Makefile
   trunk/fpm/macro_version/README
   trunk/fpm/macro_version/TODO
   trunk/fpm/macro_version/benchmark.c
   trunk/fpm/macro_version/configure
   trunk/fpm/macro_version/docs/
   trunk/fpm/macro_version/genbarcharts.sh
   trunk/fpm/macro_version/gengraphs.sh
   trunk/fpm/macro_version/genlut.c
   trunk/fpm/macro_version/include/
   trunk/fpm/macro_version/misc/
   trunk/fpm/macro_version/precision.c
   trunk/fpm/macro_version/tools/
Removed:
   trunk/fpm/ChangeLog
   trunk/fpm/INSTALL
   trunk/fpm/LICENSE
   trunk/fpm/Makefile
   trunk/fpm/README
   trunk/fpm/TODO
   trunk/fpm/benchmark.c
   trunk/fpm/configure
   trunk/fpm/docs/
   trunk/fpm/genbarcharts.sh
   trunk/fpm/gengraphs.sh
   trunk/fpm/genlut.c
   trunk/fpm/include/
   trunk/fpm/misc/
   trunk/fpm/precision.c
   trunk/fpm/tools/
Log:
move old macro version to subdirectory


Deleted: trunk/fpm/ChangeLog
===================================================================
--- trunk/fpm/ChangeLog	2008-03-19 15:40:35 UTC (rev 108)
+++ trunk/fpm/ChangeLog	2008-03-20 00:13:08 UTC (rev 109)
@@ -1,57 +0,0 @@
-ChangeLog
-=========
-
-$Id$
-
-v0.31	[Final macro release before rewrite]
-    - migrated to subversion
-    - fix for systems that don't have round()
-    - huge speed improvement of algorithmic versions of sqrt(). 40-100 times(!)
-      faster, depending on type, by elimination of conditional code
-    - fixed dependencies, miscellaneous freebsd fixes
-    - added detection of inttypes.h and stdint.h (define ourselves if missing)
-    - made luts const
-    - fixed pow macros for x==1
-
-v0.30   [First alpha release]
-
-    - Better Makefile(s)
-    - Fixed exp macro's conditional expressions to always evaluate as true
-    - Added make install/uninstall
-    - Generation of index.html for graphs
-    - Barcharts index.html "tool"
-    - Updated documentation
-
-v0.29   Added lut support for ln, exp and pow (indirectly)
-v0.28   Added precision(lut) and script to generate graphs of the output
-v0.27   First draft of documentation
-v0.26   Setup documentation build system
-v0.25   Moved types to code.h, finished sqrt LUT support (maybe 8fp24 needs
-        one more table, or at least higher resolution for lut256)
-v0.24   All todo's for 0.23 done.
-v0.23   Decent non-autotools configure script added; todo: test for gnuplot,
-        awk and fig2dev and have genbarchart act on that if one of them isn't
-        found. also add --with-indent= etc. options
-v0.22   Benchmark output changed to values and comments only, wrote barchart
-        script to generate PNG files of benchmark output, adjusted makefile
-        to do that
-v0.21   Preliminary sqrt LUT support and split of code and API in two .h
-        files.
-v0.20   Added pow()
-v0.19   After doing some timing tests, the "oh-so-clever" sqrt algorithm
-        turned out to be 10-15 times slower than floating point <g>
-        So, I completely rewrote the sqrt algorithm. It's still 3-11
-        times slower than the FPU, but is it possible to beat hardware
-        fsqrt that has a 14-bit lookup table? (athlon)
-v0.18   Fixed type problem in ftoufpxpx causing false integer overflow
-        compiler warnings.
-v0.17   Added a wrapper around ln() so constants can be passed. If a
-        variable is passed, it's no longer changed itself!
-v0.16   Replaced divs by muls in ln()
-v0.15   Added ln()
-v0.14   Removed silly 16p8 and 8p16 types
-v0.13   Added exp()
-v0.12   Changed sqrt() from nested macros to use a temp var (gcc trouble)
-v0.11   Added sqrt()
-v0.10   Basic types, mul() and div()
-

Deleted: trunk/fpm/INSTALL
===================================================================
--- trunk/fpm/INSTALL	2008-03-19 15:40:35 UTC (rev 108)
+++ trunk/fpm/INSTALL	2008-03-20 00:13:08 UTC (rev 109)
@@ -1,4 +0,0 @@
-$Id$
-
-See http://fpm.berlios.de/index.html
-

Deleted: trunk/fpm/LICENSE
===================================================================
--- trunk/fpm/LICENSE	2008-03-19 15:40:35 UTC (rev 108)
+++ trunk/fpm/LICENSE	2008-03-20 00:13:08 UTC (rev 109)
@@ -1,342 +0,0 @@
-$Id$
-
-		    GNU GENERAL PUBLIC LICENSE
-		       Version 2, June 1991
-
- Copyright (C) 1989, 1991 Free Software Foundation, Inc.
-                       51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
- Everyone is permitted to copy and distribute verbatim copies
- of this license document, but changing it is not allowed.
-
-			    Preamble
-
-  The licenses for most software are designed to take away your
-freedom to share and change it.  By contrast, the GNU General Public
-License is intended to guarantee your freedom to share and change free
-software--to make sure the software is free for all its users.  This
-General Public License applies to most of the Free Software
-Foundation's software and to any other program whose authors commit to
-using it.  (Some other Free Software Foundation software is covered by
-the GNU Library General Public License instead.)  You can apply it to
-your programs, too.
-
-  When we speak of free software, we are referring to freedom, not
-price.  Our General Public Licenses are designed to make sure that you
-have the freedom to distribute copies of free software (and charge for
-this service if you wish), that you receive source code or can get it
-if you want it, that you can change the software or use pieces of it
-in new free programs; and that you know you can do these things.
-
-  To protect your rights, we need to make restrictions that forbid
-anyone to deny you these rights or to ask you to surrender the rights.
-These restrictions translate to certain responsibilities for you if you
-distribute copies of the software, or if you modify it.
-
-  For example, if you distribute copies of such a program, whether
-gratis or for a fee, you must give the recipients all the rights that
-you have.  You must make sure that they, too, receive or can get the
-source code.  And you must show them these terms so they know their
-rights.
-
-  We protect your rights with two steps: (1) copyright the software, and
-(2) offer you this license which gives you legal permission to copy,
-distribute and/or modify the software.
-
-  Also, for each author's protection and ours, we want to make certain
-that everyone understands that there is no warranty for this free
-software.  If the software is modified by someone else and passed on, we
-want its recipients to know that what they have is not the original, so
-that any problems introduced by others will not reflect on the original
-authors' reputations.
-
-  Finally, any free program is threatened constantly by software
-patents.  We wish to avoid the danger that redistributors of a free
-program will individually obtain patent licenses, in effect making the
-program proprietary.  To prevent this, we have made it clear that any
-patent must be licensed for everyone's free use or not licensed at all.
-
-  The precise terms and conditions for copying, distribution and
-modification follow.
-
-		    GNU GENERAL PUBLIC LICENSE
-   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
-
-  0. This License applies to any program or other work which contains
-a notice placed by the copyright holder saying it may be distributed
-under the terms of this General Public License.  The "Program", below,
-refers to any such program or work, and a "work based on the Program"
-means either the Program or any derivative work under copyright law:
-that is to say, a work containing the Program or a portion of it,
-either verbatim or with modifications and/or translated into another
-language.  (Hereinafter, translation is included without limitation in
-the term "modification".)  Each licensee is addressed as "you".
-
-Activities other than copying, distribution and modification are not
-covered by this License; they are outside its scope.  The act of
-running the Program is not restricted, and the output from the Program
-is covered only if its contents constitute a work based on the
-Program (independent of having been made by running the Program).
-Whether that is true depends on what the Program does.
-
-  1. You may copy and distribute verbatim copies of the Program's
-source code as you receive it, in any medium, provided that you
-conspicuously and appropriately publish on each copy an appropriate
-copyright notice and disclaimer of warranty; keep intact all the
-notices that refer to this License and to the absence of any warranty;
-and give any other recipients of the Program a copy of this License
-along with the Program.
-
-You may charge a fee for the physical act of transferring a copy, and
-you may at your option offer warranty protection in exchange for a fee.
-
-  2. You may modify your copy or copies of the Program or any portion
-of it, thus forming a work based on the Program, and copy and
-distribute such modifications or work under the terms of Section 1
-above, provided that you also meet all of these conditions:
-
-    a) You must cause the modified files to carry prominent notices
-    stating that you changed the files and the date of any change.
-
-    b) You must cause any work that you distribute or publish, that in
-    whole or in part contains or is derived from the Program or any
-    part thereof, to be licensed as a whole at no charge to all third
-    parties under the terms of this License.
-
-    c) If the modified program normally reads commands interactively
-    when run, you must cause it, when started running for such
-    interactive use in the most ordinary way, to print or display an
-    announcement including an appropriate copyright notice and a
-    notice that there is no warranty (or else, saying that you provide
-    a warranty) and that users may redistribute the program under
-    these conditions, and telling the user how to view a copy of this
-    License.  (Exception: if the Program itself is interactive but
-    does not normally print such an announcement, your work based on
-    the Program is not required to print an announcement.)
-
-These requirements apply to the modified work as a whole.  If
-identifiable sections of that work are not derived from the Program,
-and can be reasonably considered independent and separate works in
-themselves, then this License, and its terms, do not apply to those
-sections when you distribute them as separate works.  But when you
-distribute the same sections as part of a whole which is a work based
-on the Program, the distribution of the whole must be on the terms of
-this License, whose permissions for other licensees extend to the
-entire whole, and thus to each and every part regardless of who wrote it.
-
-Thus, it is not the intent of this section to claim rights or contest
-your rights to work written entirely by you; rather, the intent is to
-exercise the right to control the distribution of derivative or
-collective works based on the Program.
-
-In addition, mere aggregation of another work not based on the Program
-with the Program (or with a work based on the Program) on a volume of
-a storage or distribution medium does not bring the other work under
-the scope of this License.
-
-  3. You may copy and distribute the Program (or a work based on it,
-under Section 2) in object code or executable form under the terms of
-Sections 1 and 2 above provided that you also do one of the following:
-
-    a) Accompany it with the complete corresponding machine-readable
-    source code, which must be distributed under the terms of Sections
-    1 and 2 above on a medium customarily used for software interchange; or,
-
-    b) Accompany it with a written offer, valid for at least three
-    years, to give any third party, for a charge no more than your
-    cost of physically performing source distribution, a complete
-    machine-readable copy of the corresponding source code, to be
-    distributed under the terms of Sections 1 and 2 above on a medium
-    customarily used for software interchange; or,
-
-    c) Accompany it with the information you received as to the offer
-    to distribute corresponding source code.  (This alternative is
-    allowed only for noncommercial distribution and only if you
-    received the program in object code or executable form with such
-    an offer, in accord with Subsection b above.)
-
-The source code for a work means the preferred form of the work for
-making modifications to it.  For an executable work, complete source
-code means all the source code for all modules it contains, plus any
-associated interface definition files, plus the scripts used to
-control compilation and installation of the executable.  However, as a
-special exception, the source code distributed need not include
-anything that is normally distributed (in either source or binary
-form) with the major components (compiler, kernel, and so on) of the
-operating system on which the executable runs, unless that component
-itself accompanies the executable.
-
-If distribution of executable or object code is made by offering
-access to copy from a designated place, then offering equivalent
-access to copy the source code from the same place counts as
-distribution of the source code, even though third parties are not
-compelled to copy the source along with the object code.
-
-  4. You may not copy, modify, sublicense, or distribute the Program
-except as expressly provided under this License.  Any attempt
-otherwise to copy, modify, sublicense or distribute the Program is
-void, and will automatically terminate your rights under this License.
-However, parties who have received copies, or rights, from you under
-this License will not have their licenses terminated so long as such
-parties remain in full compliance.
-
-  5. You are not required to accept this License, since you have not
-signed it.  However, nothing else grants you permission to modify or
-distribute the Program or its derivative works.  These actions are
-prohibited by law if you do not accept this License.  Therefore, by
-modifying or distributing the Program (or any work based on the
-Program), you indicate your acceptance of this License to do so, and
-all its terms and conditions for copying, distributing or modifying
-the Program or works based on it.
-
-  6. Each time you redistribute the Program (or any work based on the
-Program), the recipient automatically receives a license from the
-original licensor to copy, distribute or modify the Program subject to
-these terms and conditions.  You may not impose any further
-restrictions on the recipients' exercise of the rights granted herein.
-You are not responsible for enforcing compliance by third parties to
-this License.
-
-  7. If, as a consequence of a court judgment or allegation of patent
-infringement or for any other reason (not limited to patent issues),
-conditions are imposed on you (whether by court order, agreement or
-otherwise) that contradict the conditions of this License, they do not
-excuse you from the conditions of this License.  If you cannot
-distribute so as to satisfy simultaneously your obligations under this
-License and any other pertinent obligations, then as a consequence you
-may not distribute the Program at all.  For example, if a patent
-license would not permit royalty-free redistribution of the Program by
-all those who receive copies directly or indirectly through you, then
-the only way you could satisfy both it and this License would be to
-refrain entirely from distribution of the Program.
-
-If any portion of this section is held invalid or unenforceable under
-any particular circumstance, the balance of the section is intended to
-apply and the section as a whole is intended to apply in other
-circumstances.
-
-It is not the purpose of this section to induce you to infringe any
-patents or other property right claims or to contest validity of any
-such claims; this section has the sole purpose of protecting the
-integrity of the free software distribution system, which is
-implemented by public license practices.  Many people have made
-generous contributions to the wide range of software distributed
-through that system in reliance on consistent application of that
-system; it is up to the author/donor to decide if he or she is willing
-to distribute software through any other system and a licensee cannot
-impose that choice.
-
-This section is intended to make thoroughly clear what is believed to
-be a consequence of the rest of this License.
-
-  8. If the distribution and/or use of the Program is restricted in
-certain countries either by patents or by copyrighted interfaces, the
-original copyright holder who places the Program under this License
-may add an explicit geographical distribution limitation excluding
-those countries, so that distribution is permitted only in or among
-countries not thus excluded.  In such case, this License incorporates
-the limitation as if written in the body of this License.
-
-  9. The Free Software Foundation may publish revised and/or new versions
-of the General Public License from time to time.  Such new versions will
-be similar in spirit to the present version, but may differ in detail to
-address new problems or concerns.
-
-Each version is given a distinguishing version number.  If the Program
-specifies a version number of this License which applies to it and "any
-later version", you have the option of following the terms and conditions
-either of that version or of any later version published by the Free
-Software Foundation.  If the Program does not specify a version number of
-this License, you may choose any version ever published by the Free Software
-Foundation.
-
-  10. If you wish to incorporate parts of the Program into other free
-programs whose distribution conditions are different, write to the author
-to ask for permission.  For software which is copyrighted by the Free
-Software Foundation, write to the Free Software Foundation; we sometimes
-make exceptions for this.  Our decision will be guided by the two goals
-of preserving the free status of all derivatives of our free software and
-of promoting the sharing and reuse of software generally.
-
-			    NO WARRANTY
-
-  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY
-FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN
-OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES
-PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED
-OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
-MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS
-TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE
-PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,
-REPAIR OR CORRECTION.
-
-  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
-WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR
-REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,
-INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING
-OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED
-TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY
-YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER
-PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE
-POSSIBILITY OF SUCH DAMAGES.
-
-		     END OF TERMS AND CONDITIONS
-
-	    How to Apply These Terms to Your New Programs
-
-  If you develop a new program, and you want it to be of the greatest
-possible use to the public, the best way to achieve this is to make it
-free software which everyone can redistribute and change under these terms.
-
-  To do so, attach the following notices to the program.  It is safest
-to attach them to the start of each source file to most effectively
-convey the exclusion of warranty; and each file should have at least
-the "copyright" line and a pointer to where the full notice is found.
-
-    <one line to give the program's name and a brief idea of what it does.>
-    Copyright (C) <year>  <name of author>
-
-    This program is free software; you can redistribute it and/or modify
-    it under the terms of the GNU General Public License as published by
-    the Free Software Foundation; either version 2 of the License, or
-    (at your option) any later version.
-
-    This program is distributed in the hope that it will be useful,
-    but WITHOUT ANY WARRANTY; without even the implied warranty of
-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-    GNU General Public License for more details.
-
-    You should have received a copy of the GNU General Public License
-    along with this program; if not, write to the Free Software
-    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-
-
-Also add information on how to contact you by electronic and paper mail.
-
-If the program is interactive, make it output a short notice like this
-when it starts in an interactive mode:
-
-    Gnomovision version 69, Copyright (C) year name of author
-    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
-    This is free software, and you are welcome to redistribute it
-    under certain conditions; type `show c' for details.
-
-The hypothetical commands `show w' and `show c' should show the appropriate
-parts of the General Public License.  Of course, the commands you use may
-be called something other than `show w' and `show c'; they could even be
-mouse-clicks or menu items--whatever suits your program.
-
-You should also get your employer (if you work as a programmer) or your
-school, if any, to sign a "copyright disclaimer" for the program, if
-necessary.  Here is a sample; alter the names:
-
-  Yoyodyne, Inc., hereby disclaims all copyright interest in the program
-  `Gnomovision' (which makes passes at compilers) written by James Hacker.
-
-  <signature of Ty Coon>, 1 April 1989
-  Ty Coon, President of Vice
-
-This General Public License does not permit incorporating your program into
-proprietary programs.  If your program is a subroutine library, you may
-consider it more useful to permit linking proprietary applications with the
-library.  If this is what you want to do, use the GNU Library General
-Public License instead of this License.

Deleted: trunk/fpm/Makefile
===================================================================
--- trunk/fpm/Makefile	2008-03-19 15:40:35 UTC (rev 108)
+++ trunk/fpm/Makefile	2008-03-20 00:13:08 UTC (rev 109)
@@ -1,149 +0,0 @@
-#
-# Fixed Point Math Macro Library - Makefile
-#
-# (C)opyright 2005,2006 by Ivo van Poorten
-# Licensed under version 2 of the GPL
-#
-# $Id$
-#
-
-include config.mak
-
-GENLUTOBJS		= genlut.o
-BENCHOBJS		= benchmark.o
-BENCHLUTOBJS	= benchmarklut.o
-PRECOBJS		= precision.o
-PRECLUTOBJS		= precisionlut.o
-
-GENERATEDFILES	= config.mak include/fixedpointmathlut.h
-
-.PHONY:	all
-all:				$(GENERATEDFILES)
-
-#This file is generated
-include/fixedpointmathlut.h:	genlut
-	./genlut 2>/dev/null | $(INDENT) 1>include/fixedpointmathlut.h
-
-genlut:				$(GENLUTOBJS)
-	$(LD) -o $@ $(GENLUTOBJS) $(LDFLAGS)
-
-benchmark:			$(GENERATEDFILES) $(BENCHOBJS)
-	$(LD) -o $@ $(BENCHOBJS) $(LDFLAGS)
-
-benchmarklut:		$(GENERATEDFILES) $(BENCHLUTOBJS)
-	$(LD) -o $@ $(BENCHLUTOBJS) $(LDFLAGS)
-
-precision:			$(GENERATEDFILES) $(PRECOBJS)
-	$(LD) -o $@ $(PRECOBJS) $(LDFLAGS)
-
-precisionlut:		$(GENERATEDFILES) $(PRECLUTOBJS)
-	$(LD) -o $@ $(PRECLUTOBJS) $(LDFLAGS)
-
-.PHONY:	benchmarks
-benchmarks:			benchmark benchmarklut
-
-.PHONY: precisions
-precisions:			precision precisionlut
-
-benchmarklut.c:		benchmark.c
-	echo "#define __FPM_ENABLE_ALL_LUT__" 1> benchmarklut.c
-	cat benchmark.c 1>> benchmarklut.c
-
-precisionlut.c:		precision.c
-	echo "#define __FPM_ENABLE_ALL_LUT__" 1> precisionlut.c
-	cat precision.c 1>> precisionlut.c
-
-.PHONY:	barcharts
-barcharts:			benchmark.dat benchmarklut.dat
-	mkdir -p barcharts
-	sh ./genbarcharts.sh benchmark.dat    barcharts algo
-	sh ./genbarcharts.sh benchmarklut.dat barcharts lut
-
-benchmark.dat:		benchmark
-	./benchmark		1> benchmark.dat 2>/dev/null
-
-benchmarklut.dat:	benchmarklut
-	./benchmarklut	1> benchmarklut.dat 2>/dev/null
-
-graphs:				precision precisionlut
-	mkdir -p graphs
-	sh ./gengraphs.sh graphs
-
-config.mak:			configure
-	@echo
-	@echo "#############################"
-	@echo "Please run ./configure first!"
-	@echo "#############################"
-	@echo
-	@echo "If you have done so before, you have to do it again, because it"
-	@echo "has changed."
-	@echo
-	@exit 1
-
-ifneq ($(GENLUTOBJS),)
--include $(patsubst %,deps/%,$(GENLUTOBJS:.o=.d))
-endif
-
-ifneq ($(BENCHOBJS),)
--include $(patsubst %,deps/%,$(BENCHOBJS:.o=.d))
-endif
-
-ifneq ($(BENCHLUTOBJS),)
--include $(patsubst %,deps/%,$(BENCHLUTOBJS:.o=.d))
-endif
-
-ifneq ($(PRECOBJS),)
--include $(patsubst %,deps/%,$(PRECOBJS:.o=.d))
-endif
-
-ifneq ($(PRECLUTOBJS),)
--include $(patsubst %,deps/%,$(PRECLUTOBJS:.o=.d))
-endif
-
-%.o:	%.c
-	$(CC) -c $(CFLAGS) $(INCLUDES) $*.c -o $*.o $(DEBUG) $(WARNINGS)
-	mkdir -p deps
-	$(CCFORDEPS) $(CFLAGS) $(INCLUDES) $*.c 1>deps/$*.d
-
-.PHONY:	clean
-clean:
-	$(MAKE) -C docs/xml clean
-	$(MAKE) -C include clean
-	$(MAKE) -C tools clean
-	rm -f *.o benchmark genlut
-	rm -f benchmark.dat benchmarklut benchmarklut.c benchmarklut.dat
-	rm -f precision.dat precision precisionlut precisionlut.c
-	rm -rf deps barcharts graphs
-
-.PHONY:	distclean
-distclean:		clean
-	$(MAKE) -C docs/xml distclean
-	$(MAKE) -C include distclean
-	$(MAKE) -C tools distclean
-	rm -f config.mak config.sh configure.log
-	rm -f *~
-
-.PHONY:	install
-install:		all
-	@echo Installing to $(PREFIX)
-	test -d $(PREFIX)/include || mkdir -p $(PREFIX)/include
-	cp -v include/fixedpointmath*.h $(PREFIX)/include
-	chmod 644 $(PREFIX)/include/fixedpointmath*.h
-
-.PHONY: uninstall
-uninstall:
-	@echo Uninstalling from $(PREFIX)
-	rm -f $(PREFIX)/include/fixedpointmath*.h
-
-.PHONY: docs
-docs:
-	$(MAKE) -C docs/xml
-
-.PHONY: docs2web
-docs2web:	docs
-	@echo
-	cp -af docs/HTML docs/HTML-single ../website/docs
-	@echo
-	@echo "Don't forget to run cvs diff and/or cvs commit in ../website/docs"
-	@echo
-

Deleted: trunk/fpm/README
===================================================================
--- trunk/fpm/README	2008-03-19 15:40:35 UTC (rev 108)
+++ trunk/fpm/README	2008-03-20 00:13:08 UTC (rev 109)
@@ -1,4 +0,0 @@
-$Id$
-
-See http://fpm.berlios.de/index.html
-

Deleted: trunk/fpm/TODO
===================================================================
--- trunk/fpm/TODO	2008-03-19 15:40:35 UTC (rev 108)
+++ trunk/fpm/TODO	2008-03-20 00:13:08 UTC (rev 109)
@@ -1,17 +0,0 @@
-TODO
-====
-
-$Id$
-
-- Regression tests.
-- Removal of conditional statement in sqrt macros (in converge); find a way
-  to change them into 0 or 1 and use multiplication. This should be a huge
-  speed up for the algorithmic versions.
-- Add more functions like (arc)sin, (arc)cos, (arc)tan, et cetera.
-- Inivestigate possibilities to increase speed with SIMD instructions. (might
-  be difficult because a lot of algorithms use 64 bits at times. SSE2 maybe? )
-- Write sample code. Preferably something that does something useful :)
-- Document __FPM_VERSION_RELEASE__  valid values are: alpha, beta, stable and
-  cvs.
-- Add selective LUT support, like only include luts for a specific f.p type
-

Deleted: trunk/fpm/benchmark.c
===================================================================
--- trunk/fpm/benchmark.c	2008-03-19 15:40:35 UTC (rev 108)
+++ trunk/fpm/benchmark.c	2008-03-20 00:13:08 UTC (rev 109)
@@ -1,246 +0,0 @@
-/* ------------------------------------------------------------------------- */
-
-/*
- * Fixed Point Math Macro Library - Benchmark
- *
- * (C)2005,2006 by Ivo van Poorten
- * Licensed under version 2 of the GPL
- *
- * $Id$
- *
- */
-
-/* ------------------------------------------------------------------------- */
-
-#include <stdio.h>
-#include <math.h>
-
-#include "fixedpointmath.h"
-
-#ifndef HAVE_RDTSC
-#include <sys/time.h>
-#include <time.h>
-#endif
-
-/* ------------------------------------------------------------------------- */
-
-/* 10000 and 100000 or something, but lower values while testing scripts,
- * Makefile, etc... */
-
-#define INNERLOOP   10000
-#define OUTERLOOP   1000
-#define VAL1        2.9
-#define VAL2        213
-#define VAL3        3.1
-
-/* ------------------------------------------------------------------------- */
-
-static inline long long rdtsc()
-{
-#ifdef HAVE_RDTSC
-    long long timestamp;
-    asm volatile ("rdtsc\n" : "=A"(timestamp));
-    return timestamp;
-#else
-    struct timeval tv;
-    struct timezone tz;
-
-    gettimeofday(&tv, &tz);
-    
-    return tv.tv_sec*1000000L + tv.tv_usec;
-#endif
-}
-
-/* ------------------------------------------------------------------------- */
-
-#define timeloop(AVG, CODE) \
-    do { \
-        sum = (uint64_t) 0; \
-        for (j=0; j<OUTERLOOP; j++) { \
-            start = rdtsc(); \
-            for (i=0; i<INNERLOOP; i++) { \
-                CODE; \
-            } \
-            end = rdtsc(); \
-            sum += (end-start); \
-        } \
-        AVG = sum / OUTERLOOP; \
-    } while(0)
-
-#define NINEi "%i %i %i %i %i %i %i %i %i\n"
-
-#define printreport(HEADER, a) \
-    do { \
-        printf("#"HEADER"\n"); \
-        num=a*10; \
-        printf(NINEi, num++, 0, 0, 0, 0, 0, 0, 0, 0); \
-        printf(NINEi, num++, 0, prca, 0, 0, 0, 0, 0, 0); \
-        printf(NINEi, num++, 0, 0, prcb, 0, 0, 0, 0, 0); \
-        printf(NINEi, num++, 0, 0, 0, prcc, 0, 0, 0, 0); \
-        printf(NINEi, num++, 0, 0, 0, 0, prcd, 0, 0, 0); \
-        printf(NINEi, num++, 0, 0, 0, 0, 0, prcf, 0, 0); \
-        printf(NINEi, num++, 0, 0, 0, 0, 0, 0, prcg, 0); \
-        printf(NINEi, num++, 0, 0, 0, 0, 0, 0, 0, 0); \
-        printf("\n"); \
-        fflush(stdout); \
-        fprintf(stderr, "#"HEADER"\n"); \
-        fprintf(stderr, "# %-10s - % 4i%%\n", "fp8p8_t", prca); \
-        fprintf(stderr, "# %-10s - % 4i%%\n", "fp24p8_t", prcb); \
-        fprintf(stderr, "# %-10s - % 4i%%\n", "fp16p16_t", prcc); \
-        fprintf(stderr, "# %-10s - % 4i%%\n", "fp8p24_t", prcd); \
-        fprintf(stderr, "# %-10s - % 4i%%\n", "float", prcf); \
-        fprintf(stderr, "# %-10s - % 4i%%\n\n", "double", prcg); \
-        fflush(stderr); \
-    } while(0)
-
-#define calcperc(PRC, AVG, AVGR) \
-    do { \
-        PRC = (AVG*100)/(AVGR?AVGR:1); \
-    } while(0)
-
-#define calcallperc \
-    do { \
-        calcperc(prca, avga, avgf); \
-        calcperc(prcb, avgb, avgf); \
-        calcperc(prcc, avgc, avgf); \
-        calcperc(prcd, avgd, avgf); \
-        calcperc(prcf, avgf, avgf); \
-        calcperc(prcg, avgg, avgf); \
-    } while(0)
-
-/* ------------------------------------------------------------------------- */
-
-/* There's a foobar timeloop between the fp8p8 add/sub test and fp24p8 test,
- * because somehow (can anybody explain?) one needs to "kick" the CPU out of
- * 16-bit short int mode */
-
-int main()
-{
-    unsigned int i, j, num;
-    ufp8p8_t   a1, a2, a3, a4;
-    ufp24p8_t  b1, b2, b3, b4;
-    ufp16p16_t c1, c2, c3, c4;
-    ufp8p24_t  d1, d2, d3, d4;
-    float      f1, f2, f3, f4;
-    double     g1, g2, g3, g4;
-    uint64_t   start, end, sum;
-    uint64_t   avga, avgb, avgc, avgd, avgf, avgg;
-    int        prca, prcb, prcc, prcd, prcf, prcg;
-    int        foo, bar;
-
-    a2 = dtoufp8p8(VAL1);
-    b2 = dtoufp24p8(VAL1);
-    c2 = dtoufp16p16(VAL1);
-    d2 = dtoufp8p24(VAL1);
-    f2 = VAL1;
-    g2 = VAL1;
-
-    a3 = dtoufp8p8(VAL2);
-    b3 = dtoufp24p8(VAL2);
-    c3 = dtoufp16p16(VAL2);
-    d3 = dtoufp8p24(VAL2);
-    f3 = VAL2;
-    g3 = VAL2;
-
-    a4 = dtoufp8p8(VAL3);
-    b4 = dtoufp24p8(VAL3);
-    c4 = dtoufp16p16(VAL3);
-    d4 = dtoufp8p24(VAL3);
-    f4 = VAL3;
-    g4 = VAL3;
-
-    /* ADD */
-
-    timeloop(avga, a1=a2+a3);
-    timeloop(foo, bar=bar);
-    timeloop(avgb, b1=b2+b3);
-    timeloop(avgc, c1=c2+c3);
-    timeloop(avgd, d1=d2+d3);
-    timeloop(avgf, f1=f2+f3);
-    timeloop(avgg, g1=g2+g3);
-    calcallperc;
-    printreport("ADD", 0);
-
-    /* SUB */
-
-    timeloop(avga, a1=a2-a3);
-    timeloop(foo, bar=bar);
-    timeloop(avgb, b1=b2-b3);
-    timeloop(avgc, c1=c2-c3);
-    timeloop(avgd, d1=d2-d3);
-    timeloop(avgf, f1=f2-f3);
-    timeloop(avgg, g1=g2-g3);
-    calcallperc;
-    printreport("SUB", 1);
-
-    /* MUL */
-
-    timeloop(avga, a1=mulufp8p8(a2,a3)  );
-    timeloop(avgb, b1=mulufp24p8(b2,b3) );
-    timeloop(avgc, c1=mulufp16p16(c2,c3));
-    timeloop(avgd, d1=mulufp8p24(d2,d3) );
-    timeloop(avgf, f1=f2*f3);
-    timeloop(avgg, g1=g2*g3);
-    calcallperc;
-    printreport("MUL", 2);
-
-    /* DIV */
-
-    timeloop(avga, a1=divufp8p8(a2,a3)  );
-    timeloop(avgb, b1=divufp24p8(b2,b3) );
-    timeloop(avgc, c1=divufp16p16(c2,c3));
-    timeloop(avgd, d1=divufp8p24(d2,d3) );
-    timeloop(avgf, f1=f2/f3);
-    timeloop(avgg, g1=g2/g3);
-    calcallperc;
-    printreport("DIV", 3);
-
-    /* SQRT */
-
-    timeloop(avga, a1=sqrtufp8p8(a2)  );
-    timeloop(avgb, b1=sqrtufp24p8(b2) );
-    timeloop(avgc, c1=sqrtufp16p16(c2));
-    timeloop(avgd, d1=sqrtufp8p24(d2) );
-    timeloop(avgf, f1=sqrt(f2));
-    timeloop(avgg, g1=sqrt(g2));
-    calcallperc;
-    printreport("SQRT", 4);
-
-    /* EXP */
-
-    timeloop(avga, a1=expufp8p8(a2)  );
-    timeloop(avgb, b1=expufp24p8(b2) );
-    timeloop(avgc, c1=expufp16p16(c2));
-    timeloop(avgd, d1=expufp8p24(d2) );
-    timeloop(avgf, f1=exp(f2));
-    timeloop(avgg, g1=exp(g2));
-    calcallperc;
-    printreport("EXP", 5);
-
-    /* LN */
-
-    timeloop(avga, a1=lnufp8p8(a3)  );
-    timeloop(avgb, b1=lnufp24p8(b3) );
-    timeloop(avgc, c1=lnufp16p16(c3));
-    timeloop(avgd, d1=lnufp8p24(d3) );
-    timeloop(avgf, f1=log(f3));
-    timeloop(avgg, g1=log(g3));
-    calcallperc;
-    printreport("LN", 6);
-
-    /* POW */
-
-    timeloop(avga, a1=powufp8p8(a3,a4)  );
-    timeloop(avgb, b1=powufp24p8(b3,b4) );
-    timeloop(avgc, c1=powufp16p16(c3,c4));
-    timeloop(avgd, d1=powufp8p24(d3,d4) );
-    timeloop(avgf, f1=pow(f3,f4));
-    timeloop(avgg, g1=pow(g3,g4));
-    calcallperc;
-    printreport("POW", 7);
-
-    return 0;
-}
-
-/* ------------------------------------------------------------------------- */
-

Deleted: trunk/fpm/configure
===================================================================
--- trunk/fpm/configure	2008-03-19 15:40:35 UTC (rev 108)
+++ trunk/fpm/configure	2008-03-20 00:13:08 UTC (rev 109)
@@ -1,502 +0,0 @@
-#! /bin/sh
-
-#
-# Alternate configure
-# Loosely based on MPlayer's configure
-#
-# (C)opyright 2005,2006 by Ivo van Poorten
-# Licensed under version 2 of the GPL
-#
-# $Id$
-#
-
-rm -f config.mak
-
-TMPC="configure-test-file.c"
-TMPO="configure-test-file.o"
-TMPLOG="configure.log"
-
-rm -f $TMPLOG
-
-_debug=
-_cc=gcc
-_ccfordeps="$_cc -MM"
-_ldd=ldd
-_prefix=/usr/local
-_cflags="-O4"
-_warnings=
-_ldflags=-lm
-_inc_extra=
-_ld_extra=
-_make=
-_indent=indent
-_makedepend=makedepend
-_gnuplot=gnuplot
-_awk=
-_fig2dev=fig2dev
-_fig2dev_png=
-_inttypes=
-_stdint=
-_round=
-_types=
-
-
-# check environment
-
-if test "$CC" != "" ; then
-    _cc=$CC
-    _ccfordeps="$_cc -MM"
-fi
-if test "$CFLAGS" != "" ; then
-    echo "Warning: Overriding CFLAGS with environment variable ($CFLAGS)"
-    echo "If that's not what you want, run CFLAGS= ./configure"
-    _cflags=$CFLAGS
-    echo
-fi
-
-# Functions
-
-case `echo -n` in
-    -n)     _echo_n=        _echo_c='\c'    ;; # SysV echo
-    *)      _echo_n='-n '   _echo_c=        ;; # BSD echo
-esac
-
-echocheck() {
-    echo "============ Checking for $@ ============" >> "$TMPLOG"
-    echo ${_echo_n} "Checking for $@ ... ${_echo_c}"
-}
-
-echores() {
-    echo "Result is: $@" >> "$TMPLOG"
-    echo "##########################################" >> "$TMPLOG"
-    echo "" >> "$TMPLOG"
-    echo "$@"
-}
-
-cc_check() {
-    echo "" >> "$TMPLOG"
-    cat "$TMPC" >> "$TMPLOG"
-    echo "" >> "$TMPLOG"
-    echo "$_cc $CFLAGS $_inc_extra $_ld_extra $TMPC -o $TMPO $@" >> "$TMPLOG"
-    rm -f "$TMPO"
-    ( $_cc $CFLAGS $_inc_extra $_ld_extra "$TMPC" -o "$TMPO" "$@" ) >> "$TMPLOG" 2>&1
-    TMP="$?"
-    echo >> "$TMPLOG"
-    echo "ldd $TMPO" >> "$TMPLOG"
-    ( $_ldd "$TMPO" ) >> "$TMPLOG" 2>&1
-    echo >> "$TMPLOG"
-    return "$TMP"
-}
-
-die () {
-    echo
-    echo "Error: $@" >&2
-    echo >&2
-    rm -f "$TMPO" "$TMPC"
-    echo "Check \"$TMPLOG\" if you do not understand why it failed."
-    echo
-    exit 1
-}
-
-# Parse commandline
-
-for parm in "$@"; do
-    if test "$parm" = "--help" || test "$parm" = "-help" || test "$parm" = "-h" ; then
-        cat << EOF
-
-Usage $0 [options] ...
-
-Configuration:
-  -h, --help                display this help and exit
-
-Installation directories:
-  --prefix=DIR              use this prefix for installation [/usr/local]
-
-Miscellaneous options:
-  --cc=COMPILER             use this C compiler to build [gcc]
-  --with-extraincdir=DIR    extra headers
-  --with-extralibdir=DIR    extra library files
-
-Advanced options:
-  --enable-debug            enable debug symbols [disabled]
-  --enable-warnings         enable all compiler warnings [disabled]
-
-  --with-make=              use a custom make program
-  --with-indent=            use a custom indent program
-  --with-makedepend=        use a custom makedepend program (if needed)
-  --with-gnuplot=           use a custom gnuplot program (if needed)
-  --with-awk=               use a custom awk program (if needed)
-  --with-fig2dev=           use a custom fig2dev program (if needed)
-
-EOF
-        exit 0
-    fi
-done
-
-for ac_option do
-    case "$ac_option" in
-    --prefix=*)
-        _prefix=`echo $ac_option | cut -d '=' -f 2`
-        ;;
-    --cc=*)
-        _cc=`echo $ac_option | cut -d '=' -f 2`
-        ;;
-    --with-extraincdir=*)
-        _inc_extra=-I`echo $ac_option | cut -d '=' -f 2 | sed 's,:, -I,g'`
-        ;;
-    --with-extralibdir=*)
-        _ld_extra=-L`echo $ac_option | cut -d '=' -f 2 | sed 's,:, -L,g'`
-        ;;
-    --disable-debug)
-        _debug=""
-        ;;
-    --enable-debug)
-        _debug="-g"
-        _cflags=""
-        ;;
-    --disable-warnings)
-        _warnings=""
-        ;;
-    --enable-warnings)
-        _warnings="-Wall"
-        ;;
-    --with-make=*)
-        _make=`echo $ac_option | cut -d '=' -f 2`
-        ;;
-    --with-indent=*)
-        _indent=`echo $ac_option | cut -d '=' -f 2`
-        ;;
-    --with-makedepend=*)
-        _makedepend=`echo $ac_option | cut -d '=' -f 2`
-        ;;
-    --with-gnuplot=*)
-        _gnuplot=`echo $ac_option | cut -d '=' -f 2`
-        ;;
-    --with-awk=*)
-        _awk=`echo $ac_option | cut -d '=' -f 2`
-        ;;
-    --with-fig2dev=*)
-        _fig2dev=`echo $ac_option | cut -d '=' -f 2`
-        ;;
-    *)
-        echo "unknown option: $ac_option"
-        exit 1
-        ;;
-    esac
-done
-
-
-# Do tests...
-
-
-
-echocheck "architecture"
-cputype=`uname -p 2>&1`
-if test "$cputype" = "unknown" ; then
-    cputype=`uname -m 2>&1`
-fi
-echores "$cputype"
-
-
-
-echocheck "C compiler"
-cc_run=`( $_cc ) 2>&1`
-if test "$?" -gt 1; then
-    echores "no"
-    die "Can't find compiler"
-fi
-case "$cputype" in
-    i386|i486)
-        _rdtsc=
-        ;;
-    *)
-        _rdtsc=-DHAVE_RDTSC
-        ;;
-esac
-echores "$_cc"
-
-
-
-echocheck "GNU Make"
-if test "$_make" = "" ; then
-    for _maket in make gmake nogmakepresent; do
-        _tmp=`$_maket --version 2>>"$TMPLOG" | head -n 1 | cut -d ' ' -f 1`
-        if test "$?" -eq 0 ; then
-            if test "$_tmp" = "GNU" ; then
-                echores "yes, using $_maket"
-                break;
-            fi
-        fi
-    done
-    _make=$_maket
-    if test "$_make" = "nogmakepresent" ; then
-        echores "no"
-        die "You need GNU Make to build. If you are sure your version of make
-is compatible, you may want to specify --with-make= on the command line"
-    fi
-else
-    echores "using $_make (command line override)"
-fi
-
-
-
-echocheck "extra headers"
-if test "$_inc_extra" ; then
-    echores "$_inc_extra"
-else
-    echores "no"
-fi
-
-
-
-echocheck "extra libraries"
-if test "$_ld_extra" ; then
-    echores "$_ld_extra"
-else
-    echores "no"
-fi
-
-
-
-echocheck "round()"
-cat > $TMPC <<EOF
-#include <math.h>
-int main(void) { double d=1.23; d=round(d); return 0; }
-EOF
-cc_check -lm && _round=yes
-if test "$_round" = yes ; then
-    echores "yes"
-    _round="-DHAVE_ROUND"
-else
-    echores "no"
-    _round=""
-fi
-
-
-
-echocheck "inttypes.h"
-cat > $TMPC << EOF
-#include <inttypes.h>
-int main(void) { return 0; }
-EOF
-cc_check && _inttypes=yes
-if test "$_inttypes" = yes ; then
-    echores "yes"
-    _inttypes="-DHAVE_INTTYPES_H"
-else
-    echores "no"
-    _inttypes=""
-    echocheck "stdint.h"
-    cat > $TMPC << EOF
-#include <stdint.h>
-int main(void) { return 0; }
-EOF
-    cc_check && _stdint=yes
-    if test "$_stdint" = yes ; then
-        echores "yes"
-        _stdint="-DHAVE_STDINT_H"
-    else
-        echores "no"
-        _stdint=""
-        echocheck "types.h"
-        cat > $TMPC << EOF
-#include <sys/types.h>
-int main(void) { return 0; }
-EOF
-        cc_check && _types=yes
-        if test "$_types" = yes ; then
-            echores "yes"
-            _types="-DHAVE_TYPES_H"
-        else
-            echores "no"
-            _types=""
-        fi
-    fi
-fi
-
-
-
-echocheck "indent"
-(echo "$_indent" | $_indent) >> "$TMPLOG" 2>&1
-_tmp=`(echo "indent" | $_indent) 2>&1`
-if test "$_tmp" = "indent" ; then
-    echores "yes, $_indent"
-else
-    echores "no, using cat instead"
-    _indent=cat
-fi
-
-
-
-echocheck "$_cc support of -MM option"
-cat > $TMPC << EOF
-int main(void) { return 0; }
-EOF
-$_cc -MM $TMPC >> $TMPLOG 2>&1
-if test "$?" -gt 0; then
-    echores "no"
-    _ccfordeps=""
-else
-    echores "yes"
-    _ccfordeps="$_cc -MM"
-fi
-
-
-
-if test "$_ccfordeps" = ""; then
-    echocheck "makedepend"
-    cat > $TMPC << EOF
-int main(void) { return 0; }
-EOF
-    $_makedepend -f- $TMPC >> $TMPLOG 2>&1
-    if test "$?" -gt 0; then
-        echores "no"
-        die "If you compiler doensn't understand -MM, makedepend is needed."
-    else
-        echores "yes, $_makedepend"
-        _ccfordeps="$_makedepend -f-"
-    fi
-fi
-
-
-
-echocheck "gnuplot"
-(echo "set terminal fig; plot x;" | $_gnuplot) 2>> "$TMPLOG" 1>/dev/null
-if test "$?" -gt 0 ; then
-    echores "no"
-    _gnuplot=""
-    _nobarcharts="yes"
-else
-    echores "yes, $_gnuplot"
-fi
-
-
-
-echocheck "awk"
-for _awkt in $_awk mawk gawk nawk awk noawkpresent; do
-    ( $_awkt 'BEGIN{testme();}function testme(){print "";}' ) >> "$TMPLOG" 2>&1
-    if test "$?" -eq 0 ; then
-        echores "yes, $_awkt"
-        break
-    fi
-done
-_awk=$_awkt
-if test "$_awk" = "noawkpresent"; then
-    echores "no"
-    _awk=""
-    _nobarcharts="yes"
-fi
-
-
-
-echocheck "fig2dev"
-($_fig2dev -h) 2>> "$TMPLOG" 1>/dev/null
-if test "$?" -gt 0 ; then
-    echores "no"
-    _fig2dev=""
-    _nobarcharts="yes"
-else
-    echores "yes, $_fig2dev"
-fi
-
-
-
-if test "$_fig2dev" != "" ; then
-    echocheck "$_fig2dev support of PNG output"
-    _fig2dev_png=`($_fig2dev -h | grep png) 2>>"$TMPLOG"`
-    if test "$_fig2dev_png" = "" ; then
-        echores "no"
-        _fig2dev_png=no
-    else
-        echores "yes"
-        _fig2dev_png=yes
-    fi
-fi
-
-
-
-# Write report
-
-echo
-if test "$_debug" = ""; then
-    echo "Debug symbols disabled."
-else
-    echo "Debug symbols enabled."
-fi
-if test "$_warnings" = ""; then
-    echo "All compiler warnings disabled."
-else
-    echo "All compiler warnings enabled."
-fi
-
-if test "$_nobarcharts" = "yes"; then
-    echo ${_echo_n} "No benchmark barcharts support because the ${_echo_c}"
-    echo "following programs were not found:"
-    echo ${_echo_n} "    ${_echo_c}"
-    if test "$_gnuplot" = ""; then
-        echo ${_echo_n} "gnuplot ${_echo_c}"
-    fi
-    if test "$_awk" = ""; then
-        echo ${_echo_n} "awk ${_echo_c}"
-    fi
-    if test "$_fig2dev" = ""; then
-        echo ${_echo_n} "fig2dev ${_echo_c}"
-    fi
-    echo
-fi
-
-
-
-# Cleaning up source tree
-
-echo
-echo ${_echo_n} "Cleaning up source tree ... ${_echo_c}"
-> config.mak
-$_make clean >> $TMPLOG 2>&1
-echores "done"
-
-
-# Assemble _cflags and _ldflags
-
-_cflags="$_cflags"
-_ldflags="$_ldflags $_ld_extra"
-
-# Generate config.mak
-
-echo
-echo ${_echo_n} "Generating config.mak ... ${_echo_c}"
-cat > config.mak << EOF
-CC=$_cc
-CFLAGS=$_cflags $_inttypes $_stdint $_round $_rdtsc $_types
-INCLUDES=-I./include $_inc_extra
-CCFORDEPS=$_ccfordeps
-LD=$_cc
-LDFLAGS=$_ldflags
-INDENT=$_indent
-DEBUG=$_debug
-WARNINGS=$_warnings
-MAKE=$_make
-PREFIX=$_prefix
-EOF
-
-echo "done."
-
-# Generate config.sh for shellscripts (like genbarcharts.sh)
-
-echo ${_echo_n} "Generating config.sh ... ${_echo_c}"
-cat > config.sh << EOF
-_gnuplot=$_gnuplot
-_awk=$_awk
-_fig2dev=$_fig2dev
-_fig2dev_png=$_fig2dev_png
-EOF
-
-echo "done."
-echo
-echo "Now type '$_make' to build."
-echo
-
-# Clean up
-
-rm -f "$TMPC" "$TMPO"
-

Deleted: trunk/fpm/genbarcharts.sh
===================================================================
--- trunk/fpm/genbarcharts.sh	2008-03-19 15:40:35 UTC (rev 108)
+++ trunk/fpm/genbarcharts.sh	2008-03-20 00:13:08 UTC (rev 109)
@@ -1,68 +0,0 @@
-#!/bin/sh
-
-# $Id$
-
-# Script to generate barcharts from benchmark output
-# (C)opyright 2005,2006 by Ivo van Poorten
-# Licensed under version 2 of the GPL
-
-# awk trick inspired by:
-# http://www.togaware.com/datamining/gdatamine/barchart
-
-# Read config
-
-. ./config.sh
-
-# Test if all tools were available
-
-testavail() {
-    if test "$1" = "" ; then
-        echo "Can't create barcharts. $2 is not available on your system."
-        exit 0
-    fi
-}
-
-testavail "$_gnuplot" "gnuplot"
-testavail "$_awk" "awk"
-testavail "$_fig2dev" "fig2dev"
-
-if test "$_fig2dev_png" = "no" ; then
-    echo "Can't generate barcharts. Your $_fig2dev doesn't have PNG support."
-    exit 0
-fi
-
-# check command line
-
-if test "$#" != "3" ; then
-    echo "usage: $0 <datafile> <outputdirectory> <prefix-to-filenames>"
-    exit -1
-fi
-
-# generate all barcharts
-
-xleft=0
-xright=7
-
-for i in add sub mul div sqrt exp ln pow
-do
-
-( cat << __EOF__
-set nokey
-set xrange [$xleft:$xright]
-set yrange [0:150]
-set data style boxes
-set grid
-set noborder
-
-set terminal fig color
-
-plot "$1" using 1:2, "$1" using 1:3, "$1" using 1:4, "$1" using 1:5, "$1" using 1:6, "$1" using 1:7, "$1" using 1:8, "$1" using 1:9
-
-__EOF__
-) | $_gnuplot | $_awk 'BEGIN {} /10 0 -1     0.000 0 0 0 0 0 5/{$9=20} {print}' | $_fig2dev -L png -m 1 > $2/$3\_benchmark_$i.png
-
-xleft=`expr $xleft + 10`
-xright=`expr $xright + 10`
-
-done
-

Deleted: trunk/fpm/gengraphs.sh
===================================================================
--- trunk/fpm/gengraphs.sh	2008-03-19 15:40:35 UTC (rev 108)
+++ trunk/fpm/gengraphs.sh	2008-03-20 00:13:08 UTC (rev 109)
@@ -1,169 +0,0 @@
-#!/bin/sh
-
-# $Id$
-
-# Script to generate graphs from precision output
-# (C)opyright 2005,2006 by Ivo van Poorten
-# Licensed under version 2 of the GPL
-
-# generic function
-
-# xrange yrange outfile
-
-gengraph() {
-    echo "Generating $3.png"
-( cat << __EOF__
-set nokey
-set xrange [$1]
-set yrange [$2]
-set data style lines
-set grid
-set border
-
-set terminal fig color
-
-plot "precision.dat" using 1:2, "precision.dat" using 1:3
-
-__EOF__
-) | $_gnuplot | $_fig2dev -L png -m 0.85 > $3.png
-}
-
-# Read config
-
-. ./config.sh
-
-# Test if all tools were available
-
-testavail() {
-    if test "$1" = "" ; then
-        echo "Can't create graphs. $2 is not available on your system."
-        exit 0
-    fi
-}
-
-testavail "$_gnuplot" "gnuplot"
-testavail "$_fig2dev" "fig2dev"
-
-if test "$_fig2dev_png" = "no" ; then
-    echo "Can't generate barcharts. Your $_fig2dev doesn't have PNG support."
-    exit 0
-fi
-
-# check command line
-
-if [ "$#" != "1" ]; then
-    echo "usage: $0 <output-directory>"
-    exit -1
-fi
-
-# generate all graphs + index.html
-
-( cat << __EOF__
-<HTML>
-<HEAD></HEAD>
-<BODY BGCOLOR="#f0f0f0">
-__EOF__
-) > $1/index.html
-
-overview(){
-    case $1 in
-    sqrt)
-        echo 0:256 0:16
-        ;;
-    exp)
-        echo 0:5.5 0:256
-        ;;
-    ln)
-        echo 1:256 0:6
-        ;;
-    pow)
-        echo 1:16 0:256
-        ;;
-    esac
-}
-
-zoom1() {
-    case $1 in
-    sqrt)
-        echo 0:4 0:2
-        ;;
-    exp)
-        echo 0:3 0:16
-        ;;
-    ln)
-        echo 1:5 0:2
-        ;;
-    pow)
-        echo 1:2 0:4
-        ;;
-    esac
-}
-
-zoom2() {
-    case $1 in
-    sqrt)
-        echo 112:144 10.25:12.25
-        ;;
-    exp)
-        echo 4:5 50:150
-        ;;
-    ln)
-        echo 3:4 1:1.5
-        ;;
-    pow)
-        echo 8:12 50:150
-        ;;
-    esac
-}
-
-for func in sqrt exp ln pow
-do
-
-    for fptype in ufp8p8 ufp24p8 ufp16p16 ufp8p24
-    do
-        echo "Calculating algorithmic data..."
-        ./precision $fptype $func > precision.dat
-
-        outfile=$1/algo_precision_$fptype\_$func
-        gengraph `overview $func` $outfile\_overview
-        gengraph `zoom1 $func` $outfile\_zoom1
-        gengraph `zoom2 $func` $outfile\_zoom2
-
-        echo "Adding lines to index.html..."
-
-        outfile=`basename $outfile`
-        ( cat << __EOF__
-<B> $func - $fptype - algorithmic </B><BR>
-<IMG SRC="${outfile}_overview.png">
-<IMG SRC="${outfile}_zoom1.png">
-<IMG SRC="${outfile}_zoom2.png">
-<BR>
-__EOF__
-) >> $1/index.html
-
-        echo "Calculating LUT data..."
-        ./precisionlut $fptype $func > precision.dat
-
-        outfile=$1/lut_precision_$fptype\_$func
-        gengraph `overview $func` $outfile\_overview
-        gengraph `zoom1 $func` $outfile\_zoom1
-        gengraph `zoom2 $func` $outfile\_zoom2
-
-        echo "Adding lines to index.html..."
-
-        outfile=`basename $outfile`
-        ( cat << __EOF__
-<B> $func - $fptype - lut </B><BR>
-<IMG SRC="${outfile}_overview.png">
-<IMG SRC="${outfile}_zoom1.png">
-<IMG SRC="${outfile}_zoom2.png">
-<P><HR>
-__EOF__
-) >> $1/index.html
-
-
-    done
-done
-
-echo "</BODY>" >> $1/index.html
-

Deleted: trunk/fpm/genlut.c
===================================================================
--- trunk/fpm/genlut.c	2008-03-19 15:40:35 UTC (rev 108)
+++ trunk/fpm/genlut.c	2008-03-20 00:13:08 UTC (rev 109)
@@ -1,290 +0,0 @@
-/* ------------------------------------------------------------------------- */
-
-/*
- * Fixed Point Math Macro Library - Generate Look-Up-Tables
- *
- * (C)opyright 2005,2006 by Ivo van Poorten
- * Licensed under version 2 of the GPL
- *
- * $Id$
- *
- */
-
-/* ------------------------------------------------------------------------- */
-
-#include <math.h>
-#include <stdio.h>
-#ifdef HAVE_INTTYPES_H
-#include <inttypes.h>
-#else
-#ifdef HAVE_STDINT_H
-#include <stdint.h>
-#else
-#ifdef HAVE_TYPES_H
-#include <sys/types.h>
-#else
-typedef unsigned long long uint64_t;
-typedef          long long  int64_t;
-typedef unsigned long      uint32_t;
-typedef          long       int32_t;
-typedef unsigned short     uint16_t;
-typedef          short      int16_t;
-typedef unsigned char      uint8_t;
-typedef          char       int8_t;
-#endif
-#endif
-#endif
-#ifndef HAVE_ROUND
-#define round(x) rint(x)
-#endif
-
-/* ------------------------------------------------------------------------- */
-
-#define outputccode(A, B, C, D, e) \
-    printf("\n/* "A" */\n\n"); \
-    printf("static const "B" "C"[%i] = {\n", e); \
-    for (i=0; i<e-1; i++) { \
-        printf("%uU, ", D[i]); \
-    } \
-    printf("%uU };\n", D[i]);
-
-/* ------------------------------------------------------------------------- */
-
-int main()
-{
-    double round(double d);
-    uint16_t ufp8p8sqrtlut_16[129],   ufp8p8sqrtlut_256[121];
-    uint32_t ufp24p8sqrtlut_16[129],  ufp24p8sqrtlut_256[121],
-             ufp24p8sqrtlut_64k[129], ufp24p8sqrtlut_16m[129];
-    uint32_t ufp16p16sqrtlut_16[129], ufp16p16sqrtlut_256[121],
-             ufp16p16sqrtlut_64k[129];
-    uint32_t ufp8p24sqrtlut_4[129],   ufp8p24sqrtlut_16[129],
-             ufp8p24sqrtlut_256[121];
-
-    uint16_t ufp8p8explut_16[129],   ufp8p8explut_256[121];
-    uint32_t ufp24p8explut_16[129],  ufp24p8explut_256[121],
-             ufp24p8explut_64k[129], ufp24p8explut_16m[129];
-    uint32_t ufp16p16explut_16[129], ufp16p16explut_256[121],
-             ufp16p16explut_64k[129];
-    uint32_t ufp8p24explut_4[129],   ufp8p24explut_16[129],
-             ufp8p24explut_256[121];
-
-    uint16_t ufp8p8lnlut_16[129],   ufp8p8lnlut_256[121];
-    uint32_t ufp24p8lnlut_16[129],  ufp24p8lnlut_256[121],
-             ufp24p8lnlut_64k[129], ufp24p8lnlut_16m[129];
-    uint32_t ufp16p16lnlut_16[129], ufp16p16lnlut_256[121],
-             ufp16p16lnlut_64k[129];
-    uint32_t ufp8p24lnlut_4[129],   ufp8p24lnlut_16[129],
-             ufp8p24lnlut_256[121];
-    int i;
-    double d, e, f;
-
-    for (i=0; i<=128; i++) {
-        d = sqrt(i/32.0);
-        e = exp(i/32.0);
-        f = log(i/32.0);
-        /* sqrt */
-        ufp8p24sqrtlut_4[i] = round(d*65536.0*256.0);
-        /* exp */
-        ufp8p24explut_4[i]  = round(e*65536.0*256.0);
-        /* ln */
-        if (f<0) f = 0.0;
-        ufp8p24lnlut_4[i]   = round(f*65536.0*256.0);
-    }
-
-    for (i=0; i<=128; i++) {
-        d = sqrt(i/8.0);
-        e = exp(i/8.0);
-        f = log(i/8.0);
-        /* sqrt */
-        ufp8p8sqrtlut_16[i]   = round(d*256.0);
-        ufp24p8sqrtlut_16[i]  = round(d*256.0);
-        ufp16p16sqrtlut_16[i] = round(d*65536.0);
-        ufp8p24sqrtlut_16[i]  = round(d*65536.0*256.0);
-        /* exp */
-        if (e>=16777216.0) e = 0.0;
-        ufp24p8explut_16[i]  = round(e*256.0);
-        if (e>=65536.0) e = 0.0;
-        ufp16p16explut_16[i] = round(e*65536.0);
-        if (e>=256.0) e = 256.0;
-        ufp8p24explut_16[i]  = round(e*65536.0*256.0);
-        ufp8p8explut_16[i]   = round(e*256.0);
-        /* ln */
-        if (f<0) f = 0.0;
-        ufp8p8lnlut_16[i]   = round(f*256.0);
-        ufp24p8lnlut_16[i]  = round(f*256.0);
-        ufp16p16lnlut_16[i] = round(f*65536.0);
-        ufp8p24lnlut_16[i]  = round(f*65536.0*256.0);
-    }
-
-    for (i=0; i<=120; i++) {
-        d = sqrt(16.0 + i*2.0);
-        e = exp(16.0 + i*2.0);
-        f = log(16.0 + i*2.0);
-        /* sqrt */
-        ufp8p8sqrtlut_256[i]   = round(d*256.0);
-        ufp24p8sqrtlut_256[i]  = round(d*256.0);
-        ufp16p16sqrtlut_256[i] = round(d*65536.0);
-        ufp8p24sqrtlut_256[i]  = round(d*65536.0*256.0);
-        /* exp */
-        if (e>=16777216.0) e = 0.0;
-        ufp24p8explut_256[i]  = round(e*256.0);
-        if (e>=65536.0) e = 0.0;
-        ufp16p16explut_256[i] = round(e*65536.0);
-        if (e>=256.0) e = 0.0;
-        ufp8p24explut_256[i]  = round(e*65536.0*256.0);
-        ufp8p8explut_256[i]   = round(e*256.0);
-        /* ln */
-        ufp8p8lnlut_256[i]   = round(f*256.0);
-        ufp24p8lnlut_256[i]  = round(f*256.0);
-        ufp16p16lnlut_256[i] = round(f*65536.0);
-        ufp8p24lnlut_256[i]  = round(f*65536.0*256.0);
-    }
-
-    for (i=0; i<=128; i++) {
-        d = sqrt(256.0 + i*2.0*256.0);
-        e = exp(256.0 + i*2.0*256.0);
-        f = log(256.0 + i*2.0*256.0);
-        /* sqrt */
-        ufp24p8sqrtlut_64k[i]   = round(d*256.0);
-        ufp16p16sqrtlut_64k[i]  = round(d*65536.0);
-        /* exp */
-        e = 0.0;
-        ufp24p8explut_64k[i]   = round(e*256.0);
-        ufp16p16explut_64k[i]  = round(e*65536.0);
-        /* ln */
-        ufp24p8lnlut_64k[i]   = round(f*256.0);
-        ufp16p16lnlut_64k[i]  = round(f*65536.0);
-    }
-
-    for (i=0; i<=128; i++) {
-        d = sqrt(65536.0 + i*2.0*65536.0);
-        e = exp(65536.0 + i*2.0*65536.0);
-        f = log(65536.0 + i*2.0*65536.0);
-        /* sqrt */
-        ufp24p8sqrtlut_16m[i] = round(d*256.0);
-        /* exp */
-        e = 0.0;
-        ufp24p8explut_16m[i] = round(e*256.0);
-        /* ln */
-        ufp24p8lnlut_16m[i] = round(f*256.0);
-    }
-
-    printf("/* DO NOT INCLUDE THIS FILE DIRECTLY! ALWAYS ");
-    printf("INCLUDE fixedpointmath.h only!! */\n\n");
-
-    printf("/*\n * Fixed Point Math Macro Library - Look Up Tables\n");
-    printf(" * Licensed under version 2 of the GPL\n */\n\n");
-
-    printf("#ifndef __FIXEDPOINTMATHLUT_H__\n");
-    printf("#define __FIXEDPOINTMATHLUT_H__\n");
-
-    /* sqrt */
-    printf("\n#if defined(__FPM_ENABLE_SQRT_LUT__) || "
-                 "defined(__FPM_ENABLE_ALL_LUT__)\n");
-
-    outputccode("ufp8p8 sqrt 16",  "ufp8p8_t", "_ufp8p8sqrtlut_16",
-                ufp8p8sqrtlut_16, 129);
-    outputccode("ufp8p8 sqrt 256", "ufp8p8_t", "_ufp8p8sqrtlut_256",
-                ufp8p8sqrtlut_256, 121);
-
-    outputccode("ufp24p8 sqrt 16",  "ufp24p8_t", "_ufp24p8sqrtlut_16",
-                ufp24p8sqrtlut_16, 129);
-    outputccode("ufp24p8 sqrt 256", "ufp24p8_t", "_ufp24p8sqrtlut_256",
-                ufp24p8sqrtlut_256, 121);
-    outputccode("ufp24p8 sqrt 64k", "ufp24p8_t", "_ufp24p8sqrtlut_64k",
-                ufp24p8sqrtlut_64k, 129);
-    outputccode("ufp24p8 sqrt 16m", "ufp24p8_t", "_ufp24p8sqrtlut_16m",
-                ufp24p8sqrtlut_16m, 129);
-
-    outputccode("ufp16p16 sqrt 16",  "ufp16p16_t", "_ufp16p16sqrtlut_16",
-                ufp16p16sqrtlut_16, 129);
-    outputccode("ufp16p16 sqrt 256", "ufp16p16_t", "_ufp16p16sqrtlut_256",
-                ufp16p16sqrtlut_256, 121);
-    outputccode("ufp16p16 sqrt 64k", "ufp16p16_t", "_ufp16p16sqrtlut_64k",
-                ufp16p16sqrtlut_64k, 129);
-
-    outputccode("ufp8p24 sqrt 4",  "ufp8p24_t", "_ufp8p24sqrtlut_4",
-                ufp8p24sqrtlut_4, 129);
-    outputccode("ufp8p24 sqrt 16", "ufp8p24_t", "_ufp8p24sqrtlut_16",
-                ufp8p24sqrtlut_16, 129);
-    outputccode("ufp8p24 sqrt 256", "ufp8p24_t", "_ufp8p24sqrtlut_256",
-                ufp8p24sqrtlut_256, 121);
-
-    printf("\n#endif /* SQRT LUT */\n");
-
-    /* exp */
-    printf("\n#if defined(__FPM_ENABLE_EXP_LUT__) || "
-                 "defined(__FPM_ENABLE_ALL_LUT__)\n");
-
-    outputccode("ufp8p8 exp 16",  "ufp8p8_t", "_ufp8p8explut_16",
-                ufp8p8explut_16, 129);
-    outputccode("ufp8p8 exp 256", "ufp8p8_t", "_ufp8p8explut_256",
-                ufp8p8explut_256, 121);
-
-    outputccode("ufp24p8 exp 16",  "ufp24p8_t", "_ufp24p8explut_16",
-                ufp24p8explut_16, 129);
-    outputccode("ufp24p8 exp 256", "ufp24p8_t", "_ufp24p8explut_256",
-                ufp24p8explut_256, 121);
-    outputccode("ufp24p8 exp 64k", "ufp24p8_t", "_ufp24p8explut_64k",
-                ufp24p8explut_64k, 129);
-    outputccode("ufp24p8 exp 16m", "ufp24p8_t", "_ufp24p8explut_16m",
-                ufp24p8explut_16m, 129);
-
-    outputccode("ufp16p16 exp 16",  "ufp16p16_t", "_ufp16p16explut_16",
-                ufp16p16explut_16, 129);
-    outputccode("ufp16p16 exp 256", "ufp16p16_t", "_ufp16p16explut_256",
-                ufp16p16explut_256, 121);
-    outputccode("ufp16p16 exp 64k", "ufp16p16_t", "_ufp16p16explut_64k",
-                ufp16p16explut_64k, 129);
-
-    outputccode("ufp8p24 exp 4",  "ufp8p24_t", "_ufp8p24explut_4",
-                ufp8p24explut_4, 129);
-    outputccode("ufp8p24 exp 16", "ufp8p24_t", "_ufp8p24explut_16",
-                ufp8p24explut_16, 129);
-    outputccode("ufp8p24 exp 256", "ufp8p24_t", "_ufp8p24explut_256",
-                ufp8p24explut_256, 121);
-
-    printf("\n#endif /* EXP LUT */\n");
-
-    /* ln */
-    printf("\n#if defined(__FPM_ENABLE_LN_LUT__) || "
-                 "defined(__FPM_ENABLE_ALL_LUT__)\n");
-
-    outputccode("ufp8p8 ln 16",  "ufp8p8_t", "_ufp8p8lnlut_16",
-                ufp8p8lnlut_16, 129);
-    outputccode("ufp8p8 ln 256", "ufp8p8_t", "_ufp8p8lnlut_256",
-                ufp8p8lnlut_256, 121);
-
-    outputccode("ufp24p8 ln 16",  "ufp24p8_t", "_ufp24p8lnlut_16",
-                ufp24p8lnlut_16, 129);
-    outputccode("ufp24p8 ln 256", "ufp24p8_t", "_ufp24p8lnlut_256",
-                ufp24p8lnlut_256, 121);
-    outputccode("ufp24p8 ln 64k", "ufp24p8_t", "_ufp24p8lnlut_64k",
-                ufp24p8lnlut_64k, 129);
-    outputccode("ufp24p8 ln 16m", "ufp24p8_t", "_ufp24p8lnlut_16m",
-                ufp24p8lnlut_16m, 129);
-
-    outputccode("ufp16p16 ln 16",  "ufp16p16_t", "_ufp16p16lnlut_16",
-                ufp16p16lnlut_16, 129);
-    outputccode("ufp16p16 ln 256", "ufp16p16_t", "_ufp16p16lnlut_256",
-                ufp16p16lnlut_256, 121);
-    outputccode("ufp16p16 ln 64k", "ufp16p16_t", "_ufp16p16lnlut_64k",
-                ufp16p16lnlut_64k, 129);
-
-    outputccode("ufp8p24 ln 4",  "ufp8p24_t", "_ufp8p24lnlut_4",
-                ufp8p24lnlut_4, 129);
-    outputccode("ufp8p24 ln 16", "ufp8p24_t", "_ufp8p24lnlut_16",
-                ufp8p24lnlut_16, 129);
-    outputccode("ufp8p24 ln 256", "ufp8p24_t", "_ufp8p24lnlut_256",
-                ufp8p24lnlut_256, 121);
-
-    printf("\n#endif /* LN LUT */\n");
-
-    printf("\n#endif\n");
-
-    return 0;
-}
-
-/* ------------------------------------------------------------------------- */
-

Copied: trunk/fpm/macro_version/ChangeLog (from rev 108, trunk/fpm/ChangeLog)

Copied: trunk/fpm/macro_version/INSTALL (from rev 108, trunk/fpm/INSTALL)

Copied: trunk/fpm/macro_version/LICENSE (from rev 108, trunk/fpm/LICENSE)

Copied: trunk/fpm/macro_version/Makefile (from rev 108, trunk/fpm/Makefile)

Copied: trunk/fpm/macro_version/README (from rev 108, trunk/fpm/README)

Copied: trunk/fpm/macro_version/TODO (from rev 108, trunk/fpm/TODO)

Copied: trunk/fpm/macro_version/benchmark.c (from rev 108, trunk/fpm/benchmark.c)

Copied: trunk/fpm/macro_version/configure (from rev 108, trunk/fpm/configure)

Copied: trunk/fpm/macro_version/docs (from rev 108, trunk/fpm/docs)

Copied: trunk/fpm/macro_version/genbarcharts.sh (from rev 108, trunk/fpm/genbarcharts.sh)

Copied: trunk/fpm/macro_version/gengraphs.sh (from rev 108, trunk/fpm/gengraphs.sh)

Copied: trunk/fpm/macro_version/genlut.c (from rev 108, trunk/fpm/genlut.c)

Copied: trunk/fpm/macro_version/include (from rev 108, trunk/fpm/include)

Copied: trunk/fpm/macro_version/misc (from rev 108, trunk/fpm/misc)

Copied: trunk/fpm/macro_version/precision.c (from rev 108, trunk/fpm/precision.c)

Copied: trunk/fpm/macro_version/tools (from rev 108, trunk/fpm/tools)

Deleted: trunk/fpm/precision.c
===================================================================
--- trunk/fpm/precision.c	2008-03-19 15:40:35 UTC (rev 108)
+++ trunk/fpm/precision.c	2008-03-20 00:13:08 UTC (rev 109)
@@ -1,171 +0,0 @@
-/* ------------------------------------------------------------------------- */
-
-/*
- * Fixed Point Math Macro Library - Precision
- *
- * (C)2005 by Ivo van Poorten
- * Licensed under version 2 of the GPL
- *
- * $Id$
- *
- */
-
-/* ------------------------------------------------------------------------- */
-
-#include <stdio.h>
-#include <math.h>
-#include <string.h>
-
-#include "fixedpointmath.h"
-
-/* ------------------------------------------------------------------------- */
-
-#define TYPEufp8p8   0
-#define TYPEufp24p8  1
-#define TYPEufp16p16 2
-#define TYPEufp8p24  3
-
-#define FUNCsqrt    0
-#define FUNCexp     1
-#define FUNCln      2
-#define FUNCpow     3
-
-#define PVAL      2.0L
-
-/* ------------------------------------------------------------------------- */
-
-double startat[4] = { 0.0L, 0.0L, 1.0L, 1.0L };
-
-/* ------------------------------------------------------------------------- */
-
-int main(int argc, char **argv)
-{
-    double f, g1 = 0.0L, g2 = 0.0L;
-    int fptype = -1, func = -1;
-
-    if (argc != 3) {
-        fprintf(stderr,"usage: %s <fixed-point-type> <function>\n", argv[0]);
-        return -1;
-    }
-
-    if (!strncmp(argv[1], "ufp8p8",   5))    fptype = TYPEufp8p8;
-    if (!strncmp(argv[1], "ufp24p8",  6))    fptype = TYPEufp24p8;
-    if (!strncmp(argv[1], "ufp16p16", 7))    fptype = TYPEufp16p16;
-    if (!strncmp(argv[1], "ufp8p24",  6))    fptype = TYPEufp8p24;
-
-    if (!strncmp(argv[2], "sqrt", 4))       func = FUNCsqrt;
-    if (!strncmp(argv[2], "exp",  3))       func = FUNCexp;
-    if (!strncmp(argv[2], "ln",   2))       func = FUNCln;
-    if (!strncmp(argv[2], "pow",  3))       func = FUNCpow;
-
-    if (fptype == -1) {
-        fprintf(stderr, "unknown type!\n");
-        return -1;
-    }
-
-    if (func == -1) {
-        fprintf(stderr, "unknown function!\n");
-        return -1;
-    }
-
-    for (f=startat[func]; f<256.0L; f+=0.01L) {
-
-        switch(func) {
-        case FUNCsqrt:
-            g1 = sqrt(f);
-            break;
-        case FUNCexp:
-            g1 = exp(f);
-            break;
-        case FUNCln:
-            g1 = log(f);
-            break;
-        case FUNCpow:
-            g1 = pow(f, PVAL);
-            break;
-        }
-
-        switch(fptype) {
-
-        case TYPEufp8p8:
-            switch(func) {
-            case FUNCsqrt:
-                g2 = ufp8p8tod ( sqrtufp8p8 (dtoufp8p8(f)) );
-                break;
-            case FUNCexp:
-                g2 = ufp8p8tod ( expufp8p8 (dtoufp8p8(f)) );
-                break;
-            case FUNCln:
-                g2 = ufp8p8tod ( lnufp8p8 (dtoufp8p8(f)) );
-                break;
-            case FUNCpow:
-                g2 = ufp8p8tod ( powufp8p8 (dtoufp8p8(f), dtoufp8p8(PVAL)) );
-                break;
-            }
-            break;
-
-        case TYPEufp24p8:
-            switch(func) {
-            case FUNCsqrt:
-                g2 = ufp24p8tod ( sqrtufp24p8 (dtoufp24p8(f)) );
-                break;
-            case FUNCexp:
-                g2 = ufp24p8tod ( expufp24p8 (dtoufp24p8(f)) );
-                break;
-            case FUNCln:
-                g2 = ufp24p8tod ( lnufp24p8 (dtoufp24p8(f)) );
-                break;
-            case FUNCpow:
-                g2 = ufp24p8tod ( powufp24p8 (dtoufp24p8(f),
-                                                        dtoufp24p8(PVAL)) );
-                break;
-            }
-            break;
-
-        case TYPEufp16p16:
-            switch(func) {
-            case FUNCsqrt:
-                g2 = ufp16p16tod ( sqrtufp16p16 (dtoufp16p16(f)) );
-                break;
-            case FUNCexp:
-                g2 = ufp16p16tod ( expufp16p16 (dtoufp16p16(f)) );
-                break;
-            case FUNCln:
-                g2 = ufp16p16tod ( lnufp16p16 (dtoufp16p16(f)) );
-                break;
-            case FUNCpow:
-                g2 = ufp16p16tod ( powufp16p16 (dtoufp16p16(f),
-                                                        dtoufp16p16(PVAL)) );
-                break;
-            }
-            break;
-
-        case TYPEufp8p24:
-            switch(func) {
-            case FUNCsqrt:
-                g2 = ufp8p24tod ( sqrtufp8p24 (dtoufp8p24(f)) );
-                break;
-            case FUNCexp:
-                g2 = ufp8p24tod ( expufp8p24 (dtoufp8p24(f)) );
-                break;
-            case FUNCln:
-                g2 = ufp8p24tod ( lnufp8p24 (dtoufp8p24(f)) );
-                break;
-            case FUNCpow:
-                g2 = ufp8p24tod ( powufp8p24 (dtoufp8p24(f),
-                                                        dtoufp8p24(PVAL)) );
-                break;
-            }
-            break;
-
-        } /* end of outer-switch */
-
-        printf("%0.8lf %0.8lf %0.8lf\n", f, g1, g2);
-
-    }
-
-    return 0;
-}
-
-/* ------------------------------------------------------------------------- */
-



From ivop at mail.berlios.de  Thu Mar 20 01:14:40 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Thu, 20 Mar 2008 01:14:40 +0100
Subject: [fpm-cvslog] r110 - in trunk/fpm: . macro_version
Message-ID: <200803200014.m2K0EeR9020492@sheep.berlios.de>

Author: ivop
Date: 2008-03-20 01:14:39 +0100 (Thu, 20 Mar 2008)
New Revision: 110

Added:
   trunk/fpm/ChangeLog
   trunk/fpm/INSTALL
   trunk/fpm/LICENSE
   trunk/fpm/Makefile
   trunk/fpm/README
   trunk/fpm/TODO
   trunk/fpm/benchmark.c
   trunk/fpm/configure
   trunk/fpm/docs/
   trunk/fpm/genbarcharts.sh
   trunk/fpm/gengraphs.sh
   trunk/fpm/genlut.c
   trunk/fpm/include/
   trunk/fpm/misc/
   trunk/fpm/precision.c
   trunk/fpm/tools/
Removed:
   trunk/fpm/macro_version/ChangeLog
   trunk/fpm/macro_version/INSTALL
   trunk/fpm/macro_version/LICENSE
   trunk/fpm/macro_version/Makefile
   trunk/fpm/macro_version/README
   trunk/fpm/macro_version/TODO
   trunk/fpm/macro_version/benchmark.c
   trunk/fpm/macro_version/configure
   trunk/fpm/macro_version/docs/
   trunk/fpm/macro_version/genbarcharts.sh
   trunk/fpm/macro_version/gengraphs.sh
   trunk/fpm/macro_version/genlut.c
   trunk/fpm/macro_version/include/
   trunk/fpm/macro_version/misc/
   trunk/fpm/macro_version/precision.c
   trunk/fpm/macro_version/tools/
Log:
move back :)


Copied: trunk/fpm/ChangeLog (from rev 109, trunk/fpm/macro_version/ChangeLog)

Copied: trunk/fpm/INSTALL (from rev 109, trunk/fpm/macro_version/INSTALL)

Copied: trunk/fpm/LICENSE (from rev 109, trunk/fpm/macro_version/LICENSE)

Copied: trunk/fpm/Makefile (from rev 109, trunk/fpm/macro_version/Makefile)

Copied: trunk/fpm/README (from rev 109, trunk/fpm/macro_version/README)

Copied: trunk/fpm/TODO (from rev 109, trunk/fpm/macro_version/TODO)

Copied: trunk/fpm/benchmark.c (from rev 109, trunk/fpm/macro_version/benchmark.c)

Copied: trunk/fpm/configure (from rev 109, trunk/fpm/macro_version/configure)

Copied: trunk/fpm/docs (from rev 109, trunk/fpm/macro_version/docs)

Copied: trunk/fpm/genbarcharts.sh (from rev 109, trunk/fpm/macro_version/genbarcharts.sh)

Copied: trunk/fpm/gengraphs.sh (from rev 109, trunk/fpm/macro_version/gengraphs.sh)

Copied: trunk/fpm/genlut.c (from rev 109, trunk/fpm/macro_version/genlut.c)

Copied: trunk/fpm/include (from rev 109, trunk/fpm/macro_version/include)

Deleted: trunk/fpm/macro_version/ChangeLog
===================================================================
--- trunk/fpm/macro_version/ChangeLog	2008-03-20 00:13:08 UTC (rev 109)
+++ trunk/fpm/macro_version/ChangeLog	2008-03-20 00:14:39 UTC (rev 110)
@@ -1,57 +0,0 @@
-ChangeLog
-=========
-
-$Id$
-
-v0.31	[Final macro release before rewrite]
-    - migrated to subversion
-    - fix for systems that don't have round()
-    - huge speed improvement of algorithmic versions of sqrt(). 40-100 times(!)
-      faster, depending on type, by elimination of conditional code
-    - fixed dependencies, miscellaneous freebsd fixes
-    - added detection of inttypes.h and stdint.h (define ourselves if missing)
-    - made luts const
-    - fixed pow macros for x==1
-
-v0.30   [First alpha release]
-
-    - Better Makefile(s)
-    - Fixed exp macro's conditional expressions to always evaluate as true
-    - Added make install/uninstall
-    - Generation of index.html for graphs
-    - Barcharts index.html "tool"
-    - Updated documentation
-
-v0.29   Added lut support for ln, exp and pow (indirectly)
-v0.28   Added precision(lut) and script to generate graphs of the output
-v0.27   First draft of documentation
-v0.26   Setup documentation build system
-v0.25   Moved types to code.h, finished sqrt LUT support (maybe 8fp24 needs
-        one more table, or at least higher resolution for lut256)
-v0.24   All todo's for 0.23 done.
-v0.23   Decent non-autotools configure script added; todo: test for gnuplot,
-        awk and fig2dev and have genbarchart act on that if one of them isn't
-        found. also add --with-indent= etc. options
-v0.22   Benchmark output changed to values and comments only, wrote barchart
-        script to generate PNG files of benchmark output, adjusted makefile
-        to do that
-v0.21   Preliminary sqrt LUT support and split of code and API in two .h
-        files.
-v0.20   Added pow()
-v0.19   After doing some timing tests, the "oh-so-clever" sqrt algorithm
-        turned out to be 10-15 times slower than floating point <g>
-        So, I completely rewrote the sqrt algorithm. It's still 3-11
-        times slower than the FPU, but is it possible to beat hardware
-        fsqrt that has a 14-bit lookup table? (athlon)
-v0.18   Fixed type problem in ftoufpxpx causing false integer overflow
-        compiler warnings.
-v0.17   Added a wrapper around ln() so constants can be passed. If a
-        variable is passed, it's no longer changed itself!
-v0.16   Replaced divs by muls in ln()
-v0.15   Added ln()
-v0.14   Removed silly 16p8 and 8p16 types
-v0.13   Added exp()
-v0.12   Changed sqrt() from nested macros to use a temp var (gcc trouble)
-v0.11   Added sqrt()
-v0.10   Basic types, mul() and div()
-

Deleted: trunk/fpm/macro_version/INSTALL
===================================================================
--- trunk/fpm/macro_version/INSTALL	2008-03-20 00:13:08 UTC (rev 109)
+++ trunk/fpm/macro_version/INSTALL	2008-03-20 00:14:39 UTC (rev 110)
@@ -1,4 +0,0 @@
-$Id$
-
-See http://fpm.berlios.de/index.html
-

Deleted: trunk/fpm/macro_version/LICENSE
===================================================================
--- trunk/fpm/macro_version/LICENSE	2008-03-20 00:13:08 UTC (rev 109)
+++ trunk/fpm/macro_version/LICENSE	2008-03-20 00:14:39 UTC (rev 110)
@@ -1,342 +0,0 @@
-$Id$
-
-		    GNU GENERAL PUBLIC LICENSE
-		       Version 2, June 1991
-
- Copyright (C) 1989, 1991 Free Software Foundation, Inc.
-                       51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
- Everyone is permitted to copy and distribute verbatim copies
- of this license document, but changing it is not allowed.
-
-			    Preamble
-
-  The licenses for most software are designed to take away your
-freedom to share and change it.  By contrast, the GNU General Public
-License is intended to guarantee your freedom to share and change free
-software--to make sure the software is free for all its users.  This
-General Public License applies to most of the Free Software
-Foundation's software and to any other program whose authors commit to
-using it.  (Some other Free Software Foundation software is covered by
-the GNU Library General Public License instead.)  You can apply it to
-your programs, too.
-
-  When we speak of free software, we are referring to freedom, not
-price.  Our General Public Licenses are designed to make sure that you
-have the freedom to distribute copies of free software (and charge for
-this service if you wish), that you receive source code or can get it
-if you want it, that you can change the software or use pieces of it
-in new free programs; and that you know you can do these things.
-
-  To protect your rights, we need to make restrictions that forbid
-anyone to deny you these rights or to ask you to surrender the rights.
-These restrictions translate to certain responsibilities for you if you
-distribute copies of the software, or if you modify it.
-
-  For example, if you distribute copies of such a program, whether
-gratis or for a fee, you must give the recipients all the rights that
-you have.  You must make sure that they, too, receive or can get the
-source code.  And you must show them these terms so they know their
-rights.
-
-  We protect your rights with two steps: (1) copyright the software, and
-(2) offer you this license which gives you legal permission to copy,
-distribute and/or modify the software.
-
-  Also, for each author's protection and ours, we want to make certain
-that everyone understands that there is no warranty for this free
-software.  If the software is modified by someone else and passed on, we
-want its recipients to know that what they have is not the original, so
-that any problems introduced by others will not reflect on the original
-authors' reputations.
-
-  Finally, any free program is threatened constantly by software
-patents.  We wish to avoid the danger that redistributors of a free
-program will individually obtain patent licenses, in effect making the
-program proprietary.  To prevent this, we have made it clear that any
-patent must be licensed for everyone's free use or not licensed at all.
-
-  The precise terms and conditions for copying, distribution and
-modification follow.
-
-		    GNU GENERAL PUBLIC LICENSE
-   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
-
-  0. This License applies to any program or other work which contains
-a notice placed by the copyright holder saying it may be distributed
-under the terms of this General Public License.  The "Program", below,
-refers to any such program or work, and a "work based on the Program"
-means either the Program or any derivative work under copyright law:
-that is to say, a work containing the Program or a portion of it,
-either verbatim or with modifications and/or translated into another
-language.  (Hereinafter, translation is included without limitation in
-the term "modification".)  Each licensee is addressed as "you".
-
-Activities other than copying, distribution and modification are not
-covered by this License; they are outside its scope.  The act of
-running the Program is not restricted, and the output from the Program
-is covered only if its contents constitute a work based on the
-Program (independent of having been made by running the Program).
-Whether that is true depends on what the Program does.
-
-  1. You may copy and distribute verbatim copies of the Program's
-source code as you receive it, in any medium, provided that you
-conspicuously and appropriately publish on each copy an appropriate
-copyright notice and disclaimer of warranty; keep intact all the
-notices that refer to this License and to the absence of any warranty;
-and give any other recipients of the Program a copy of this License
-along with the Program.
-
-You may charge a fee for the physical act of transferring a copy, and
-you may at your option offer warranty protection in exchange for a fee.
-
-  2. You may modify your copy or copies of the Program or any portion
-of it, thus forming a work based on the Program, and copy and
-distribute such modifications or work under the terms of Section 1
-above, provided that you also meet all of these conditions:
-
-    a) You must cause the modified files to carry prominent notices
-    stating that you changed the files and the date of any change.
-
-    b) You must cause any work that you distribute or publish, that in
-    whole or in part contains or is derived from the Program or any
-    part thereof, to be licensed as a whole at no charge to all third
-    parties under the terms of this License.
-
-    c) If the modified program normally reads commands interactively
-    when run, you must cause it, when started running for such
-    interactive use in the most ordinary way, to print or display an
-    announcement including an appropriate copyright notice and a
-    notice that there is no warranty (or else, saying that you provide
-    a warranty) and that users may redistribute the program under
-    these conditions, and telling the user how to view a copy of this
-    License.  (Exception: if the Program itself is interactive but
-    does not normally print such an announcement, your work based on
-    the Program is not required to print an announcement.)
-
-These requirements apply to the modified work as a whole.  If
-identifiable sections of that work are not derived from the Program,
-and can be reasonably considered independent and separate works in
-themselves, then this License, and its terms, do not apply to those
-sections when you distribute them as separate works.  But when you
-distribute the same sections as part of a whole which is a work based
-on the Program, the distribution of the whole must be on the terms of
-this License, whose permissions for other licensees extend to the
-entire whole, and thus to each and every part regardless of who wrote it.
-
-Thus, it is not the intent of this section to claim rights or contest
-your rights to work written entirely by you; rather, the intent is to
-exercise the right to control the distribution of derivative or
-collective works based on the Program.
-
-In addition, mere aggregation of another work not based on the Program
-with the Program (or with a work based on the Program) on a volume of
-a storage or distribution medium does not bring the other work under
-the scope of this License.
-
-  3. You may copy and distribute the Program (or a work based on it,
-under Section 2) in object code or executable form under the terms of
-Sections 1 and 2 above provided that you also do one of the following:
-
-    a) Accompany it with the complete corresponding machine-readable
-    source code, which must be distributed under the terms of Sections
-    1 and 2 above on a medium customarily used for software interchange; or,
-
-    b) Accompany it with a written offer, valid for at least three
-    years, to give any third party, for a charge no more than your
-    cost of physically performing source distribution, a complete
-    machine-readable copy of the corresponding source code, to be
-    distributed under the terms of Sections 1 and 2 above on a medium
-    customarily used for software interchange; or,
-
-    c) Accompany it with the information you received as to the offer
-    to distribute corresponding source code.  (This alternative is
-    allowed only for noncommercial distribution and only if you
-    received the program in object code or executable form with such
-    an offer, in accord with Subsection b above.)
-
-The source code for a work means the preferred form of the work for
-making modifications to it.  For an executable work, complete source
-code means all the source code for all modules it contains, plus any
-associated interface definition files, plus the scripts used to
-control compilation and installation of the executable.  However, as a
-special exception, the source code distributed need not include
-anything that is normally distributed (in either source or binary
-form) with the major components (compiler, kernel, and so on) of the
-operating system on which the executable runs, unless that component
-itself accompanies the executable.
-
-If distribution of executable or object code is made by offering
-access to copy from a designated place, then offering equivalent
-access to copy the source code from the same place counts as
-distribution of the source code, even though third parties are not
-compelled to copy the source along with the object code.
-
-  4. You may not copy, modify, sublicense, or distribute the Program
-except as expressly provided under this License.  Any attempt
-otherwise to copy, modify, sublicense or distribute the Program is
-void, and will automatically terminate your rights under this License.
-However, parties who have received copies, or rights, from you under
-this License will not have their licenses terminated so long as such
-parties remain in full compliance.
-
-  5. You are not required to accept this License, since you have not
-signed it.  However, nothing else grants you permission to modify or
-distribute the Program or its derivative works.  These actions are
-prohibited by law if you do not accept this License.  Therefore, by
-modifying or distributing the Program (or any work based on the
-Program), you indicate your acceptance of this License to do so, and
-all its terms and conditions for copying, distributing or modifying
-the Program or works based on it.
-
-  6. Each time you redistribute the Program (or any work based on the
-Program), the recipient automatically receives a license from the
-original licensor to copy, distribute or modify the Program subject to
-these terms and conditions.  You may not impose any further
-restrictions on the recipients' exercise of the rights granted herein.
-You are not responsible for enforcing compliance by third parties to
-this License.
-
-  7. If, as a consequence of a court judgment or allegation of patent
-infringement or for any other reason (not limited to patent issues),
-conditions are imposed on you (whether by court order, agreement or
-otherwise) that contradict the conditions of this License, they do not
-excuse you from the conditions of this License.  If you cannot
-distribute so as to satisfy simultaneously your obligations under this
-License and any other pertinent obligations, then as a consequence you
-may not distribute the Program at all.  For example, if a patent
-license would not permit royalty-free redistribution of the Program by
-all those who receive copies directly or indirectly through you, then
-the only way you could satisfy both it and this License would be to
-refrain entirely from distribution of the Program.
-
-If any portion of this section is held invalid or unenforceable under
-any particular circumstance, the balance of the section is intended to
-apply and the section as a whole is intended to apply in other
-circumstances.
-
-It is not the purpose of this section to induce you to infringe any
-patents or other property right claims or to contest validity of any
-such claims; this section has the sole purpose of protecting the
-integrity of the free software distribution system, which is
-implemented by public license practices.  Many people have made
-generous contributions to the wide range of software distributed
-through that system in reliance on consistent application of that
-system; it is up to the author/donor to decide if he or she is willing
-to distribute software through any other system and a licensee cannot
-impose that choice.
-
-This section is intended to make thoroughly clear what is believed to
-be a consequence of the rest of this License.
-
-  8. If the distribution and/or use of the Program is restricted in
-certain countries either by patents or by copyrighted interfaces, the
-original copyright holder who places the Program under this License
-may add an explicit geographical distribution limitation excluding
-those countries, so that distribution is permitted only in or among
-countries not thus excluded.  In such case, this License incorporates
-the limitation as if written in the body of this License.
-
-  9. The Free Software Foundation may publish revised and/or new versions
-of the General Public License from time to time.  Such new versions will
-be similar in spirit to the present version, but may differ in detail to
-address new problems or concerns.
-
-Each version is given a distinguishing version number.  If the Program
-specifies a version number of this License which applies to it and "any
-later version", you have the option of following the terms and conditions
-either of that version or of any later version published by the Free
-Software Foundation.  If the Program does not specify a version number of
-this License, you may choose any version ever published by the Free Software
-Foundation.
-
-  10. If you wish to incorporate parts of the Program into other free
-programs whose distribution conditions are different, write to the author
-to ask for permission.  For software which is copyrighted by the Free
-Software Foundation, write to the Free Software Foundation; we sometimes
-make exceptions for this.  Our decision will be guided by the two goals
-of preserving the free status of all derivatives of our free software and
-of promoting the sharing and reuse of software generally.
-
-			    NO WARRANTY
-
-  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY
-FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN
-OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES
-PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED
-OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
-MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS
-TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE
-PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,
-REPAIR OR CORRECTION.
-
-  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
-WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR
-REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,
-INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING
-OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED
-TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY
-YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER
-PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE
-POSSIBILITY OF SUCH DAMAGES.
-
-		     END OF TERMS AND CONDITIONS
-
-	    How to Apply These Terms to Your New Programs
-
-  If you develop a new program, and you want it to be of the greatest
-possible use to the public, the best way to achieve this is to make it
-free software which everyone can redistribute and change under these terms.
-
-  To do so, attach the following notices to the program.  It is safest
-to attach them to the start of each source file to most effectively
-convey the exclusion of warranty; and each file should have at least
-the "copyright" line and a pointer to where the full notice is found.
-
-    <one line to give the program's name and a brief idea of what it does.>
-    Copyright (C) <year>  <name of author>
-
-    This program is free software; you can redistribute it and/or modify
-    it under the terms of the GNU General Public License as published by
-    the Free Software Foundation; either version 2 of the License, or
-    (at your option) any later version.
-
-    This program is distributed in the hope that it will be useful,
-    but WITHOUT ANY WARRANTY; without even the implied warranty of
-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-    GNU General Public License for more details.
-
-    You should have received a copy of the GNU General Public License
-    along with this program; if not, write to the Free Software
-    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-
-
-Also add information on how to contact you by electronic and paper mail.
-
-If the program is interactive, make it output a short notice like this
-when it starts in an interactive mode:
-
-    Gnomovision version 69, Copyright (C) year name of author
-    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
-    This is free software, and you are welcome to redistribute it
-    under certain conditions; type `show c' for details.
-
-The hypothetical commands `show w' and `show c' should show the appropriate
-parts of the General Public License.  Of course, the commands you use may
-be called something other than `show w' and `show c'; they could even be
-mouse-clicks or menu items--whatever suits your program.
-
-You should also get your employer (if you work as a programmer) or your
-school, if any, to sign a "copyright disclaimer" for the program, if
-necessary.  Here is a sample; alter the names:
-
-  Yoyodyne, Inc., hereby disclaims all copyright interest in the program
-  `Gnomovision' (which makes passes at compilers) written by James Hacker.
-
-  <signature of Ty Coon>, 1 April 1989
-  Ty Coon, President of Vice
-
-This General Public License does not permit incorporating your program into
-proprietary programs.  If your program is a subroutine library, you may
-consider it more useful to permit linking proprietary applications with the
-library.  If this is what you want to do, use the GNU Library General
-Public License instead of this License.

Deleted: trunk/fpm/macro_version/Makefile
===================================================================
--- trunk/fpm/macro_version/Makefile	2008-03-20 00:13:08 UTC (rev 109)
+++ trunk/fpm/macro_version/Makefile	2008-03-20 00:14:39 UTC (rev 110)
@@ -1,149 +0,0 @@
-#
-# Fixed Point Math Macro Library - Makefile
-#
-# (C)opyright 2005,2006 by Ivo van Poorten
-# Licensed under version 2 of the GPL
-#
-# $Id$
-#
-
-include config.mak
-
-GENLUTOBJS		= genlut.o
-BENCHOBJS		= benchmark.o
-BENCHLUTOBJS	= benchmarklut.o
-PRECOBJS		= precision.o
-PRECLUTOBJS		= precisionlut.o
-
-GENERATEDFILES	= config.mak include/fixedpointmathlut.h
-
-.PHONY:	all
-all:				$(GENERATEDFILES)
-
-#This file is generated
-include/fixedpointmathlut.h:	genlut
-	./genlut 2>/dev/null | $(INDENT) 1>include/fixedpointmathlut.h
-
-genlut:				$(GENLUTOBJS)
-	$(LD) -o $@ $(GENLUTOBJS) $(LDFLAGS)
-
-benchmark:			$(GENERATEDFILES) $(BENCHOBJS)
-	$(LD) -o $@ $(BENCHOBJS) $(LDFLAGS)
-
-benchmarklut:		$(GENERATEDFILES) $(BENCHLUTOBJS)
-	$(LD) -o $@ $(BENCHLUTOBJS) $(LDFLAGS)
-
-precision:			$(GENERATEDFILES) $(PRECOBJS)
-	$(LD) -o $@ $(PRECOBJS) $(LDFLAGS)
-
-precisionlut:		$(GENERATEDFILES) $(PRECLUTOBJS)
-	$(LD) -o $@ $(PRECLUTOBJS) $(LDFLAGS)
-
-.PHONY:	benchmarks
-benchmarks:			benchmark benchmarklut
-
-.PHONY: precisions
-precisions:			precision precisionlut
-
-benchmarklut.c:		benchmark.c
-	echo "#define __FPM_ENABLE_ALL_LUT__" 1> benchmarklut.c
-	cat benchmark.c 1>> benchmarklut.c
-
-precisionlut.c:		precision.c
-	echo "#define __FPM_ENABLE_ALL_LUT__" 1> precisionlut.c
-	cat precision.c 1>> precisionlut.c
-
-.PHONY:	barcharts
-barcharts:			benchmark.dat benchmarklut.dat
-	mkdir -p barcharts
-	sh ./genbarcharts.sh benchmark.dat    barcharts algo
-	sh ./genbarcharts.sh benchmarklut.dat barcharts lut
-
-benchmark.dat:		benchmark
-	./benchmark		1> benchmark.dat 2>/dev/null
-
-benchmarklut.dat:	benchmarklut
-	./benchmarklut	1> benchmarklut.dat 2>/dev/null
-
-graphs:				precision precisionlut
-	mkdir -p graphs
-	sh ./gengraphs.sh graphs
-
-config.mak:			configure
-	@echo
-	@echo "#############################"
-	@echo "Please run ./configure first!"
-	@echo "#############################"
-	@echo
-	@echo "If you have done so before, you have to do it again, because it"
-	@echo "has changed."
-	@echo
-	@exit 1
-
-ifneq ($(GENLUTOBJS),)
--include $(patsubst %,deps/%,$(GENLUTOBJS:.o=.d))
-endif
-
-ifneq ($(BENCHOBJS),)
--include $(patsubst %,deps/%,$(BENCHOBJS:.o=.d))
-endif
-
-ifneq ($(BENCHLUTOBJS),)
--include $(patsubst %,deps/%,$(BENCHLUTOBJS:.o=.d))
-endif
-
-ifneq ($(PRECOBJS),)
--include $(patsubst %,deps/%,$(PRECOBJS:.o=.d))
-endif
-
-ifneq ($(PRECLUTOBJS),)
--include $(patsubst %,deps/%,$(PRECLUTOBJS:.o=.d))
-endif
-
-%.o:	%.c
-	$(CC) -c $(CFLAGS) $(INCLUDES) $*.c -o $*.o $(DEBUG) $(WARNINGS)
-	mkdir -p deps
-	$(CCFORDEPS) $(CFLAGS) $(INCLUDES) $*.c 1>deps/$*.d
-
-.PHONY:	clean
-clean:
-	$(MAKE) -C docs/xml clean
-	$(MAKE) -C include clean
-	$(MAKE) -C tools clean
-	rm -f *.o benchmark genlut
-	rm -f benchmark.dat benchmarklut benchmarklut.c benchmarklut.dat
-	rm -f precision.dat precision precisionlut precisionlut.c
-	rm -rf deps barcharts graphs
-
-.PHONY:	distclean
-distclean:		clean
-	$(MAKE) -C docs/xml distclean
-	$(MAKE) -C include distclean
-	$(MAKE) -C tools distclean
-	rm -f config.mak config.sh configure.log
-	rm -f *~
-
-.PHONY:	install
-install:		all
-	@echo Installing to $(PREFIX)
-	test -d $(PREFIX)/include || mkdir -p $(PREFIX)/include
-	cp -v include/fixedpointmath*.h $(PREFIX)/include
-	chmod 644 $(PREFIX)/include/fixedpointmath*.h
-
-.PHONY: uninstall
-uninstall:
-	@echo Uninstalling from $(PREFIX)
-	rm -f $(PREFIX)/include/fixedpointmath*.h
-
-.PHONY: docs
-docs:
-	$(MAKE) -C docs/xml
-
-.PHONY: docs2web
-docs2web:	docs
-	@echo
-	cp -af docs/HTML docs/HTML-single ../website/docs
-	@echo
-	@echo "Don't forget to run cvs diff and/or cvs commit in ../website/docs"
-	@echo
-

Deleted: trunk/fpm/macro_version/README
===================================================================
--- trunk/fpm/macro_version/README	2008-03-20 00:13:08 UTC (rev 109)
+++ trunk/fpm/macro_version/README	2008-03-20 00:14:39 UTC (rev 110)
@@ -1,4 +0,0 @@
-$Id$
-
-See http://fpm.berlios.de/index.html
-

Deleted: trunk/fpm/macro_version/TODO
===================================================================
--- trunk/fpm/macro_version/TODO	2008-03-20 00:13:08 UTC (rev 109)
+++ trunk/fpm/macro_version/TODO	2008-03-20 00:14:39 UTC (rev 110)
@@ -1,17 +0,0 @@
-TODO
-====
-
-$Id$
-
-- Regression tests.
-- Removal of conditional statement in sqrt macros (in converge); find a way
-  to change them into 0 or 1 and use multiplication. This should be a huge
-  speed up for the algorithmic versions.
-- Add more functions like (arc)sin, (arc)cos, (arc)tan, et cetera.
-- Inivestigate possibilities to increase speed with SIMD instructions. (might
-  be difficult because a lot of algorithms use 64 bits at times. SSE2 maybe? )
-- Write sample code. Preferably something that does something useful :)
-- Document __FPM_VERSION_RELEASE__  valid values are: alpha, beta, stable and
-  cvs.
-- Add selective LUT support, like only include luts for a specific f.p type
-

Deleted: trunk/fpm/macro_version/benchmark.c
===================================================================
--- trunk/fpm/macro_version/benchmark.c	2008-03-20 00:13:08 UTC (rev 109)
+++ trunk/fpm/macro_version/benchmark.c	2008-03-20 00:14:39 UTC (rev 110)
@@ -1,246 +0,0 @@
-/* ------------------------------------------------------------------------- */
-
-/*
- * Fixed Point Math Macro Library - Benchmark
- *
- * (C)2005,2006 by Ivo van Poorten
- * Licensed under version 2 of the GPL
- *
- * $Id$
- *
- */
-
-/* ------------------------------------------------------------------------- */
-
-#include <stdio.h>
-#include <math.h>
-
-#include "fixedpointmath.h"
-
-#ifndef HAVE_RDTSC
-#include <sys/time.h>
-#include <time.h>
-#endif
-
-/* ------------------------------------------------------------------------- */
-
-/* 10000 and 100000 or something, but lower values while testing scripts,
- * Makefile, etc... */
-
-#define INNERLOOP   10000
-#define OUTERLOOP   1000
-#define VAL1        2.9
-#define VAL2        213
-#define VAL3        3.1
-
-/* ------------------------------------------------------------------------- */
-
-static inline long long rdtsc()
-{
-#ifdef HAVE_RDTSC
-    long long timestamp;
-    asm volatile ("rdtsc\n" : "=A"(timestamp));
-    return timestamp;
-#else
-    struct timeval tv;
-    struct timezone tz;
-
-    gettimeofday(&tv, &tz);
-    
-    return tv.tv_sec*1000000L + tv.tv_usec;
-#endif
-}
-
-/* ------------------------------------------------------------------------- */
-
-#define timeloop(AVG, CODE) \
-    do { \
-        sum = (uint64_t) 0; \
-        for (j=0; j<OUTERLOOP; j++) { \
-            start = rdtsc(); \
-            for (i=0; i<INNERLOOP; i++) { \
-                CODE; \
-            } \
-            end = rdtsc(); \
-            sum += (end-start); \
-        } \
-        AVG = sum / OUTERLOOP; \
-    } while(0)
-
-#define NINEi "%i %i %i %i %i %i %i %i %i\n"
-
-#define printreport(HEADER, a) \
-    do { \
-        printf("#"HEADER"\n"); \
-        num=a*10; \
-        printf(NINEi, num++, 0, 0, 0, 0, 0, 0, 0, 0); \
-        printf(NINEi, num++, 0, prca, 0, 0, 0, 0, 0, 0); \
-        printf(NINEi, num++, 0, 0, prcb, 0, 0, 0, 0, 0); \
-        printf(NINEi, num++, 0, 0, 0, prcc, 0, 0, 0, 0); \
-        printf(NINEi, num++, 0, 0, 0, 0, prcd, 0, 0, 0); \
-        printf(NINEi, num++, 0, 0, 0, 0, 0, prcf, 0, 0); \
-        printf(NINEi, num++, 0, 0, 0, 0, 0, 0, prcg, 0); \
-        printf(NINEi, num++, 0, 0, 0, 0, 0, 0, 0, 0); \
-        printf("\n"); \
-        fflush(stdout); \
-        fprintf(stderr, "#"HEADER"\n"); \
-        fprintf(stderr, "# %-10s - % 4i%%\n", "fp8p8_t", prca); \
-        fprintf(stderr, "# %-10s - % 4i%%\n", "fp24p8_t", prcb); \
-        fprintf(stderr, "# %-10s - % 4i%%\n", "fp16p16_t", prcc); \
-        fprintf(stderr, "# %-10s - % 4i%%\n", "fp8p24_t", prcd); \
-        fprintf(stderr, "# %-10s - % 4i%%\n", "float", prcf); \
-        fprintf(stderr, "# %-10s - % 4i%%\n\n", "double", prcg); \
-        fflush(stderr); \
-    } while(0)
-
-#define calcperc(PRC, AVG, AVGR) \
-    do { \
-        PRC = (AVG*100)/(AVGR?AVGR:1); \
-    } while(0)
-
-#define calcallperc \
-    do { \
-        calcperc(prca, avga, avgf); \
-        calcperc(prcb, avgb, avgf); \
-        calcperc(prcc, avgc, avgf); \
-        calcperc(prcd, avgd, avgf); \
-        calcperc(prcf, avgf, avgf); \
-        calcperc(prcg, avgg, avgf); \
-    } while(0)
-
-/* ------------------------------------------------------------------------- */
-
-/* There's a foobar timeloop between the fp8p8 add/sub test and fp24p8 test,
- * because somehow (can anybody explain?) one needs to "kick" the CPU out of
- * 16-bit short int mode */
-
-int main()
-{
-    unsigned int i, j, num;
-    ufp8p8_t   a1, a2, a3, a4;
-    ufp24p8_t  b1, b2, b3, b4;
-    ufp16p16_t c1, c2, c3, c4;
-    ufp8p24_t  d1, d2, d3, d4;
-    float      f1, f2, f3, f4;
-    double     g1, g2, g3, g4;
-    uint64_t   start, end, sum;
-    uint64_t   avga, avgb, avgc, avgd, avgf, avgg;
-    int        prca, prcb, prcc, prcd, prcf, prcg;
-    int        foo, bar;
-
-    a2 = dtoufp8p8(VAL1);
-    b2 = dtoufp24p8(VAL1);
-    c2 = dtoufp16p16(VAL1);
-    d2 = dtoufp8p24(VAL1);
-    f2 = VAL1;
-    g2 = VAL1;
-
-    a3 = dtoufp8p8(VAL2);
-    b3 = dtoufp24p8(VAL2);
-    c3 = dtoufp16p16(VAL2);
-    d3 = dtoufp8p24(VAL2);
-    f3 = VAL2;
-    g3 = VAL2;
-
-    a4 = dtoufp8p8(VAL3);
-    b4 = dtoufp24p8(VAL3);
-    c4 = dtoufp16p16(VAL3);
-    d4 = dtoufp8p24(VAL3);
-    f4 = VAL3;
-    g4 = VAL3;
-
-    /* ADD */
-
-    timeloop(avga, a1=a2+a3);
-    timeloop(foo, bar=bar);
-    timeloop(avgb, b1=b2+b3);
-    timeloop(avgc, c1=c2+c3);
-    timeloop(avgd, d1=d2+d3);
-    timeloop(avgf, f1=f2+f3);
-    timeloop(avgg, g1=g2+g3);
-    calcallperc;
-    printreport("ADD", 0);
-
-    /* SUB */
-
-    timeloop(avga, a1=a2-a3);
-    timeloop(foo, bar=bar);
-    timeloop(avgb, b1=b2-b3);
-    timeloop(avgc, c1=c2-c3);
-    timeloop(avgd, d1=d2-d3);
-    timeloop(avgf, f1=f2-f3);
-    timeloop(avgg, g1=g2-g3);
-    calcallperc;
-    printreport("SUB", 1);
-
-    /* MUL */
-
-    timeloop(avga, a1=mulufp8p8(a2,a3)  );
-    timeloop(avgb, b1=mulufp24p8(b2,b3) );
-    timeloop(avgc, c1=mulufp16p16(c2,c3));
-    timeloop(avgd, d1=mulufp8p24(d2,d3) );
-    timeloop(avgf, f1=f2*f3);
-    timeloop(avgg, g1=g2*g3);
-    calcallperc;
-    printreport("MUL", 2);
-
-    /* DIV */
-
-    timeloop(avga, a1=divufp8p8(a2,a3)  );
-    timeloop(avgb, b1=divufp24p8(b2,b3) );
-    timeloop(avgc, c1=divufp16p16(c2,c3));
-    timeloop(avgd, d1=divufp8p24(d2,d3) );
-    timeloop(avgf, f1=f2/f3);
-    timeloop(avgg, g1=g2/g3);
-    calcallperc;
-    printreport("DIV", 3);
-
-    /* SQRT */
-
-    timeloop(avga, a1=sqrtufp8p8(a2)  );
-    timeloop(avgb, b1=sqrtufp24p8(b2) );
-    timeloop(avgc, c1=sqrtufp16p16(c2));
-    timeloop(avgd, d1=sqrtufp8p24(d2) );
-    timeloop(avgf, f1=sqrt(f2));
-    timeloop(avgg, g1=sqrt(g2));
-    calcallperc;
-    printreport("SQRT", 4);
-
-    /* EXP */
-
-    timeloop(avga, a1=expufp8p8(a2)  );
-    timeloop(avgb, b1=expufp24p8(b2) );
-    timeloop(avgc, c1=expufp16p16(c2));
-    timeloop(avgd, d1=expufp8p24(d2) );
-    timeloop(avgf, f1=exp(f2));
-    timeloop(avgg, g1=exp(g2));
-    calcallperc;
-    printreport("EXP", 5);
-
-    /* LN */
-
-    timeloop(avga, a1=lnufp8p8(a3)  );
-    timeloop(avgb, b1=lnufp24p8(b3) );
-    timeloop(avgc, c1=lnufp16p16(c3));
-    timeloop(avgd, d1=lnufp8p24(d3) );
-    timeloop(avgf, f1=log(f3));
-    timeloop(avgg, g1=log(g3));
-    calcallperc;
-    printreport("LN", 6);
-
-    /* POW */
-
-    timeloop(avga, a1=powufp8p8(a3,a4)  );
-    timeloop(avgb, b1=powufp24p8(b3,b4) );
-    timeloop(avgc, c1=powufp16p16(c3,c4));
-    timeloop(avgd, d1=powufp8p24(d3,d4) );
-    timeloop(avgf, f1=pow(f3,f4));
-    timeloop(avgg, g1=pow(g3,g4));
-    calcallperc;
-    printreport("POW", 7);
-
-    return 0;
-}
-
-/* ------------------------------------------------------------------------- */
-

Deleted: trunk/fpm/macro_version/configure
===================================================================
--- trunk/fpm/macro_version/configure	2008-03-20 00:13:08 UTC (rev 109)
+++ trunk/fpm/macro_version/configure	2008-03-20 00:14:39 UTC (rev 110)
@@ -1,502 +0,0 @@
-#! /bin/sh
-
-#
-# Alternate configure
-# Loosely based on MPlayer's configure
-#
-# (C)opyright 2005,2006 by Ivo van Poorten
-# Licensed under version 2 of the GPL
-#
-# $Id$
-#
-
-rm -f config.mak
-
-TMPC="configure-test-file.c"
-TMPO="configure-test-file.o"
-TMPLOG="configure.log"
-
-rm -f $TMPLOG
-
-_debug=
-_cc=gcc
-_ccfordeps="$_cc -MM"
-_ldd=ldd
-_prefix=/usr/local
-_cflags="-O4"
-_warnings=
-_ldflags=-lm
-_inc_extra=
-_ld_extra=
-_make=
-_indent=indent
-_makedepend=makedepend
-_gnuplot=gnuplot
-_awk=
-_fig2dev=fig2dev
-_fig2dev_png=
-_inttypes=
-_stdint=
-_round=
-_types=
-
-
-# check environment
-
-if test "$CC" != "" ; then
-    _cc=$CC
-    _ccfordeps="$_cc -MM"
-fi
-if test "$CFLAGS" != "" ; then
-    echo "Warning: Overriding CFLAGS with environment variable ($CFLAGS)"
-    echo "If that's not what you want, run CFLAGS= ./configure"
-    _cflags=$CFLAGS
-    echo
-fi
-
-# Functions
-
-case `echo -n` in
-    -n)     _echo_n=        _echo_c='\c'    ;; # SysV echo
-    *)      _echo_n='-n '   _echo_c=        ;; # BSD echo
-esac
-
-echocheck() {
-    echo "============ Checking for $@ ============" >> "$TMPLOG"
-    echo ${_echo_n} "Checking for $@ ... ${_echo_c}"
-}
-
-echores() {
-    echo "Result is: $@" >> "$TMPLOG"
-    echo "##########################################" >> "$TMPLOG"
-    echo "" >> "$TMPLOG"
-    echo "$@"
-}
-
-cc_check() {
-    echo "" >> "$TMPLOG"
-    cat "$TMPC" >> "$TMPLOG"
-    echo "" >> "$TMPLOG"
-    echo "$_cc $CFLAGS $_inc_extra $_ld_extra $TMPC -o $TMPO $@" >> "$TMPLOG"
-    rm -f "$TMPO"
-    ( $_cc $CFLAGS $_inc_extra $_ld_extra "$TMPC" -o "$TMPO" "$@" ) >> "$TMPLOG" 2>&1
-    TMP="$?"
-    echo >> "$TMPLOG"
-    echo "ldd $TMPO" >> "$TMPLOG"
-    ( $_ldd "$TMPO" ) >> "$TMPLOG" 2>&1
-    echo >> "$TMPLOG"
-    return "$TMP"
-}
-
-die () {
-    echo
-    echo "Error: $@" >&2
-    echo >&2
-    rm -f "$TMPO" "$TMPC"
-    echo "Check \"$TMPLOG\" if you do not understand why it failed."
-    echo
-    exit 1
-}
-
-# Parse commandline
-
-for parm in "$@"; do
-    if test "$parm" = "--help" || test "$parm" = "-help" || test "$parm" = "-h" ; then
-        cat << EOF
-
-Usage $0 [options] ...
-
-Configuration:
-  -h, --help                display this help and exit
-
-Installation directories:
-  --prefix=DIR              use this prefix for installation [/usr/local]
-
-Miscellaneous options:
-  --cc=COMPILER             use this C compiler to build [gcc]
-  --with-extraincdir=DIR    extra headers
-  --with-extralibdir=DIR    extra library files
-
-Advanced options:
-  --enable-debug            enable debug symbols [disabled]
-  --enable-warnings         enable all compiler warnings [disabled]
-
-  --with-make=              use a custom make program
-  --with-indent=            use a custom indent program
-  --with-makedepend=        use a custom makedepend program (if needed)
-  --with-gnuplot=           use a custom gnuplot program (if needed)
-  --with-awk=               use a custom awk program (if needed)
-  --with-fig2dev=           use a custom fig2dev program (if needed)
-
-EOF
-        exit 0
-    fi
-done
-
-for ac_option do
-    case "$ac_option" in
-    --prefix=*)
-        _prefix=`echo $ac_option | cut -d '=' -f 2`
-        ;;
-    --cc=*)
-        _cc=`echo $ac_option | cut -d '=' -f 2`
-        ;;
-    --with-extraincdir=*)
-        _inc_extra=-I`echo $ac_option | cut -d '=' -f 2 | sed 's,:, -I,g'`
-        ;;
-    --with-extralibdir=*)
-        _ld_extra=-L`echo $ac_option | cut -d '=' -f 2 | sed 's,:, -L,g'`
-        ;;
-    --disable-debug)
-        _debug=""
-        ;;
-    --enable-debug)
-        _debug="-g"
-        _cflags=""
-        ;;
-    --disable-warnings)
-        _warnings=""
-        ;;
-    --enable-warnings)
-        _warnings="-Wall"
-        ;;
-    --with-make=*)
-        _make=`echo $ac_option | cut -d '=' -f 2`
-        ;;
-    --with-indent=*)
-        _indent=`echo $ac_option | cut -d '=' -f 2`
-        ;;
-    --with-makedepend=*)
-        _makedepend=`echo $ac_option | cut -d '=' -f 2`
-        ;;
-    --with-gnuplot=*)
-        _gnuplot=`echo $ac_option | cut -d '=' -f 2`
-        ;;
-    --with-awk=*)
-        _awk=`echo $ac_option | cut -d '=' -f 2`
-        ;;
-    --with-fig2dev=*)
-        _fig2dev=`echo $ac_option | cut -d '=' -f 2`
-        ;;
-    *)
-        echo "unknown option: $ac_option"
-        exit 1
-        ;;
-    esac
-done
-
-
-# Do tests...
-
-
-
-echocheck "architecture"
-cputype=`uname -p 2>&1`
-if test "$cputype" = "unknown" ; then
-    cputype=`uname -m 2>&1`
-fi
-echores "$cputype"
-
-
-
-echocheck "C compiler"
-cc_run=`( $_cc ) 2>&1`
-if test "$?" -gt 1; then
-    echores "no"
-    die "Can't find compiler"
-fi
-case "$cputype" in
-    i386|i486)
-        _rdtsc=
-        ;;
-    *)
-        _rdtsc=-DHAVE_RDTSC
-        ;;
-esac
-echores "$_cc"
-
-
-
-echocheck "GNU Make"
-if test "$_make" = "" ; then
-    for _maket in make gmake nogmakepresent; do
-        _tmp=`$_maket --version 2>>"$TMPLOG" | head -n 1 | cut -d ' ' -f 1`
-        if test "$?" -eq 0 ; then
-            if test "$_tmp" = "GNU" ; then
-                echores "yes, using $_maket"
-                break;
-            fi
-        fi
-    done
-    _make=$_maket
-    if test "$_make" = "nogmakepresent" ; then
-        echores "no"
-        die "You need GNU Make to build. If you are sure your version of make
-is compatible, you may want to specify --with-make= on the command line"
-    fi
-else
-    echores "using $_make (command line override)"
-fi
-
-
-
-echocheck "extra headers"
-if test "$_inc_extra" ; then
-    echores "$_inc_extra"
-else
-    echores "no"
-fi
-
-
-
-echocheck "extra libraries"
-if test "$_ld_extra" ; then
-    echores "$_ld_extra"
-else
-    echores "no"
-fi
-
-
-
-echocheck "round()"
-cat > $TMPC <<EOF
-#include <math.h>
-int main(void) { double d=1.23; d=round(d); return 0; }
-EOF
-cc_check -lm && _round=yes
-if test "$_round" = yes ; then
-    echores "yes"
-    _round="-DHAVE_ROUND"
-else
-    echores "no"
-    _round=""
-fi
-
-
-
-echocheck "inttypes.h"
-cat > $TMPC << EOF
-#include <inttypes.h>
-int main(void) { return 0; }
-EOF
-cc_check && _inttypes=yes
-if test "$_inttypes" = yes ; then
-    echores "yes"
-    _inttypes="-DHAVE_INTTYPES_H"
-else
-    echores "no"
-    _inttypes=""
-    echocheck "stdint.h"
-    cat > $TMPC << EOF
-#include <stdint.h>
-int main(void) { return 0; }
-EOF
-    cc_check && _stdint=yes
-    if test "$_stdint" = yes ; then
-        echores "yes"
-        _stdint="-DHAVE_STDINT_H"
-    else
-        echores "no"
-        _stdint=""
-        echocheck "types.h"
-        cat > $TMPC << EOF
-#include <sys/types.h>
-int main(void) { return 0; }
-EOF
-        cc_check && _types=yes
-        if test "$_types" = yes ; then
-            echores "yes"
-            _types="-DHAVE_TYPES_H"
-        else
-            echores "no"
-            _types=""
-        fi
-    fi
-fi
-
-
-
-echocheck "indent"
-(echo "$_indent" | $_indent) >> "$TMPLOG" 2>&1
-_tmp=`(echo "indent" | $_indent) 2>&1`
-if test "$_tmp" = "indent" ; then
-    echores "yes, $_indent"
-else
-    echores "no, using cat instead"
-    _indent=cat
-fi
-
-
-
-echocheck "$_cc support of -MM option"
-cat > $TMPC << EOF
-int main(void) { return 0; }
-EOF
-$_cc -MM $TMPC >> $TMPLOG 2>&1
-if test "$?" -gt 0; then
-    echores "no"
-    _ccfordeps=""
-else
-    echores "yes"
-    _ccfordeps="$_cc -MM"
-fi
-
-
-
-if test "$_ccfordeps" = ""; then
-    echocheck "makedepend"
-    cat > $TMPC << EOF
-int main(void) { return 0; }
-EOF
-    $_makedepend -f- $TMPC >> $TMPLOG 2>&1
-    if test "$?" -gt 0; then
-        echores "no"
-        die "If you compiler doensn't understand -MM, makedepend is needed."
-    else
-        echores "yes, $_makedepend"
-        _ccfordeps="$_makedepend -f-"
-    fi
-fi
-
-
-
-echocheck "gnuplot"
-(echo "set terminal fig; plot x;" | $_gnuplot) 2>> "$TMPLOG" 1>/dev/null
-if test "$?" -gt 0 ; then
-    echores "no"
-    _gnuplot=""
-    _nobarcharts="yes"
-else
-    echores "yes, $_gnuplot"
-fi
-
-
-
-echocheck "awk"
-for _awkt in $_awk mawk gawk nawk awk noawkpresent; do
-    ( $_awkt 'BEGIN{testme();}function testme(){print "";}' ) >> "$TMPLOG" 2>&1
-    if test "$?" -eq 0 ; then
-        echores "yes, $_awkt"
-        break
-    fi
-done
-_awk=$_awkt
-if test "$_awk" = "noawkpresent"; then
-    echores "no"
-    _awk=""
-    _nobarcharts="yes"
-fi
-
-
-
-echocheck "fig2dev"
-($_fig2dev -h) 2>> "$TMPLOG" 1>/dev/null
-if test "$?" -gt 0 ; then
-    echores "no"
-    _fig2dev=""
-    _nobarcharts="yes"
-else
-    echores "yes, $_fig2dev"
-fi
-
-
-
-if test "$_fig2dev" != "" ; then
-    echocheck "$_fig2dev support of PNG output"
-    _fig2dev_png=`($_fig2dev -h | grep png) 2>>"$TMPLOG"`
-    if test "$_fig2dev_png" = "" ; then
-        echores "no"
-        _fig2dev_png=no
-    else
-        echores "yes"
-        _fig2dev_png=yes
-    fi
-fi
-
-
-
-# Write report
-
-echo
-if test "$_debug" = ""; then
-    echo "Debug symbols disabled."
-else
-    echo "Debug symbols enabled."
-fi
-if test "$_warnings" = ""; then
-    echo "All compiler warnings disabled."
-else
-    echo "All compiler warnings enabled."
-fi
-
-if test "$_nobarcharts" = "yes"; then
-    echo ${_echo_n} "No benchmark barcharts support because the ${_echo_c}"
-    echo "following programs were not found:"
-    echo ${_echo_n} "    ${_echo_c}"
-    if test "$_gnuplot" = ""; then
-        echo ${_echo_n} "gnuplot ${_echo_c}"
-    fi
-    if test "$_awk" = ""; then
-        echo ${_echo_n} "awk ${_echo_c}"
-    fi
-    if test "$_fig2dev" = ""; then
-        echo ${_echo_n} "fig2dev ${_echo_c}"
-    fi
-    echo
-fi
-
-
-
-# Cleaning up source tree
-
-echo
-echo ${_echo_n} "Cleaning up source tree ... ${_echo_c}"
-> config.mak
-$_make clean >> $TMPLOG 2>&1
-echores "done"
-
-
-# Assemble _cflags and _ldflags
-
-_cflags="$_cflags"
-_ldflags="$_ldflags $_ld_extra"
-
-# Generate config.mak
-
-echo
-echo ${_echo_n} "Generating config.mak ... ${_echo_c}"
-cat > config.mak << EOF
-CC=$_cc
-CFLAGS=$_cflags $_inttypes $_stdint $_round $_rdtsc $_types
-INCLUDES=-I./include $_inc_extra
-CCFORDEPS=$_ccfordeps
-LD=$_cc
-LDFLAGS=$_ldflags
-INDENT=$_indent
-DEBUG=$_debug
-WARNINGS=$_warnings
-MAKE=$_make
-PREFIX=$_prefix
-EOF
-
-echo "done."
-
-# Generate config.sh for shellscripts (like genbarcharts.sh)
-
-echo ${_echo_n} "Generating config.sh ... ${_echo_c}"
-cat > config.sh << EOF
-_gnuplot=$_gnuplot
-_awk=$_awk
-_fig2dev=$_fig2dev
-_fig2dev_png=$_fig2dev_png
-EOF
-
-echo "done."
-echo
-echo "Now type '$_make' to build."
-echo
-
-# Clean up
-
-rm -f "$TMPC" "$TMPO"
-

Deleted: trunk/fpm/macro_version/genbarcharts.sh
===================================================================
--- trunk/fpm/macro_version/genbarcharts.sh	2008-03-20 00:13:08 UTC (rev 109)
+++ trunk/fpm/macro_version/genbarcharts.sh	2008-03-20 00:14:39 UTC (rev 110)
@@ -1,68 +0,0 @@
-#!/bin/sh
-
-# $Id$
-
-# Script to generate barcharts from benchmark output
-# (C)opyright 2005,2006 by Ivo van Poorten
-# Licensed under version 2 of the GPL
-
-# awk trick inspired by:
-# http://www.togaware.com/datamining/gdatamine/barchart
-
-# Read config
-
-. ./config.sh
-
-# Test if all tools were available
-
-testavail() {
-    if test "$1" = "" ; then
-        echo "Can't create barcharts. $2 is not available on your system."
-        exit 0
-    fi
-}
-
-testavail "$_gnuplot" "gnuplot"
-testavail "$_awk" "awk"
-testavail "$_fig2dev" "fig2dev"
-
-if test "$_fig2dev_png" = "no" ; then
-    echo "Can't generate barcharts. Your $_fig2dev doesn't have PNG support."
-    exit 0
-fi
-
-# check command line
-
-if test "$#" != "3" ; then
-    echo "usage: $0 <datafile> <outputdirectory> <prefix-to-filenames>"
-    exit -1
-fi
-
-# generate all barcharts
-
-xleft=0
-xright=7
-
-for i in add sub mul div sqrt exp ln pow
-do
-
-( cat << __EOF__
-set nokey
-set xrange [$xleft:$xright]
-set yrange [0:150]
-set data style boxes
-set grid
-set noborder
-
-set terminal fig color
-
-plot "$1" using 1:2, "$1" using 1:3, "$1" using 1:4, "$1" using 1:5, "$1" using 1:6, "$1" using 1:7, "$1" using 1:8, "$1" using 1:9
-
-__EOF__
-) | $_gnuplot | $_awk 'BEGIN {} /10 0 -1     0.000 0 0 0 0 0 5/{$9=20} {print}' | $_fig2dev -L png -m 1 > $2/$3\_benchmark_$i.png
-
-xleft=`expr $xleft + 10`
-xright=`expr $xright + 10`
-
-done
-

Deleted: trunk/fpm/macro_version/gengraphs.sh
===================================================================
--- trunk/fpm/macro_version/gengraphs.sh	2008-03-20 00:13:08 UTC (rev 109)
+++ trunk/fpm/macro_version/gengraphs.sh	2008-03-20 00:14:39 UTC (rev 110)
@@ -1,169 +0,0 @@
-#!/bin/sh
-
-# $Id$
-
-# Script to generate graphs from precision output
-# (C)opyright 2005,2006 by Ivo van Poorten
-# Licensed under version 2 of the GPL
-
-# generic function
-
-# xrange yrange outfile
-
-gengraph() {
-    echo "Generating $3.png"
-( cat << __EOF__
-set nokey
-set xrange [$1]
-set yrange [$2]
-set data style lines
-set grid
-set border
-
-set terminal fig color
-
-plot "precision.dat" using 1:2, "precision.dat" using 1:3
-
-__EOF__
-) | $_gnuplot | $_fig2dev -L png -m 0.85 > $3.png
-}
-
-# Read config
-
-. ./config.sh
-
-# Test if all tools were available
-
-testavail() {
-    if test "$1" = "" ; then
-        echo "Can't create graphs. $2 is not available on your system."
-        exit 0
-    fi
-}
-
-testavail "$_gnuplot" "gnuplot"
-testavail "$_fig2dev" "fig2dev"
-
-if test "$_fig2dev_png" = "no" ; then
-    echo "Can't generate barcharts. Your $_fig2dev doesn't have PNG support."
-    exit 0
-fi
-
-# check command line
-
-if [ "$#" != "1" ]; then
-    echo "usage: $0 <output-directory>"
-    exit -1
-fi
-
-# generate all graphs + index.html
-
-( cat << __EOF__
-<HTML>
-<HEAD></HEAD>
-<BODY BGCOLOR="#f0f0f0">
-__EOF__
-) > $1/index.html
-
-overview(){
-    case $1 in
-    sqrt)
-        echo 0:256 0:16
-        ;;
-    exp)
-        echo 0:5.5 0:256
-        ;;
-    ln)
-        echo 1:256 0:6
-        ;;
-    pow)
-        echo 1:16 0:256
-        ;;
-    esac
-}
-
-zoom1() {
-    case $1 in
-    sqrt)
-        echo 0:4 0:2
-        ;;
-    exp)
-        echo 0:3 0:16
-        ;;
-    ln)
-        echo 1:5 0:2
-        ;;
-    pow)
-        echo 1:2 0:4
-        ;;
-    esac
-}
-
-zoom2() {
-    case $1 in
-    sqrt)
-        echo 112:144 10.25:12.25
-        ;;
-    exp)
-        echo 4:5 50:150
-        ;;
-    ln)
-        echo 3:4 1:1.5
-        ;;
-    pow)
-        echo 8:12 50:150
-        ;;
-    esac
-}
-
-for func in sqrt exp ln pow
-do
-
-    for fptype in ufp8p8 ufp24p8 ufp16p16 ufp8p24
-    do
-        echo "Calculating algorithmic data..."
-        ./precision $fptype $func > precision.dat
-
-        outfile=$1/algo_precision_$fptype\_$func
-        gengraph `overview $func` $outfile\_overview
-        gengraph `zoom1 $func` $outfile\_zoom1
-        gengraph `zoom2 $func` $outfile\_zoom2
-
-        echo "Adding lines to index.html..."
-
-        outfile=`basename $outfile`
-        ( cat << __EOF__
-<B> $func - $fptype - algorithmic </B><BR>
-<IMG SRC="${outfile}_overview.png">
-<IMG SRC="${outfile}_zoom1.png">
-<IMG SRC="${outfile}_zoom2.png">
-<BR>
-__EOF__
-) >> $1/index.html
-
-        echo "Calculating LUT data..."
-        ./precisionlut $fptype $func > precision.dat
-
-        outfile=$1/lut_precision_$fptype\_$func
-        gengraph `overview $func` $outfile\_overview
-        gengraph `zoom1 $func` $outfile\_zoom1
-        gengraph `zoom2 $func` $outfile\_zoom2
-
-        echo "Adding lines to index.html..."
-
-        outfile=`basename $outfile`
-        ( cat << __EOF__
-<B> $func - $fptype - lut </B><BR>
-<IMG SRC="${outfile}_overview.png">
-<IMG SRC="${outfile}_zoom1.png">
-<IMG SRC="${outfile}_zoom2.png">
-<P><HR>
-__EOF__
-) >> $1/index.html
-
-
-    done
-done
-
-echo "</BODY>" >> $1/index.html
-

Deleted: trunk/fpm/macro_version/genlut.c
===================================================================
--- trunk/fpm/macro_version/genlut.c	2008-03-20 00:13:08 UTC (rev 109)
+++ trunk/fpm/macro_version/genlut.c	2008-03-20 00:14:39 UTC (rev 110)
@@ -1,290 +0,0 @@
-/* ------------------------------------------------------------------------- */
-
-/*
- * Fixed Point Math Macro Library - Generate Look-Up-Tables
- *
- * (C)opyright 2005,2006 by Ivo van Poorten
- * Licensed under version 2 of the GPL
- *
- * $Id$
- *
- */
-
-/* ------------------------------------------------------------------------- */
-
-#include <math.h>
-#include <stdio.h>
-#ifdef HAVE_INTTYPES_H
-#include <inttypes.h>
-#else
-#ifdef HAVE_STDINT_H
-#include <stdint.h>
-#else
-#ifdef HAVE_TYPES_H
-#include <sys/types.h>
-#else
-typedef unsigned long long uint64_t;
-typedef          long long  int64_t;
-typedef unsigned long      uint32_t;
-typedef          long       int32_t;
-typedef unsigned short     uint16_t;
-typedef          short      int16_t;
-typedef unsigned char      uint8_t;
-typedef          char       int8_t;
-#endif
-#endif
-#endif
-#ifndef HAVE_ROUND
-#define round(x) rint(x)
-#endif
-
-/* ------------------------------------------------------------------------- */
-
-#define outputccode(A, B, C, D, e) \
-    printf("\n/* "A" */\n\n"); \
-    printf("static const "B" "C"[%i] = {\n", e); \
-    for (i=0; i<e-1; i++) { \
-        printf("%uU, ", D[i]); \
-    } \
-    printf("%uU };\n", D[i]);
-
-/* ------------------------------------------------------------------------- */
-
-int main()
-{
-    double round(double d);
-    uint16_t ufp8p8sqrtlut_16[129],   ufp8p8sqrtlut_256[121];
-    uint32_t ufp24p8sqrtlut_16[129],  ufp24p8sqrtlut_256[121],
-             ufp24p8sqrtlut_64k[129], ufp24p8sqrtlut_16m[129];
-    uint32_t ufp16p16sqrtlut_16[129], ufp16p16sqrtlut_256[121],
-             ufp16p16sqrtlut_64k[129];
-    uint32_t ufp8p24sqrtlut_4[129],   ufp8p24sqrtlut_16[129],
-             ufp8p24sqrtlut_256[121];
-
-    uint16_t ufp8p8explut_16[129],   ufp8p8explut_256[121];
-    uint32_t ufp24p8explut_16[129],  ufp24p8explut_256[121],
-             ufp24p8explut_64k[129], ufp24p8explut_16m[129];
-    uint32_t ufp16p16explut_16[129], ufp16p16explut_256[121],
-             ufp16p16explut_64k[129];
-    uint32_t ufp8p24explut_4[129],   ufp8p24explut_16[129],
-             ufp8p24explut_256[121];
-
-    uint16_t ufp8p8lnlut_16[129],   ufp8p8lnlut_256[121];
-    uint32_t ufp24p8lnlut_16[129],  ufp24p8lnlut_256[121],
-             ufp24p8lnlut_64k[129], ufp24p8lnlut_16m[129];
-    uint32_t ufp16p16lnlut_16[129], ufp16p16lnlut_256[121],
-             ufp16p16lnlut_64k[129];
-    uint32_t ufp8p24lnlut_4[129],   ufp8p24lnlut_16[129],
-             ufp8p24lnlut_256[121];
-    int i;
-    double d, e, f;
-
-    for (i=0; i<=128; i++) {
-        d = sqrt(i/32.0);
-        e = exp(i/32.0);
-        f = log(i/32.0);
-        /* sqrt */
-        ufp8p24sqrtlut_4[i] = round(d*65536.0*256.0);
-        /* exp */
-        ufp8p24explut_4[i]  = round(e*65536.0*256.0);
-        /* ln */
-        if (f<0) f = 0.0;
-        ufp8p24lnlut_4[i]   = round(f*65536.0*256.0);
-    }
-
-    for (i=0; i<=128; i++) {
-        d = sqrt(i/8.0);
-        e = exp(i/8.0);
-        f = log(i/8.0);
-        /* sqrt */
-        ufp8p8sqrtlut_16[i]   = round(d*256.0);
-        ufp24p8sqrtlut_16[i]  = round(d*256.0);
-        ufp16p16sqrtlut_16[i] = round(d*65536.0);
-        ufp8p24sqrtlut_16[i]  = round(d*65536.0*256.0);
-        /* exp */
-        if (e>=16777216.0) e = 0.0;
-        ufp24p8explut_16[i]  = round(e*256.0);
-        if (e>=65536.0) e = 0.0;
-        ufp16p16explut_16[i] = round(e*65536.0);
-        if (e>=256.0) e = 256.0;
-        ufp8p24explut_16[i]  = round(e*65536.0*256.0);
-        ufp8p8explut_16[i]   = round(e*256.0);
-        /* ln */
-        if (f<0) f = 0.0;
-        ufp8p8lnlut_16[i]   = round(f*256.0);
-        ufp24p8lnlut_16[i]  = round(f*256.0);
-        ufp16p16lnlut_16[i] = round(f*65536.0);
-        ufp8p24lnlut_16[i]  = round(f*65536.0*256.0);
-    }
-
-    for (i=0; i<=120; i++) {
-        d = sqrt(16.0 + i*2.0);
-        e = exp(16.0 + i*2.0);
-        f = log(16.0 + i*2.0);
-        /* sqrt */
-        ufp8p8sqrtlut_256[i]   = round(d*256.0);
-        ufp24p8sqrtlut_256[i]  = round(d*256.0);
-        ufp16p16sqrtlut_256[i] = round(d*65536.0);
-        ufp8p24sqrtlut_256[i]  = round(d*65536.0*256.0);
-        /* exp */
-        if (e>=16777216.0) e = 0.0;
-        ufp24p8explut_256[i]  = round(e*256.0);
-        if (e>=65536.0) e = 0.0;
-        ufp16p16explut_256[i] = round(e*65536.0);
-        if (e>=256.0) e = 0.0;
-        ufp8p24explut_256[i]  = round(e*65536.0*256.0);
-        ufp8p8explut_256[i]   = round(e*256.0);
-        /* ln */
-        ufp8p8lnlut_256[i]   = round(f*256.0);
-        ufp24p8lnlut_256[i]  = round(f*256.0);
-        ufp16p16lnlut_256[i] = round(f*65536.0);
-        ufp8p24lnlut_256[i]  = round(f*65536.0*256.0);
-    }
-
-    for (i=0; i<=128; i++) {
-        d = sqrt(256.0 + i*2.0*256.0);
-        e = exp(256.0 + i*2.0*256.0);
-        f = log(256.0 + i*2.0*256.0);
-        /* sqrt */
-        ufp24p8sqrtlut_64k[i]   = round(d*256.0);
-        ufp16p16sqrtlut_64k[i]  = round(d*65536.0);
-        /* exp */
-        e = 0.0;
-        ufp24p8explut_64k[i]   = round(e*256.0);
-        ufp16p16explut_64k[i]  = round(e*65536.0);
-        /* ln */
-        ufp24p8lnlut_64k[i]   = round(f*256.0);
-        ufp16p16lnlut_64k[i]  = round(f*65536.0);
-    }
-
-    for (i=0; i<=128; i++) {
-        d = sqrt(65536.0 + i*2.0*65536.0);
-        e = exp(65536.0 + i*2.0*65536.0);
-        f = log(65536.0 + i*2.0*65536.0);
-        /* sqrt */
-        ufp24p8sqrtlut_16m[i] = round(d*256.0);
-        /* exp */
-        e = 0.0;
-        ufp24p8explut_16m[i] = round(e*256.0);
-        /* ln */
-        ufp24p8lnlut_16m[i] = round(f*256.0);
-    }
-
-    printf("/* DO NOT INCLUDE THIS FILE DIRECTLY! ALWAYS ");
-    printf("INCLUDE fixedpointmath.h only!! */\n\n");
-
-    printf("/*\n * Fixed Point Math Macro Library - Look Up Tables\n");
-    printf(" * Licensed under version 2 of the GPL\n */\n\n");
-
-    printf("#ifndef __FIXEDPOINTMATHLUT_H__\n");
-    printf("#define __FIXEDPOINTMATHLUT_H__\n");
-
-    /* sqrt */
-    printf("\n#if defined(__FPM_ENABLE_SQRT_LUT__) || "
-                 "defined(__FPM_ENABLE_ALL_LUT__)\n");
-
-    outputccode("ufp8p8 sqrt 16",  "ufp8p8_t", "_ufp8p8sqrtlut_16",
-                ufp8p8sqrtlut_16, 129);
-    outputccode("ufp8p8 sqrt 256", "ufp8p8_t", "_ufp8p8sqrtlut_256",
-                ufp8p8sqrtlut_256, 121);
-
-    outputccode("ufp24p8 sqrt 16",  "ufp24p8_t", "_ufp24p8sqrtlut_16",
-                ufp24p8sqrtlut_16, 129);
-    outputccode("ufp24p8 sqrt 256", "ufp24p8_t", "_ufp24p8sqrtlut_256",
-                ufp24p8sqrtlut_256, 121);
-    outputccode("ufp24p8 sqrt 64k", "ufp24p8_t", "_ufp24p8sqrtlut_64k",
-                ufp24p8sqrtlut_64k, 129);
-    outputccode("ufp24p8 sqrt 16m", "ufp24p8_t", "_ufp24p8sqrtlut_16m",
-                ufp24p8sqrtlut_16m, 129);
-
-    outputccode("ufp16p16 sqrt 16",  "ufp16p16_t", "_ufp16p16sqrtlut_16",
-                ufp16p16sqrtlut_16, 129);
-    outputccode("ufp16p16 sqrt 256", "ufp16p16_t", "_ufp16p16sqrtlut_256",
-                ufp16p16sqrtlut_256, 121);
-    outputccode("ufp16p16 sqrt 64k", "ufp16p16_t", "_ufp16p16sqrtlut_64k",
-                ufp16p16sqrtlut_64k, 129);
-
-    outputccode("ufp8p24 sqrt 4",  "ufp8p24_t", "_ufp8p24sqrtlut_4",
-                ufp8p24sqrtlut_4, 129);
-    outputccode("ufp8p24 sqrt 16", "ufp8p24_t", "_ufp8p24sqrtlut_16",
-                ufp8p24sqrtlut_16, 129);
-    outputccode("ufp8p24 sqrt 256", "ufp8p24_t", "_ufp8p24sqrtlut_256",
-                ufp8p24sqrtlut_256, 121);
-
-    printf("\n#endif /* SQRT LUT */\n");
-
-    /* exp */
-    printf("\n#if defined(__FPM_ENABLE_EXP_LUT__) || "
-                 "defined(__FPM_ENABLE_ALL_LUT__)\n");
-
-    outputccode("ufp8p8 exp 16",  "ufp8p8_t", "_ufp8p8explut_16",
-                ufp8p8explut_16, 129);
-    outputccode("ufp8p8 exp 256", "ufp8p8_t", "_ufp8p8explut_256",
-                ufp8p8explut_256, 121);
-
-    outputccode("ufp24p8 exp 16",  "ufp24p8_t", "_ufp24p8explut_16",
-                ufp24p8explut_16, 129);
-    outputccode("ufp24p8 exp 256", "ufp24p8_t", "_ufp24p8explut_256",
-                ufp24p8explut_256, 121);
-    outputccode("ufp24p8 exp 64k", "ufp24p8_t", "_ufp24p8explut_64k",
-                ufp24p8explut_64k, 129);
-    outputccode("ufp24p8 exp 16m", "ufp24p8_t", "_ufp24p8explut_16m",
-                ufp24p8explut_16m, 129);
-
-    outputccode("ufp16p16 exp 16",  "ufp16p16_t", "_ufp16p16explut_16",
-                ufp16p16explut_16, 129);
-    outputccode("ufp16p16 exp 256", "ufp16p16_t", "_ufp16p16explut_256",
-                ufp16p16explut_256, 121);
-    outputccode("ufp16p16 exp 64k", "ufp16p16_t", "_ufp16p16explut_64k",
-                ufp16p16explut_64k, 129);
-
-    outputccode("ufp8p24 exp 4",  "ufp8p24_t", "_ufp8p24explut_4",
-                ufp8p24explut_4, 129);
-    outputccode("ufp8p24 exp 16", "ufp8p24_t", "_ufp8p24explut_16",
-                ufp8p24explut_16, 129);
-    outputccode("ufp8p24 exp 256", "ufp8p24_t", "_ufp8p24explut_256",
-                ufp8p24explut_256, 121);
-
-    printf("\n#endif /* EXP LUT */\n");
-
-    /* ln */
-    printf("\n#if defined(__FPM_ENABLE_LN_LUT__) || "
-                 "defined(__FPM_ENABLE_ALL_LUT__)\n");
-
-    outputccode("ufp8p8 ln 16",  "ufp8p8_t", "_ufp8p8lnlut_16",
-                ufp8p8lnlut_16, 129);
-    outputccode("ufp8p8 ln 256", "ufp8p8_t", "_ufp8p8lnlut_256",
-                ufp8p8lnlut_256, 121);
-
-    outputccode("ufp24p8 ln 16",  "ufp24p8_t", "_ufp24p8lnlut_16",
-                ufp24p8lnlut_16, 129);
-    outputccode("ufp24p8 ln 256", "ufp24p8_t", "_ufp24p8lnlut_256",
-                ufp24p8lnlut_256, 121);
-    outputccode("ufp24p8 ln 64k", "ufp24p8_t", "_ufp24p8lnlut_64k",
-                ufp24p8lnlut_64k, 129);
-    outputccode("ufp24p8 ln 16m", "ufp24p8_t", "_ufp24p8lnlut_16m",
-                ufp24p8lnlut_16m, 129);
-
-    outputccode("ufp16p16 ln 16",  "ufp16p16_t", "_ufp16p16lnlut_16",
-                ufp16p16lnlut_16, 129);
-    outputccode("ufp16p16 ln 256", "ufp16p16_t", "_ufp16p16lnlut_256",
-                ufp16p16lnlut_256, 121);
-    outputccode("ufp16p16 ln 64k", "ufp16p16_t", "_ufp16p16lnlut_64k",
-                ufp16p16lnlut_64k, 129);
-
-    outputccode("ufp8p24 ln 4",  "ufp8p24_t", "_ufp8p24lnlut_4",
-                ufp8p24lnlut_4, 129);
-    outputccode("ufp8p24 ln 16", "ufp8p24_t", "_ufp8p24lnlut_16",
-                ufp8p24lnlut_16, 129);
-    outputccode("ufp8p24 ln 256", "ufp8p24_t", "_ufp8p24lnlut_256",
-                ufp8p24lnlut_256, 121);
-
-    printf("\n#endif /* LN LUT */\n");
-
-    printf("\n#endif\n");
-
-    return 0;
-}
-
-/* ------------------------------------------------------------------------- */
-

Deleted: trunk/fpm/macro_version/precision.c
===================================================================
--- trunk/fpm/macro_version/precision.c	2008-03-20 00:13:08 UTC (rev 109)
+++ trunk/fpm/macro_version/precision.c	2008-03-20 00:14:39 UTC (rev 110)
@@ -1,171 +0,0 @@
-/* ------------------------------------------------------------------------- */
-
-/*
- * Fixed Point Math Macro Library - Precision
- *
- * (C)2005 by Ivo van Poorten
- * Licensed under version 2 of the GPL
- *
- * $Id$
- *
- */
-
-/* ------------------------------------------------------------------------- */
-
-#include <stdio.h>
-#include <math.h>
-#include <string.h>
-
-#include "fixedpointmath.h"
-
-/* ------------------------------------------------------------------------- */
-
-#define TYPEufp8p8   0
-#define TYPEufp24p8  1
-#define TYPEufp16p16 2
-#define TYPEufp8p24  3
-
-#define FUNCsqrt    0
-#define FUNCexp     1
-#define FUNCln      2
-#define FUNCpow     3
-
-#define PVAL      2.0L
-
-/* ------------------------------------------------------------------------- */
-
-double startat[4] = { 0.0L, 0.0L, 1.0L, 1.0L };
-
-/* ------------------------------------------------------------------------- */
-
-int main(int argc, char **argv)
-{
-    double f, g1 = 0.0L, g2 = 0.0L;
-    int fptype = -1, func = -1;
-
-    if (argc != 3) {
-        fprintf(stderr,"usage: %s <fixed-point-type> <function>\n", argv[0]);
-        return -1;
-    }
-
-    if (!strncmp(argv[1], "ufp8p8",   5))    fptype = TYPEufp8p8;
-    if (!strncmp(argv[1], "ufp24p8",  6))    fptype = TYPEufp24p8;
-    if (!strncmp(argv[1], "ufp16p16", 7))    fptype = TYPEufp16p16;
-    if (!strncmp(argv[1], "ufp8p24",  6))    fptype = TYPEufp8p24;
-
-    if (!strncmp(argv[2], "sqrt", 4))       func = FUNCsqrt;
-    if (!strncmp(argv[2], "exp",  3))       func = FUNCexp;
-    if (!strncmp(argv[2], "ln",   2))       func = FUNCln;
-    if (!strncmp(argv[2], "pow",  3))       func = FUNCpow;
-
-    if (fptype == -1) {
-        fprintf(stderr, "unknown type!\n");
-        return -1;
-    }
-
-    if (func == -1) {
-        fprintf(stderr, "unknown function!\n");
-        return -1;
-    }
-
-    for (f=startat[func]; f<256.0L; f+=0.01L) {
-
-        switch(func) {
-        case FUNCsqrt:
-            g1 = sqrt(f);
-            break;
-        case FUNCexp:
-            g1 = exp(f);
-            break;
-        case FUNCln:
-            g1 = log(f);
-            break;
-        case FUNCpow:
-            g1 = pow(f, PVAL);
-            break;
-        }
-
-        switch(fptype) {
-
-        case TYPEufp8p8:
-            switch(func) {
-            case FUNCsqrt:
-                g2 = ufp8p8tod ( sqrtufp8p8 (dtoufp8p8(f)) );
-                break;
-            case FUNCexp:
-                g2 = ufp8p8tod ( expufp8p8 (dtoufp8p8(f)) );
-                break;
-            case FUNCln:
-                g2 = ufp8p8tod ( lnufp8p8 (dtoufp8p8(f)) );
-                break;
-            case FUNCpow:
-                g2 = ufp8p8tod ( powufp8p8 (dtoufp8p8(f), dtoufp8p8(PVAL)) );
-                break;
-            }
-            break;
-
-        case TYPEufp24p8:
-            switch(func) {
-            case FUNCsqrt:
-                g2 = ufp24p8tod ( sqrtufp24p8 (dtoufp24p8(f)) );
-                break;
-            case FUNCexp:
-                g2 = ufp24p8tod ( expufp24p8 (dtoufp24p8(f)) );
-                break;
-            case FUNCln:
-                g2 = ufp24p8tod ( lnufp24p8 (dtoufp24p8(f)) );
-                break;
-            case FUNCpow:
-                g2 = ufp24p8tod ( powufp24p8 (dtoufp24p8(f),
-                                                        dtoufp24p8(PVAL)) );
-                break;
-            }
-            break;
-
-        case TYPEufp16p16:
-            switch(func) {
-            case FUNCsqrt:
-                g2 = ufp16p16tod ( sqrtufp16p16 (dtoufp16p16(f)) );
-                break;
-            case FUNCexp:
-                g2 = ufp16p16tod ( expufp16p16 (dtoufp16p16(f)) );
-                break;
-            case FUNCln:
-                g2 = ufp16p16tod ( lnufp16p16 (dtoufp16p16(f)) );
-                break;
-            case FUNCpow:
-                g2 = ufp16p16tod ( powufp16p16 (dtoufp16p16(f),
-                                                        dtoufp16p16(PVAL)) );
-                break;
-            }
-            break;
-
-        case TYPEufp8p24:
-            switch(func) {
-            case FUNCsqrt:
-                g2 = ufp8p24tod ( sqrtufp8p24 (dtoufp8p24(f)) );
-                break;
-            case FUNCexp:
-                g2 = ufp8p24tod ( expufp8p24 (dtoufp8p24(f)) );
-                break;
-            case FUNCln:
-                g2 = ufp8p24tod ( lnufp8p24 (dtoufp8p24(f)) );
-                break;
-            case FUNCpow:
-                g2 = ufp8p24tod ( powufp8p24 (dtoufp8p24(f),
-                                                        dtoufp8p24(PVAL)) );
-                break;
-            }
-            break;
-
-        } /* end of outer-switch */
-
-        printf("%0.8lf %0.8lf %0.8lf\n", f, g1, g2);
-
-    }
-
-    return 0;
-}
-
-/* ------------------------------------------------------------------------- */
-

Copied: trunk/fpm/misc (from rev 109, trunk/fpm/macro_version/misc)

Copied: trunk/fpm/precision.c (from rev 109, trunk/fpm/macro_version/precision.c)

Copied: trunk/fpm/tools (from rev 109, trunk/fpm/macro_version/tools)



From ivop at mail.berlios.de  Thu Mar 20 01:15:19 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Thu, 20 Mar 2008 01:15:19 +0100
Subject: [fpm-cvslog] r111 - trunk/fpm
Message-ID: <200803200015.m2K0FJm9021384@sheep.berlios.de>

Author: ivop
Date: 2008-03-20 01:15:19 +0100 (Thu, 20 Mar 2008)
New Revision: 111

Removed:
   trunk/fpm/macro_version/
Log:
remove subdir




From ivop at mail.berlios.de  Thu Mar 20 01:16:00 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Thu, 20 Mar 2008 01:16:00 +0100
Subject: [fpm-cvslog] r112 - trunk
Message-ID: <200803200016.m2K0G0m0022668@sheep.berlios.de>

Author: ivop
Date: 2008-03-20 01:16:00 +0100 (Thu, 20 Mar 2008)
New Revision: 112

Added:
   trunk/fpm2/
Log:
directory for rewrite




From ivop at mail.berlios.de  Thu Mar 20 12:30:59 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Thu, 20 Mar 2008 12:30:59 +0100
Subject: [fpm-cvslog] r113 - trunk/fpm2
Message-ID: <200803201130.m2KBUxiH022756@sheep.berlios.de>

Author: ivop
Date: 2008-03-20 12:30:58 +0100 (Thu, 20 Mar 2008)
New Revision: 113

Added:
   trunk/fpm2/LICENSE
Log:
LGPL


Added: trunk/fpm2/LICENSE
===================================================================
--- trunk/fpm2/LICENSE	2008-03-20 00:16:00 UTC (rev 112)
+++ trunk/fpm2/LICENSE	2008-03-20 11:30:58 UTC (rev 113)
@@ -0,0 +1,504 @@
+                  GNU LESSER GENERAL PUBLIC LICENSE
+                       Version 2.1, February 1999
+
+ Copyright (C) 1991, 1999 Free Software Foundation, Inc.
+ 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ Everyone is permitted to copy and distribute verbatim copies
+ of this license document, but changing it is not allowed.
+
+[This is the first released version of the Lesser GPL.  It also counts
+ as the successor of the GNU Library Public License, version 2, hence
+ the version number 2.1.]
+
+                            Preamble
+
+  The licenses for most software are designed to take away your
+freedom to share and change it.  By contrast, the GNU General Public
+Licenses are intended to guarantee your freedom to share and change
+free software--to make sure the software is free for all its users.
+
+  This license, the Lesser General Public License, applies to some
+specially designated software packages--typically libraries--of the
+Free Software Foundation and other authors who decide to use it.  You
+can use it too, but we suggest you first think carefully about whether
+this license or the ordinary General Public License is the better
+strategy to use in any particular case, based on the explanations below.
+
+  When we speak of free software, we are referring to freedom of use,
+not price.  Our General Public Licenses are designed to make sure that
+you have the freedom to distribute copies of free software (and charge
+for this service if you wish); that you receive source code or can get
+it if you want it; that you can change the software and use pieces of
+it in new free programs; and that you are informed that you can do
+these things.
+
+  To protect your rights, we need to make restrictions that forbid
+distributors to deny you these rights or to ask you to surrender these
+rights.  These restrictions translate to certain responsibilities for
+you if you distribute copies of the library or if you modify it.
+
+  For example, if you distribute copies of the library, whether gratis
+or for a fee, you must give the recipients all the rights that we gave
+you.  You must make sure that they, too, receive or can get the source
+code.  If you link other code with the library, you must provide
+complete object files to the recipients, so that they can relink them
+with the library after making changes to the library and recompiling
+it.  And you must show them these terms so they know their rights.
+
+  We protect your rights with a two-step method: (1) we copyright the
+library, and (2) we offer you this license, which gives you legal
+permission to copy, distribute and/or modify the library.
+
+  To protect each distributor, we want to make it very clear that
+there is no warranty for the free library.  Also, if the library is
+modified by someone else and passed on, the recipients should know
+that what they have is not the original version, so that the original
+author's reputation will not be affected by problems that might be
+introduced by others.
+
+  Finally, software patents pose a constant threat to the existence of
+any free program.  We wish to make sure that a company cannot
+effectively restrict the users of a free program by obtaining a
+restrictive license from a patent holder.  Therefore, we insist that
+any patent license obtained for a version of the library must be
+consistent with the full freedom of use specified in this license.
+
+  Most GNU software, including some libraries, is covered by the
+ordinary GNU General Public License.  This license, the GNU Lesser
+General Public License, applies to certain designated libraries, and
+is quite different from the ordinary General Public License.  We use
+this license for certain libraries in order to permit linking those
+libraries into non-free programs.
+
+  When a program is linked with a library, whether statically or using
+a shared library, the combination of the two is legally speaking a
+combined work, a derivative of the original library.  The ordinary
+General Public License therefore permits such linking only if the
+entire combination fits its criteria of freedom.  The Lesser General
+Public License permits more lax criteria for linking other code with
+the library.
+
+  We call this license the "Lesser" General Public License because it
+does Less to protect the user's freedom than the ordinary General
+Public License.  It also provides other free software developers Less
+of an advantage over competing non-free programs.  These disadvantages
+are the reason we use the ordinary General Public License for many
+libraries.  However, the Lesser license provides advantages in certain
+special circumstances.
+
+  For example, on rare occasions, there may be a special need to
+encourage the widest possible use of a certain library, so that it becomes
+a de-facto standard.  To achieve this, non-free programs must be
+allowed to use the library.  A more frequent case is that a free
+library does the same job as widely used non-free libraries.  In this
+case, there is little to gain by limiting the free library to free
+software only, so we use the Lesser General Public License.
+
+  In other cases, permission to use a particular library in non-free
+programs enables a greater number of people to use a large body of
+free software.  For example, permission to use the GNU C Library in
+non-free programs enables many more people to use the whole GNU
+operating system, as well as its variant, the GNU/Linux operating
+system.
+
+  Although the Lesser General Public License is Less protective of the
+users' freedom, it does ensure that the user of a program that is
+linked with the Library has the freedom and the wherewithal to run
+that program using a modified version of the Library.
+
+  The precise terms and conditions for copying, distribution and
+modification follow.  Pay close attention to the difference between a
+"work based on the library" and a "work that uses the library".  The
+former contains code derived from the library, whereas the latter must
+be combined with the library in order to run.
+
+                  GNU LESSER GENERAL PUBLIC LICENSE
+   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
+
+  0. This License Agreement applies to any software library or other
+program which contains a notice placed by the copyright holder or
+other authorized party saying it may be distributed under the terms of
+this Lesser General Public License (also called "this License").
+Each licensee is addressed as "you".
+
+  A "library" means a collection of software functions and/or data
+prepared so as to be conveniently linked with application programs
+(which use some of those functions and data) to form executables.
+
+  The "Library", below, refers to any such software library or work
+which has been distributed under these terms.  A "work based on the
+Library" means either the Library or any derivative work under
+copyright law: that is to say, a work containing the Library or a
+portion of it, either verbatim or with modifications and/or translated
+straightforwardly into another language.  (Hereinafter, translation is
+included without limitation in the term "modification".)
+
+  "Source code" for a work means the preferred form of the work for
+making modifications to it.  For a library, complete source code means
+all the source code for all modules it contains, plus any associated
+interface definition files, plus the scripts used to control compilation
+and installation of the library.
+
+  Activities other than copying, distribution and modification are not
+covered by this License; they are outside its scope.  The act of
+running a program using the Library is not restricted, and output from
+such a program is covered only if its contents constitute a work based
+on the Library (independent of the use of the Library in a tool for
+writing it).  Whether that is true depends on what the Library does
+and what the program that uses the Library does.
+
+  1. You may copy and distribute verbatim copies of the Library's
+complete source code as you receive it, in any medium, provided that
+you conspicuously and appropriately publish on each copy an
+appropriate copyright notice and disclaimer of warranty; keep intact
+all the notices that refer to this License and to the absence of any
+warranty; and distribute a copy of this License along with the
+Library.
+
+  You may charge a fee for the physical act of transferring a copy,
+and you may at your option offer warranty protection in exchange for a
+fee.
+
+  2. You may modify your copy or copies of the Library or any portion
+of it, thus forming a work based on the Library, and copy and
+distribute such modifications or work under the terms of Section 1
+above, provided that you also meet all of these conditions:
+
+    a) The modified work must itself be a software library.
+
+    b) You must cause the files modified to carry prominent notices
+    stating that you changed the files and the date of any change.
+
+    c) You must cause the whole of the work to be licensed at no
+    charge to all third parties under the terms of this License.
+
+    d) If a facility in the modified Library refers to a function or a
+    table of data to be supplied by an application program that uses
+    the facility, other than as an argument passed when the facility
+    is invoked, then you must make a good faith effort to ensure that,
+    in the event an application does not supply such function or
+    table, the facility still operates, and performs whatever part of
+    its purpose remains meaningful.
+
+    (For example, a function in a library to compute square roots has
+    a purpose that is entirely well-defined independent of the
+    application.  Therefore, Subsection 2d requires that any
+    application-supplied function or table used by this function must
+    be optional: if the application does not supply it, the square
+    root function must still compute square roots.)
+
+These requirements apply to the modified work as a whole.  If
+identifiable sections of that work are not derived from the Library,
+and can be reasonably considered independent and separate works in
+themselves, then this License, and its terms, do not apply to those
+sections when you distribute them as separate works.  But when you
+distribute the same sections as part of a whole which is a work based
+on the Library, the distribution of the whole must be on the terms of
+this License, whose permissions for other licensees extend to the
+entire whole, and thus to each and every part regardless of who wrote
+it.
+
+Thus, it is not the intent of this section to claim rights or contest
+your rights to work written entirely by you; rather, the intent is to
+exercise the right to control the distribution of derivative or
+collective works based on the Library.
+
+In addition, mere aggregation of another work not based on the Library
+with the Library (or with a work based on the Library) on a volume of
+a storage or distribution medium does not bring the other work under
+the scope of this License.
+
+  3. You may opt to apply the terms of the ordinary GNU General Public
+License instead of this License to a given copy of the Library.  To do
+this, you must alter all the notices that refer to this License, so
+that they refer to the ordinary GNU General Public License, version 2,
+instead of to this License.  (If a newer version than version 2 of the
+ordinary GNU General Public License has appeared, then you can specify
+that version instead if you wish.)  Do not make any other change in
+these notices.
+
+  Once this change is made in a given copy, it is irreversible for
+that copy, so the ordinary GNU General Public License applies to all
+subsequent copies and derivative works made from that copy.
+
+  This option is useful when you wish to copy part of the code of
+the Library into a program that is not a library.
+
+  4. You may copy and distribute the Library (or a portion or
+derivative of it, under Section 2) in object code or executable form
+under the terms of Sections 1 and 2 above provided that you accompany
+it with the complete corresponding machine-readable source code, which
+must be distributed under the terms of Sections 1 and 2 above on a
+medium customarily used for software interchange.
+
+  If distribution of object code is made by offering access to copy
+from a designated place, then offering equivalent access to copy the
+source code from the same place satisfies the requirement to
+distribute the source code, even though third parties are not
+compelled to copy the source along with the object code.
+
+  5. A program that contains no derivative of any portion of the
+Library, but is designed to work with the Library by being compiled or
+linked with it, is called a "work that uses the Library".  Such a
+work, in isolation, is not a derivative work of the Library, and
+therefore falls outside the scope of this License.
+
+  However, linking a "work that uses the Library" with the Library
+creates an executable that is a derivative of the Library (because it
+contains portions of the Library), rather than a "work that uses the
+library".  The executable is therefore covered by this License.
+Section 6 states terms for distribution of such executables.
+
+  When a "work that uses the Library" uses material from a header file
+that is part of the Library, the object code for the work may be a
+derivative work of the Library even though the source code is not.
+Whether this is true is especially significant if the work can be
+linked without the Library, or if the work is itself a library.  The
+threshold for this to be true is not precisely defined by law.
+
+  If such an object file uses only numerical parameters, data
+structure layouts and accessors, and small macros and small inline
+functions (ten lines or less in length), then the use of the object
+file is unrestricted, regardless of whether it is legally a derivative
+work.  (Executables containing this object code plus portions of the
+Library will still fall under Section 6.)
+
+  Otherwise, if the work is a derivative of the Library, you may
+distribute the object code for the work under the terms of Section 6.
+Any executables containing that work also fall under Section 6,
+whether or not they are linked directly with the Library itself.
+
+  6. As an exception to the Sections above, you may also combine or
+link a "work that uses the Library" with the Library to produce a
+work containing portions of the Library, and distribute that work
+under terms of your choice, provided that the terms permit
+modification of the work for the customer's own use and reverse
+engineering for debugging such modifications.
+
+  You must give prominent notice with each copy of the work that the
+Library is used in it and that the Library and its use are covered by
+this License.  You must supply a copy of this License.  If the work
+during execution displays copyright notices, you must include the
+copyright notice for the Library among them, as well as a reference
+directing the user to the copy of this License.  Also, you must do one
+of these things:
+
+    a) Accompany the work with the complete corresponding
+    machine-readable source code for the Library including whatever
+    changes were used in the work (which must be distributed under
+    Sections 1 and 2 above); and, if the work is an executable linked
+    with the Library, with the complete machine-readable "work that
+    uses the Library", as object code and/or source code, so that the
+    user can modify the Library and then relink to produce a modified
+    executable containing the modified Library.  (It is understood
+    that the user who changes the contents of definitions files in the
+    Library will not necessarily be able to recompile the application
+    to use the modified definitions.)
+
+    b) Use a suitable shared library mechanism for linking with the
+    Library.  A suitable mechanism is one that (1) uses at run time a
+    copy of the library already present on the user's computer system,
+    rather than copying library functions into the executable, and (2)
+    will operate properly with a modified version of the library, if
+    the user installs one, as long as the modified version is
+    interface-compatible with the version that the work was made with.
+
+    c) Accompany the work with a written offer, valid for at
+    least three years, to give the same user the materials
+    specified in Subsection 6a, above, for a charge no more
+    than the cost of performing this distribution.
+
+    d) If distribution of the work is made by offering access to copy
+    from a designated place, offer equivalent access to copy the above
+    specified materials from the same place.
+
+    e) Verify that the user has already received a copy of these
+    materials or that you have already sent this user a copy.
+
+  For an executable, the required form of the "work that uses the
+Library" must include any data and utility programs needed for
+reproducing the executable from it.  However, as a special exception,
+the materials to be distributed need not include anything that is
+normally distributed (in either source or binary form) with the major
+components (compiler, kernel, and so on) of the operating system on
+which the executable runs, unless that component itself accompanies
+the executable.
+
+  It may happen that this requirement contradicts the license
+restrictions of other proprietary libraries that do not normally
+accompany the operating system.  Such a contradiction means you cannot
+use both them and the Library together in an executable that you
+distribute.
+
+  7. You may place library facilities that are a work based on the
+Library side-by-side in a single library together with other library
+facilities not covered by this License, and distribute such a combined
+library, provided that the separate distribution of the work based on
+the Library and of the other library facilities is otherwise
+permitted, and provided that you do these two things:
+
+    a) Accompany the combined library with a copy of the same work
+    based on the Library, uncombined with any other library
+    facilities.  This must be distributed under the terms of the
+    Sections above.
+
+    b) Give prominent notice with the combined library of the fact
+    that part of it is a work based on the Library, and explaining
+    where to find the accompanying uncombined form of the same work.
+
+  8. You may not copy, modify, sublicense, link with, or distribute
+the Library except as expressly provided under this License.  Any
+attempt otherwise to copy, modify, sublicense, link with, or
+distribute the Library is void, and will automatically terminate your
+rights under this License.  However, parties who have received copies,
+or rights, from you under this License will not have their licenses
+terminated so long as such parties remain in full compliance.
+
+  9. You are not required to accept this License, since you have not
+signed it.  However, nothing else grants you permission to modify or
+distribute the Library or its derivative works.  These actions are
+prohibited by law if you do not accept this License.  Therefore, by
+modifying or distributing the Library (or any work based on the
+Library), you indicate your acceptance of this License to do so, and
+all its terms and conditions for copying, distributing or modifying
+the Library or works based on it.
+
+  10. Each time you redistribute the Library (or any work based on the
+Library), the recipient automatically receives a license from the
+original licensor to copy, distribute, link with or modify the Library
+subject to these terms and conditions.  You may not impose any further
+restrictions on the recipients' exercise of the rights granted herein.
+You are not responsible for enforcing compliance by third parties with
+this License.
+
+  11. If, as a consequence of a court judgment or allegation of patent
+infringement or for any other reason (not limited to patent issues),
+conditions are imposed on you (whether by court order, agreement or
+otherwise) that contradict the conditions of this License, they do not
+excuse you from the conditions of this License.  If you cannot
+distribute so as to satisfy simultaneously your obligations under this
+License and any other pertinent obligations, then as a consequence you
+may not distribute the Library at all.  For example, if a patent
+license would not permit royalty-free redistribution of the Library by
+all those who receive copies directly or indirectly through you, then
+the only way you could satisfy both it and this License would be to
+refrain entirely from distribution of the Library.
+
+If any portion of this section is held invalid or unenforceable under any
+particular circumstance, the balance of the section is intended to apply,
+and the section as a whole is intended to apply in other circumstances.
+
+It is not the purpose of this section to induce you to infringe any
+patents or other property right claims or to contest validity of any
+such claims; this section has the sole purpose of protecting the
+integrity of the free software distribution system which is
+implemented by public license practices.  Many people have made
+generous contributions to the wide range of software distributed
+through that system in reliance on consistent application of that
+system; it is up to the author/donor to decide if he or she is willing
+to distribute software through any other system and a licensee cannot
+impose that choice.
+
+This section is intended to make thoroughly clear what is believed to
+be a consequence of the rest of this License.
+
+  12. If the distribution and/or use of the Library is restricted in
+certain countries either by patents or by copyrighted interfaces, the
+original copyright holder who places the Library under this License may add
+an explicit geographical distribution limitation excluding those countries,
+so that distribution is permitted only in or among countries not thus
+excluded.  In such case, this License incorporates the limitation as if
+written in the body of this License.
+
+  13. The Free Software Foundation may publish revised and/or new
+versions of the Lesser General Public License from time to time.
+Such new versions will be similar in spirit to the present version,
+but may differ in detail to address new problems or concerns.
+
+Each version is given a distinguishing version number.  If the Library
+specifies a version number of this License which applies to it and
+"any later version", you have the option of following the terms and
+conditions either of that version or of any later version published by
+the Free Software Foundation.  If the Library does not specify a
+license version number, you may choose any version ever published by
+the Free Software Foundation.
+
+  14. If you wish to incorporate parts of the Library into other free
+programs whose distribution conditions are incompatible with these,
+write to the author to ask for permission.  For software which is
+copyrighted by the Free Software Foundation, write to the Free
+Software Foundation; we sometimes make exceptions for this.  Our
+decision will be guided by the two goals of preserving the free status
+of all derivatives of our free software and of promoting the sharing
+and reuse of software generally.
+
+                            NO WARRANTY
+
+  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO
+WARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.
+EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR
+OTHER PARTIES PROVIDE THE LIBRARY "AS IS" WITHOUT WARRANTY OF ANY
+KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE
+IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE
+LIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME
+THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.
+
+  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN
+WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY
+AND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU
+FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR
+CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE
+LIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING
+RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A
+FAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF
+SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH
+DAMAGES.
+
+                     END OF TERMS AND CONDITIONS
+
+           How to Apply These Terms to Your New Libraries
+
+  If you develop a new library, and you want it to be of the greatest
+possible use to the public, we recommend making it free software that
+everyone can redistribute and change.  You can do so by permitting
+redistribution under these terms (or, alternatively, under the terms of the
+ordinary General Public License).
+
+  To apply these terms, attach the following notices to the library.  It is
+safest to attach them to the start of each source file to most effectively
+convey the exclusion of warranty; and each file should have at least the
+"copyright" line and a pointer to where the full notice is found.
+
+    <one line to give the library's name and a brief idea of what it does.>
+    Copyright (C) <year>  <name of author>
+
+    This library is free software; you can redistribute it and/or
+    modify it under the terms of the GNU Lesser General Public
+    License as published by the Free Software Foundation; either
+    version 2.1 of the License, or (at your option) any later version.
+
+    This library is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+    Lesser General Public License for more details.
+
+    You should have received a copy of the GNU Lesser General Public
+    License along with this library; if not, write to the Free Software
+    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+
+Also add information on how to contact you by electronic and paper mail.
+
+You should also get your employer (if you work as a programmer) or your
+school, if any, to sign a "copyright disclaimer" for the library, if
+necessary.  Here is a sample; alter the names:
+
+  Yoyodyne, Inc., hereby disclaims all copyright interest in the
+  library `Frob' (a library for tweaking knobs) written by James Random Hacker.
+
+  <signature of Ty Coon>, 1 April 1990
+  Ty Coon, President of Vice
+
+That's all there is to it!
+
+



From ivop at mail.berlios.de  Thu Mar 20 12:31:44 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Thu, 20 Mar 2008 12:31:44 +0100
Subject: [fpm-cvslog] r114 - in trunk/fpm2: . include include/fpm
Message-ID: <200803201131.m2KBVims024475@sheep.berlios.de>

Author: ivop
Date: 2008-03-20 12:31:42 +0100 (Thu, 20 Mar 2008)
New Revision: 114

Added:
   trunk/fpm2/include/
   trunk/fpm2/include/fpm/
   trunk/fpm2/include/fpm/fpm.h
Log:
first draft (types, conversion, mul and div)


Added: trunk/fpm2/include/fpm/fpm.h
===================================================================
--- trunk/fpm2/include/fpm/fpm.h	2008-03-20 11:30:58 UTC (rev 113)
+++ trunk/fpm2/include/fpm/fpm.h	2008-03-20 11:31:42 UTC (rev 114)
@@ -0,0 +1,228 @@
+/* -------------------------------------------------------------------------
+ *
+ * Fixed Point Math Library
+ *
+ * Copyright (C) 2005, 2006, 2008 by Ivo van Poorten
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
+ * 02110-1301 USA
+ *
+ * ------------------------------------------------------------------------- */
+
+#ifndef FPM_FPM_H
+#define FPM_FPM_H
+
+/* ------------------------------------------------------------------------- */
+
+/* Be sure we have the right types. Define one or both of FPM_MISSING_* defines
+ * when your system does not have one or both of these headers.
+ */
+
+#ifndef FPM_MISSING_STDINT_H
+#   include <stdint.h>
+#else
+#   ifndef FPM_MISSING_INTTYPES_H
+#       include <inttypes.h>
+#   else
+typedef unsigned char        uint8_t;
+typedef   signed char         int8_t;
+typedef unsigned short      uint16_t;
+typedef   signed short       int16_t;
+typedef unsigned int    i   uint32_t;
+typedef   signed int         int32_t;
+typedef unsigned long long  uint64_t;
+typedef   signed long long   int64_t;
+#   endif
+#endif
+
+/* ------------------------------------------------------------------------- */
+
+/* Attributes. By default, they are all off. Define HAVE_* to enable
+ * one or all of them.
+ */
+
+#ifdef HAVE_ALWAYS_INLINE
+#   define fpm_always_inline __attribute__((always_inline)) inline
+#else
+#   define fpm_always_inline inline
+#endif
+
+#ifdef HAVE_UNUSED
+#   define fpm_unused __attribute__((unused))
+#else
+#   define fpm_unused
+#endif
+
+#define FPMFUNC static fpm_always_inline
+
+/* ------------------------------------------------------------------------- */
+
+/* TYPES */
+
+/* Signed fixed point types */
+
+typedef int16_t fp8p8_t;
+typedef int32_t fp24p8_t;
+typedef int32_t fp16p16_t;
+typedef int32_t fp8p24_t;
+
+/* Unsigned fixed point types */
+
+typedef uint16_t ufp8p8_t;
+typedef uint32_t ufp24p8_t;
+typedef uint32_t ufp16p16_t;
+typedef uint32_t ufp8p24_t;
+
+/* ------------------------------------------------------------------------- */
+
+/* CONVERSION */
+
+/* int to fixed point */
+
+FPMFUNC  fp8p8_t   itofp8p8   (int x) { return x << 8;  }
+FPMFUNC  fp24p8_t  itofp24p8  (int x) { return x << 8;  }
+FPMFUNC  fp16p16_t itofp16p16 (int x) { return x << 16; }
+FPMFUNC  fp8p24_t  itofp8p24  (int x) { return x << 24; }
+FPMFUNC ufp8p8_t   itoufp8p8  (int x) { return x << 8;  }
+FPMFUNC ufp24p8_t  itoufp24p8 (int x) { return x << 8;  }
+FPMFUNC ufp16p16_t itoufp16p16(int x) { return x << 16; }
+FPMFUNC ufp8p24_t  itoufp8p24 (int x) { return x << 24; }
+
+/* float to fixed point */
+
+FPMFUNC  fp8p8_t   ftofp8p8   (float x) { return x * 256;      }
+FPMFUNC  fp24p8_t  ftofp24p8  (float x) { return x * 256;      }
+FPMFUNC  fp16p16_t ftofp16p16 (float x) { return x * 65536;    }
+FPMFUNC  fp8p24_t  ftofp8p24  (float x) { return x * 16777216; }
+FPMFUNC ufp8p8_t   ftoufp8p8  (float x) { return x * 256;      }
+FPMFUNC ufp24p8_t  ftoufp24p8 (float x) { return x * 256;      }
+FPMFUNC ufp16p16_t ftoufp16p16(float x) { return x * 65536;    }
+FPMFUNC ufp8p24_t  ftoufp8p24 (float x) { return x * 16777216; }
+
+/* double to fixed point */
+
+FPMFUNC  fp8p8_t   dtofp8p8   (double x) { return x * 256;      }
+FPMFUNC  fp24p8_t  dtofp24p8  (double x) { return x * 256;      }
+FPMFUNC  fp16p16_t dtofp16p16 (double x) { return x * 65536;    }
+FPMFUNC  fp8p24_t  dtofp8p24  (double x) { return x * 16777216; }
+FPMFUNC ufp8p8_t   dtoufp8p8  (double x) { return x * 256;      }
+FPMFUNC ufp24p8_t  dtoufp24p8 (double x) { return x * 256;      }
+FPMFUNC ufp16p16_t dtoufp16p16(double x) { return x * 65536;    }
+FPMFUNC ufp8p24_t  dtoufp8p24 (double x) { return x * 16777216; }
+
+/* fixed point to int (truncated) */
+
+FPMFUNC int  fp8p8toi  ( fp8p8_t   x) { return x >> 8;  }
+FPMFUNC int  fp24p8toi ( fp24p8_t  x) { return x >> 8;  }
+FPMFUNC int  fp16p16toi( fp16p16_t x) { return x >> 16; }
+FPMFUNC int  fp8p24toi ( fp8p24_t  x) { return x >> 24; }
+FPMFUNC int ufp8p8toi  (ufp8p8_t   x) { return x >> 8;  }
+FPMFUNC int ufp24p8toi (ufp24p8_t  x) { return x >> 8;  }
+FPMFUNC int ufp16p16toi(ufp16p16_t x) { return x >> 16; }
+FPMFUNC int ufp8p24toi (ufp8p24_t  x) { return x >> 24; }
+
+/* fixed point to float */
+
+FPMFUNC float  fp8p8tof  ( fp8p8_t   x) { return (float) x / 256.0;      }
+FPMFUNC float  fp24p8tof ( fp24p8_t  x) { return (float) x / 256.0;      }
+FPMFUNC float  fp16p16tof( fp16p16_t x) { return (float) x / 65536.0;    }
+FPMFUNC float  fp8p24tof ( fp8p24_t  x) { return (float) x / 16777216.0; }
+FPMFUNC float ufp8p8tof  (ufp8p8_t   x) { return (float) x / 256.0;      }
+FPMFUNC float ufp24p8tof (ufp24p8_t  x) { return (float) x / 256.0;      }
+FPMFUNC float ufp16p16tof(ufp16p16_t x) { return (float) x / 65536.0;    }
+FPMFUNC float ufp8p24tof (ufp8p24_t  x) { return (float) x / 16777216.0; }
+
+/* fixed point to double */
+
+FPMFUNC double  fp8p8tod  ( fp8p8_t   x) { return (double) x / 256.0L;      }
+FPMFUNC double  fp24p8tod ( fp24p8_t  x) { return (double) x / 256.0L;      }
+FPMFUNC double  fp16p16tod( fp16p16_t x) { return (double) x / 65536.0L;    }
+FPMFUNC double  fp8p24tod ( fp8p24_t  x) { return (double) x / 16777216.0L; }
+FPMFUNC double ufp8p8tod  (ufp8p8_t   x) { return (double) x / 256.0L;      }
+FPMFUNC double ufp24p8tod (ufp24p8_t  x) { return (double) x / 256.0L;      }
+FPMFUNC double ufp16p16tod(ufp16p16_t x) { return (double) x / 65536.0L;    }
+FPMFUNC double ufp8p24tod (ufp8p24_t  x) { return (double) x / 16777216.0L; }
+
+/* fixed point to fixed point */
+
+FPMFUNC fp8p8_t     fp8p8tofp8p8   ( fp8p8_t x) { return x;       }
+FPMFUNC fp24p8_t    fp8p8tofp24p8  ( fp8p8_t x) { return x;       }
+FPMFUNC fp16p16_t   fp8p8tofp16p16 ( fp8p8_t x) { return x << 8;  }
+FPMFUNC fp8p24_t    fp8p8tofp8p24  ( fp8p8_t x) { return x << 16; }
+FPMFUNC ufp8p8_t   ufp8p8toufp8p8  (ufp8p8_t x) { return x;       }
+FPMFUNC ufp24p8_t  ufp8p8toufp24p8 (ufp8p8_t x) { return x;       }
+FPMFUNC ufp16p16_t ufp8p8toufp16p16(ufp8p8_t x) { return x << 8;  }
+FPMFUNC ufp8p24_t  ufp8p8toufp8p24 (ufp8p8_t x) { return x << 16; }
+
+FPMFUNC fp8p8_t     fp24p8tofp8p8   ( fp24p8_t x) { return x;       }
+FPMFUNC fp24p8_t    fp24p8tofp24p8  ( fp24p8_t x) { return x;       }
+FPMFUNC fp16p16_t   fp24p8tofp16p16 ( fp24p8_t x) { return x << 8;  }
+FPMFUNC fp8p24_t    fp24p8tofp8p24  ( fp24p8_t x) { return x << 16; }
+FPMFUNC ufp8p8_t   ufp24p8toufp8p8  (ufp24p8_t x) { return x;       }
+FPMFUNC ufp24p8_t  ufp24p8toufp24p8 (ufp24p8_t x) { return x;       }
+FPMFUNC ufp16p16_t ufp24p8toufp16p16(ufp24p8_t x) { return x << 8;  }
+FPMFUNC ufp8p24_t  ufp24p8toufp8p24 (ufp24p8_t x) { return x << 16; }
+
+FPMFUNC fp8p8_t     fp16p16tofp8p8   ( fp16p16_t x) { return x >> 8; }
+FPMFUNC fp24p8_t    fp16p16tofp24p8  ( fp16p16_t x) { return x >> 8; }
+FPMFUNC fp16p16_t   fp16p16tofp16p16 ( fp16p16_t x) { return x;      }
+FPMFUNC fp8p24_t    fp16p16tofp8p24  ( fp16p16_t x) { return x << 8; }
+FPMFUNC ufp8p8_t   ufp16p16toufp8p8  (ufp16p16_t x) { return x >> 8; }
+FPMFUNC ufp24p8_t  ufp16p16toufp24p8 (ufp16p16_t x) { return x >> 8; }
+FPMFUNC ufp16p16_t ufp16p16toufp16p16(ufp16p16_t x) { return x;      }
+FPMFUNC ufp8p24_t  ufp16p16toufp8p24 (ufp16p16_t x) { return x << 8; }
+
+FPMFUNC fp8p8_t     fp8p24tofp8p8   ( fp8p24_t x) { return x >> 16; }
+FPMFUNC fp24p8_t    fp8p24tofp24p8  ( fp8p24_t x) { return x >> 16; }
+FPMFUNC fp16p16_t   fp8p24tofp16p16 ( fp8p24_t x) { return x >> 8;  }
+FPMFUNC fp8p24_t    fp8p24tofp8p24  ( fp8p24_t x) { return x;       }
+FPMFUNC ufp8p8_t   ufp8p24toufp8p8  (ufp8p24_t x) { return x >> 16; }
+FPMFUNC ufp24p8_t  ufp8p24toufp24p8 (ufp8p24_t x) { return x >> 16; }
+FPMFUNC ufp16p16_t ufp8p24toufp16p16(ufp8p24_t x) { return x >> 8;  }
+FPMFUNC ufp8p24_t  ufp8p24toufp8p24 (ufp8p24_t x) { return x;       }
+
+/* ------------------------------------------------------------------------- */
+
+/* BASIC MATH */
+
+/* multiplication (x*y) */
+
+FPMFUNC fp8p8_t    mulfp8p8   ( fp8p8_t   x,  fp8p8_t   y) { return ( int32_t) x * y >> 8;  }
+FPMFUNC fp24p8_t   mulfp24p8  ( fp24p8_t  x,  fp24p8_t  y) { return ( int64_t) x * y >> 8;  }
+FPMFUNC fp16p16_t  mulfp16p16 ( fp16p16_t x,  fp16p16_t y) { return ( int64_t) x * y >> 16; }
+FPMFUNC fp8p24_t   mulfp8p24  ( fp8p24_t  x,  fp8p24_t  y) { return ( int64_t) x * y >> 24; }
+FPMFUNC ufp8p8_t   mulufp8p8  (ufp8p8_t   x, ufp8p8_t   y) { return (uint32_t) x * y >> 8;  }
+FPMFUNC ufp24p8_t  mulufp24p8 (ufp24p8_t  x, ufp24p8_t  y) { return (uint64_t) x * y >> 8;  }
+FPMFUNC ufp16p16_t mulufp16p16(ufp16p16_t x, ufp16p16_t y) { return (uint64_t) x * y >> 16; }
+FPMFUNC ufp8p24_t  mulufp8p24 (ufp8p24_t  x, ufp8p24_t  y) { return (uint64_t) x * y >> 24; }
+
+/* division (x/y) */
+
+FPMFUNC fp8p8_t    divfp8p8   ( fp8p8_t   x,  fp8p8_t   y) { return (( int32_t) x << 8 ) / y; }
+FPMFUNC fp24p8_t   divfp24p8  ( fp24p8_t  x,  fp24p8_t  y) { return (( int64_t) x << 8 ) / y; }
+FPMFUNC fp16p16_t  divfp16p16 ( fp16p16_t x,  fp16p16_t y) { return (( int64_t) x << 16) / y; }
+FPMFUNC fp8p24_t   divfp8p24  ( fp8p24_t  x,  fp8p24_t  y) { return (( int64_t) x << 24) / y; }
+FPMFUNC ufp8p8_t   divufp8p8  (ufp8p8_t   x, ufp8p8_t   y) { return ((uint32_t) x << 8 ) / y; }
+FPMFUNC ufp24p8_t  divufp24p8 (ufp24p8_t  x, ufp24p8_t  y) { return ((uint64_t) x << 8 ) / y; }
+FPMFUNC ufp16p16_t divufp16p16(ufp16p16_t x, ufp16p16_t y) { return ((uint64_t) x << 16) / y; }
+FPMFUNC ufp8p24_t  divufp8p24 (ufp8p24_t  x, ufp8p24_t  y) { return ((uint64_t) x << 24) / y; }
+
+/* ------------------------------------------------------------------------- */
+
+/* ADVANCED MATH */
+
+/* ------------------------------------------------------------------------- */
+
+#endif



From ivop at mail.berlios.de  Thu Mar 20 13:22:11 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Thu, 20 Mar 2008 13:22:11 +0100
Subject: [fpm-cvslog] r115 - trunk/fpm2/include/fpm
Message-ID: <200803201222.m2KCMBqJ015137@sheep.berlios.de>

Author: ivop
Date: 2008-03-20 13:22:11 +0100 (Thu, 20 Mar 2008)
New Revision: 115

Modified:
   trunk/fpm2/include/fpm/fpm.h
Log:
fast mul, less precision


Modified: trunk/fpm2/include/fpm/fpm.h
===================================================================
--- trunk/fpm2/include/fpm/fpm.h	2008-03-20 11:31:42 UTC (rev 114)
+++ trunk/fpm2/include/fpm/fpm.h	2008-03-20 12:22:11 UTC (rev 115)
@@ -208,6 +208,17 @@
 FPMFUNC ufp16p16_t mulufp16p16(ufp16p16_t x, ufp16p16_t y) { return (uint64_t) x * y >> 16; }
 FPMFUNC ufp8p24_t  mulufp8p24 (ufp8p24_t  x, ufp8p24_t  y) { return (uint64_t) x * y >> 24; }
 
+/* fast multiplication, less precision */
+
+FPMFUNC fp8p8_t    fastmulfp8p8   ( fp8p8_t   x,  fp8p8_t   y) { return (x >> 4 ) * (y >> 4 ); }
+FPMFUNC fp24p8_t   fastmulfp24p8  ( fp24p8_t  x,  fp24p8_t  y) { return (x >> 4 ) * (y >> 4 ); }
+FPMFUNC fp16p16_t  fastmulfp16p16 ( fp16p16_t x,  fp16p16_t y) { return (x >> 8 ) * (y >> 8 ); }
+FPMFUNC fp8p24_t   fastmulfp8p24  ( fp8p24_t  x,  fp8p24_t  y) { return (x >> 12) * (y >> 12); }
+FPMFUNC fp8p8_t    fastmulufp8p8  (ufp8p8_t   x, ufp8p8_t   y) { return (x >> 4 ) * (y >> 4 ); }
+FPMFUNC fp24p8_t   fastmulufp24p8 (ufp24p8_t  x, ufp24p8_t  y) { return (x >> 4 ) * (y >> 4 ); }
+FPMFUNC fp16p16_t  fastmulufp16p16(ufp16p16_t x, ufp16p16_t y) { return (x >> 8 ) * (y >> 8 ); }
+FPMFUNC fp8p24_t   fastmulufp8p24 (ufp8p24_t  x, ufp8p24_t  y) { return (x >> 12) * (y >> 12); }
+
 /* division (x/y) */
 
 FPMFUNC fp8p8_t    divfp8p8   ( fp8p8_t   x,  fp8p8_t   y) { return (( int32_t) x << 8 ) / y; }



From ivop at mail.berlios.de  Thu Mar 20 13:38:24 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Thu, 20 Mar 2008 13:38:24 +0100
Subject: [fpm-cvslog] r116 - trunk/fpm2/include/fpm
Message-ID: <200803201238.m2KCcOHF018279@sheep.berlios.de>

Author: ivop
Date: 2008-03-20 13:38:24 +0100 (Thu, 20 Mar 2008)
New Revision: 116

Added:
   trunk/fpm2/include/fpm/fpmcode.h
Modified:
   trunk/fpm2/include/fpm/fpm.h
Log:
move function bodies to separate file


Modified: trunk/fpm2/include/fpm/fpm.h
===================================================================
--- trunk/fpm2/include/fpm/fpm.h	2008-03-20 12:22:11 UTC (rev 115)
+++ trunk/fpm2/include/fpm/fpm.h	2008-03-20 12:38:24 UTC (rev 116)
@@ -91,107 +91,107 @@
 
 /* int to fixed point */
 
-FPMFUNC  fp8p8_t   itofp8p8   (int x) { return x << 8;  }
-FPMFUNC  fp24p8_t  itofp24p8  (int x) { return x << 8;  }
-FPMFUNC  fp16p16_t itofp16p16 (int x) { return x << 16; }
-FPMFUNC  fp8p24_t  itofp8p24  (int x) { return x << 24; }
-FPMFUNC ufp8p8_t   itoufp8p8  (int x) { return x << 8;  }
-FPMFUNC ufp24p8_t  itoufp24p8 (int x) { return x << 8;  }
-FPMFUNC ufp16p16_t itoufp16p16(int x) { return x << 16; }
-FPMFUNC ufp8p24_t  itoufp8p24 (int x) { return x << 24; }
+FPMFUNC  fp8p8_t   itofp8p8   (int x);
+FPMFUNC  fp24p8_t  itofp24p8  (int x);
+FPMFUNC  fp16p16_t itofp16p16 (int x);
+FPMFUNC  fp8p24_t  itofp8p24  (int x);
+FPMFUNC ufp8p8_t   itoufp8p8  (int x);
+FPMFUNC ufp24p8_t  itoufp24p8 (int x);
+FPMFUNC ufp16p16_t itoufp16p16(int x);
+FPMFUNC ufp8p24_t  itoufp8p24 (int x);
 
 /* float to fixed point */
 
-FPMFUNC  fp8p8_t   ftofp8p8   (float x) { return x * 256;      }
-FPMFUNC  fp24p8_t  ftofp24p8  (float x) { return x * 256;      }
-FPMFUNC  fp16p16_t ftofp16p16 (float x) { return x * 65536;    }
-FPMFUNC  fp8p24_t  ftofp8p24  (float x) { return x * 16777216; }
-FPMFUNC ufp8p8_t   ftoufp8p8  (float x) { return x * 256;      }
-FPMFUNC ufp24p8_t  ftoufp24p8 (float x) { return x * 256;      }
-FPMFUNC ufp16p16_t ftoufp16p16(float x) { return x * 65536;    }
-FPMFUNC ufp8p24_t  ftoufp8p24 (float x) { return x * 16777216; }
+FPMFUNC  fp8p8_t   ftofp8p8   (float x);
+FPMFUNC  fp24p8_t  ftofp24p8  (float x);
+FPMFUNC  fp16p16_t ftofp16p16 (float x);
+FPMFUNC  fp8p24_t  ftofp8p24  (float x);
+FPMFUNC ufp8p8_t   ftoufp8p8  (float x);
+FPMFUNC ufp24p8_t  ftoufp24p8 (float x);
+FPMFUNC ufp16p16_t ftoufp16p16(float x);
+FPMFUNC ufp8p24_t  ftoufp8p24 (float x);
 
 /* double to fixed point */
 
-FPMFUNC  fp8p8_t   dtofp8p8   (double x) { return x * 256;      }
-FPMFUNC  fp24p8_t  dtofp24p8  (double x) { return x * 256;      }
-FPMFUNC  fp16p16_t dtofp16p16 (double x) { return x * 65536;    }
-FPMFUNC  fp8p24_t  dtofp8p24  (double x) { return x * 16777216; }
-FPMFUNC ufp8p8_t   dtoufp8p8  (double x) { return x * 256;      }
-FPMFUNC ufp24p8_t  dtoufp24p8 (double x) { return x * 256;      }
-FPMFUNC ufp16p16_t dtoufp16p16(double x) { return x * 65536;    }
-FPMFUNC ufp8p24_t  dtoufp8p24 (double x) { return x * 16777216; }
+FPMFUNC  fp8p8_t   dtofp8p8   (double x);
+FPMFUNC  fp24p8_t  dtofp24p8  (double x);
+FPMFUNC  fp16p16_t dtofp16p16 (double x);
+FPMFUNC  fp8p24_t  dtofp8p24  (double x);
+FPMFUNC ufp8p8_t   dtoufp8p8  (double x);
+FPMFUNC ufp24p8_t  dtoufp24p8 (double x);
+FPMFUNC ufp16p16_t dtoufp16p16(double x);
+FPMFUNC ufp8p24_t  dtoufp8p24 (double x);
 
 /* fixed point to int (truncated) */
 
-FPMFUNC int  fp8p8toi  ( fp8p8_t   x) { return x >> 8;  }
-FPMFUNC int  fp24p8toi ( fp24p8_t  x) { return x >> 8;  }
-FPMFUNC int  fp16p16toi( fp16p16_t x) { return x >> 16; }
-FPMFUNC int  fp8p24toi ( fp8p24_t  x) { return x >> 24; }
-FPMFUNC int ufp8p8toi  (ufp8p8_t   x) { return x >> 8;  }
-FPMFUNC int ufp24p8toi (ufp24p8_t  x) { return x >> 8;  }
-FPMFUNC int ufp16p16toi(ufp16p16_t x) { return x >> 16; }
-FPMFUNC int ufp8p24toi (ufp8p24_t  x) { return x >> 24; }
+FPMFUNC int  fp8p8toi  ( fp8p8_t   x);
+FPMFUNC int  fp24p8toi ( fp24p8_t  x);
+FPMFUNC int  fp16p16toi( fp16p16_t x);
+FPMFUNC int  fp8p24toi ( fp8p24_t  x);
+FPMFUNC int ufp8p8toi  (ufp8p8_t   x);
+FPMFUNC int ufp24p8toi (ufp24p8_t  x);
+FPMFUNC int ufp16p16toi(ufp16p16_t x);
+FPMFUNC int ufp8p24toi (ufp8p24_t  x);
 
 /* fixed point to float */
 
-FPMFUNC float  fp8p8tof  ( fp8p8_t   x) { return (float) x / 256.0;      }
-FPMFUNC float  fp24p8tof ( fp24p8_t  x) { return (float) x / 256.0;      }
-FPMFUNC float  fp16p16tof( fp16p16_t x) { return (float) x / 65536.0;    }
-FPMFUNC float  fp8p24tof ( fp8p24_t  x) { return (float) x / 16777216.0; }
-FPMFUNC float ufp8p8tof  (ufp8p8_t   x) { return (float) x / 256.0;      }
-FPMFUNC float ufp24p8tof (ufp24p8_t  x) { return (float) x / 256.0;      }
-FPMFUNC float ufp16p16tof(ufp16p16_t x) { return (float) x / 65536.0;    }
-FPMFUNC float ufp8p24tof (ufp8p24_t  x) { return (float) x / 16777216.0; }
+FPMFUNC float  fp8p8tof  ( fp8p8_t   x);
+FPMFUNC float  fp24p8tof ( fp24p8_t  x);
+FPMFUNC float  fp16p16tof( fp16p16_t x);
+FPMFUNC float  fp8p24tof ( fp8p24_t  x);
+FPMFUNC float ufp8p8tof  (ufp8p8_t   x);
+FPMFUNC float ufp24p8tof (ufp24p8_t  x);
+FPMFUNC float ufp16p16tof(ufp16p16_t x);
+FPMFUNC float ufp8p24tof (ufp8p24_t  x);
 
 /* fixed point to double */
 
-FPMFUNC double  fp8p8tod  ( fp8p8_t   x) { return (double) x / 256.0L;      }
-FPMFUNC double  fp24p8tod ( fp24p8_t  x) { return (double) x / 256.0L;      }
-FPMFUNC double  fp16p16tod( fp16p16_t x) { return (double) x / 65536.0L;    }
-FPMFUNC double  fp8p24tod ( fp8p24_t  x) { return (double) x / 16777216.0L; }
-FPMFUNC double ufp8p8tod  (ufp8p8_t   x) { return (double) x / 256.0L;      }
-FPMFUNC double ufp24p8tod (ufp24p8_t  x) { return (double) x / 256.0L;      }
-FPMFUNC double ufp16p16tod(ufp16p16_t x) { return (double) x / 65536.0L;    }
-FPMFUNC double ufp8p24tod (ufp8p24_t  x) { return (double) x / 16777216.0L; }
+FPMFUNC double  fp8p8tod  ( fp8p8_t   x);
+FPMFUNC double  fp24p8tod ( fp24p8_t  x);
+FPMFUNC double  fp16p16tod( fp16p16_t x);
+FPMFUNC double  fp8p24tod ( fp8p24_t  x);
+FPMFUNC double ufp8p8tod  (ufp8p8_t   x);
+FPMFUNC double ufp24p8tod (ufp24p8_t  x);
+FPMFUNC double ufp16p16tod(ufp16p16_t x);
+FPMFUNC double ufp8p24tod (ufp8p24_t  x);
 
 /* fixed point to fixed point */
 
-FPMFUNC fp8p8_t     fp8p8tofp8p8   ( fp8p8_t x) { return x;       }
-FPMFUNC fp24p8_t    fp8p8tofp24p8  ( fp8p8_t x) { return x;       }
-FPMFUNC fp16p16_t   fp8p8tofp16p16 ( fp8p8_t x) { return x << 8;  }
-FPMFUNC fp8p24_t    fp8p8tofp8p24  ( fp8p8_t x) { return x << 16; }
-FPMFUNC ufp8p8_t   ufp8p8toufp8p8  (ufp8p8_t x) { return x;       }
-FPMFUNC ufp24p8_t  ufp8p8toufp24p8 (ufp8p8_t x) { return x;       }
-FPMFUNC ufp16p16_t ufp8p8toufp16p16(ufp8p8_t x) { return x << 8;  }
-FPMFUNC ufp8p24_t  ufp8p8toufp8p24 (ufp8p8_t x) { return x << 16; }
+FPMFUNC fp8p8_t     fp8p8tofp8p8   ( fp8p8_t x);
+FPMFUNC fp24p8_t    fp8p8tofp24p8  ( fp8p8_t x);
+FPMFUNC fp16p16_t   fp8p8tofp16p16 ( fp8p8_t x);
+FPMFUNC fp8p24_t    fp8p8tofp8p24  ( fp8p8_t x);
+FPMFUNC ufp8p8_t   ufp8p8toufp8p8  (ufp8p8_t x);
+FPMFUNC ufp24p8_t  ufp8p8toufp24p8 (ufp8p8_t x);
+FPMFUNC ufp16p16_t ufp8p8toufp16p16(ufp8p8_t x);
+FPMFUNC ufp8p24_t  ufp8p8toufp8p24 (ufp8p8_t x);
 
-FPMFUNC fp8p8_t     fp24p8tofp8p8   ( fp24p8_t x) { return x;       }
-FPMFUNC fp24p8_t    fp24p8tofp24p8  ( fp24p8_t x) { return x;       }
-FPMFUNC fp16p16_t   fp24p8tofp16p16 ( fp24p8_t x) { return x << 8;  }
-FPMFUNC fp8p24_t    fp24p8tofp8p24  ( fp24p8_t x) { return x << 16; }
-FPMFUNC ufp8p8_t   ufp24p8toufp8p8  (ufp24p8_t x) { return x;       }
-FPMFUNC ufp24p8_t  ufp24p8toufp24p8 (ufp24p8_t x) { return x;       }
-FPMFUNC ufp16p16_t ufp24p8toufp16p16(ufp24p8_t x) { return x << 8;  }
-FPMFUNC ufp8p24_t  ufp24p8toufp8p24 (ufp24p8_t x) { return x << 16; }
+FPMFUNC fp8p8_t     fp24p8tofp8p8   ( fp24p8_t x);
+FPMFUNC fp24p8_t    fp24p8tofp24p8  ( fp24p8_t x);
+FPMFUNC fp16p16_t   fp24p8tofp16p16 ( fp24p8_t x);
+FPMFUNC fp8p24_t    fp24p8tofp8p24  ( fp24p8_t x);
+FPMFUNC ufp8p8_t   ufp24p8toufp8p8  (ufp24p8_t x);
+FPMFUNC ufp24p8_t  ufp24p8toufp24p8 (ufp24p8_t x);
+FPMFUNC ufp16p16_t ufp24p8toufp16p16(ufp24p8_t x);
+FPMFUNC ufp8p24_t  ufp24p8toufp8p24 (ufp24p8_t x);
 
-FPMFUNC fp8p8_t     fp16p16tofp8p8   ( fp16p16_t x) { return x >> 8; }
-FPMFUNC fp24p8_t    fp16p16tofp24p8  ( fp16p16_t x) { return x >> 8; }
-FPMFUNC fp16p16_t   fp16p16tofp16p16 ( fp16p16_t x) { return x;      }
-FPMFUNC fp8p24_t    fp16p16tofp8p24  ( fp16p16_t x) { return x << 8; }
-FPMFUNC ufp8p8_t   ufp16p16toufp8p8  (ufp16p16_t x) { return x >> 8; }
-FPMFUNC ufp24p8_t  ufp16p16toufp24p8 (ufp16p16_t x) { return x >> 8; }
-FPMFUNC ufp16p16_t ufp16p16toufp16p16(ufp16p16_t x) { return x;      }
-FPMFUNC ufp8p24_t  ufp16p16toufp8p24 (ufp16p16_t x) { return x << 8; }
+FPMFUNC fp8p8_t     fp16p16tofp8p8   ( fp16p16_t x);
+FPMFUNC fp24p8_t    fp16p16tofp24p8  ( fp16p16_t x);
+FPMFUNC fp16p16_t   fp16p16tofp16p16 ( fp16p16_t x);
+FPMFUNC fp8p24_t    fp16p16tofp8p24  ( fp16p16_t x);
+FPMFUNC ufp8p8_t   ufp16p16toufp8p8  (ufp16p16_t x);
+FPMFUNC ufp24p8_t  ufp16p16toufp24p8 (ufp16p16_t x);
+FPMFUNC ufp16p16_t ufp16p16toufp16p16(ufp16p16_t x);
+FPMFUNC ufp8p24_t  ufp16p16toufp8p24 (ufp16p16_t x);
 
-FPMFUNC fp8p8_t     fp8p24tofp8p8   ( fp8p24_t x) { return x >> 16; }
-FPMFUNC fp24p8_t    fp8p24tofp24p8  ( fp8p24_t x) { return x >> 16; }
-FPMFUNC fp16p16_t   fp8p24tofp16p16 ( fp8p24_t x) { return x >> 8;  }
-FPMFUNC fp8p24_t    fp8p24tofp8p24  ( fp8p24_t x) { return x;       }
-FPMFUNC ufp8p8_t   ufp8p24toufp8p8  (ufp8p24_t x) { return x >> 16; }
-FPMFUNC ufp24p8_t  ufp8p24toufp24p8 (ufp8p24_t x) { return x >> 16; }
-FPMFUNC ufp16p16_t ufp8p24toufp16p16(ufp8p24_t x) { return x >> 8;  }
-FPMFUNC ufp8p24_t  ufp8p24toufp8p24 (ufp8p24_t x) { return x;       }
+FPMFUNC fp8p8_t     fp8p24tofp8p8   ( fp8p24_t x);
+FPMFUNC fp24p8_t    fp8p24tofp24p8  ( fp8p24_t x);
+FPMFUNC fp16p16_t   fp8p24tofp16p16 ( fp8p24_t x);
+FPMFUNC fp8p24_t    fp8p24tofp8p24  ( fp8p24_t x);
+FPMFUNC ufp8p8_t   ufp8p24toufp8p8  (ufp8p24_t x);
+FPMFUNC ufp24p8_t  ufp8p24toufp24p8 (ufp8p24_t x);
+FPMFUNC ufp16p16_t ufp8p24toufp16p16(ufp8p24_t x);
+FPMFUNC ufp8p24_t  ufp8p24toufp8p24 (ufp8p24_t x);
 
 /* ------------------------------------------------------------------------- */
 
@@ -199,36 +199,36 @@
 
 /* multiplication (x*y) */
 
-FPMFUNC fp8p8_t    mulfp8p8   ( fp8p8_t   x,  fp8p8_t   y) { return ( int32_t) x * y >> 8;  }
-FPMFUNC fp24p8_t   mulfp24p8  ( fp24p8_t  x,  fp24p8_t  y) { return ( int64_t) x * y >> 8;  }
-FPMFUNC fp16p16_t  mulfp16p16 ( fp16p16_t x,  fp16p16_t y) { return ( int64_t) x * y >> 16; }
-FPMFUNC fp8p24_t   mulfp8p24  ( fp8p24_t  x,  fp8p24_t  y) { return ( int64_t) x * y >> 24; }
-FPMFUNC ufp8p8_t   mulufp8p8  (ufp8p8_t   x, ufp8p8_t   y) { return (uint32_t) x * y >> 8;  }
-FPMFUNC ufp24p8_t  mulufp24p8 (ufp24p8_t  x, ufp24p8_t  y) { return (uint64_t) x * y >> 8;  }
-FPMFUNC ufp16p16_t mulufp16p16(ufp16p16_t x, ufp16p16_t y) { return (uint64_t) x * y >> 16; }
-FPMFUNC ufp8p24_t  mulufp8p24 (ufp8p24_t  x, ufp8p24_t  y) { return (uint64_t) x * y >> 24; }
+FPMFUNC fp8p8_t    mulfp8p8   ( fp8p8_t   x,  fp8p8_t   y);
+FPMFUNC fp24p8_t   mulfp24p8  ( fp24p8_t  x,  fp24p8_t  y);
+FPMFUNC fp16p16_t  mulfp16p16 ( fp16p16_t x,  fp16p16_t y);
+FPMFUNC fp8p24_t   mulfp8p24  ( fp8p24_t  x,  fp8p24_t  y);
+FPMFUNC ufp8p8_t   mulufp8p8  (ufp8p8_t   x, ufp8p8_t   y);
+FPMFUNC ufp24p8_t  mulufp24p8 (ufp24p8_t  x, ufp24p8_t  y);
+FPMFUNC ufp16p16_t mulufp16p16(ufp16p16_t x, ufp16p16_t y);
+FPMFUNC ufp8p24_t  mulufp8p24 (ufp8p24_t  x, ufp8p24_t  y);
 
 /* fast multiplication, less precision */
 
-FPMFUNC fp8p8_t    fastmulfp8p8   ( fp8p8_t   x,  fp8p8_t   y) { return (x >> 4 ) * (y >> 4 ); }
-FPMFUNC fp24p8_t   fastmulfp24p8  ( fp24p8_t  x,  fp24p8_t  y) { return (x >> 4 ) * (y >> 4 ); }
-FPMFUNC fp16p16_t  fastmulfp16p16 ( fp16p16_t x,  fp16p16_t y) { return (x >> 8 ) * (y >> 8 ); }
-FPMFUNC fp8p24_t   fastmulfp8p24  ( fp8p24_t  x,  fp8p24_t  y) { return (x >> 12) * (y >> 12); }
-FPMFUNC fp8p8_t    fastmulufp8p8  (ufp8p8_t   x, ufp8p8_t   y) { return (x >> 4 ) * (y >> 4 ); }
-FPMFUNC fp24p8_t   fastmulufp24p8 (ufp24p8_t  x, ufp24p8_t  y) { return (x >> 4 ) * (y >> 4 ); }
-FPMFUNC fp16p16_t  fastmulufp16p16(ufp16p16_t x, ufp16p16_t y) { return (x >> 8 ) * (y >> 8 ); }
-FPMFUNC fp8p24_t   fastmulufp8p24 (ufp8p24_t  x, ufp8p24_t  y) { return (x >> 12) * (y >> 12); }
+FPMFUNC fp8p8_t    fastmulfp8p8   ( fp8p8_t   x,  fp8p8_t   y);
+FPMFUNC fp24p8_t   fastmulfp24p8  ( fp24p8_t  x,  fp24p8_t  y);
+FPMFUNC fp16p16_t  fastmulfp16p16 ( fp16p16_t x,  fp16p16_t y);
+FPMFUNC fp8p24_t   fastmulfp8p24  ( fp8p24_t  x,  fp8p24_t  y);
+FPMFUNC fp8p8_t    fastmulufp8p8  (ufp8p8_t   x, ufp8p8_t   y);
+FPMFUNC fp24p8_t   fastmulufp24p8 (ufp24p8_t  x, ufp24p8_t  y);
+FPMFUNC fp16p16_t  fastmulufp16p16(ufp16p16_t x, ufp16p16_t y);
+FPMFUNC fp8p24_t   fastmulufp8p24 (ufp8p24_t  x, ufp8p24_t  y);
 
 /* division (x/y) */
 
-FPMFUNC fp8p8_t    divfp8p8   ( fp8p8_t   x,  fp8p8_t   y) { return (( int32_t) x << 8 ) / y; }
-FPMFUNC fp24p8_t   divfp24p8  ( fp24p8_t  x,  fp24p8_t  y) { return (( int64_t) x << 8 ) / y; }
-FPMFUNC fp16p16_t  divfp16p16 ( fp16p16_t x,  fp16p16_t y) { return (( int64_t) x << 16) / y; }
-FPMFUNC fp8p24_t   divfp8p24  ( fp8p24_t  x,  fp8p24_t  y) { return (( int64_t) x << 24) / y; }
-FPMFUNC ufp8p8_t   divufp8p8  (ufp8p8_t   x, ufp8p8_t   y) { return ((uint32_t) x << 8 ) / y; }
-FPMFUNC ufp24p8_t  divufp24p8 (ufp24p8_t  x, ufp24p8_t  y) { return ((uint64_t) x << 8 ) / y; }
-FPMFUNC ufp16p16_t divufp16p16(ufp16p16_t x, ufp16p16_t y) { return ((uint64_t) x << 16) / y; }
-FPMFUNC ufp8p24_t  divufp8p24 (ufp8p24_t  x, ufp8p24_t  y) { return ((uint64_t) x << 24) / y; }
+FPMFUNC fp8p8_t    divfp8p8   ( fp8p8_t   x,  fp8p8_t   y);
+FPMFUNC fp24p8_t   divfp24p8  ( fp24p8_t  x,  fp24p8_t  y);
+FPMFUNC fp16p16_t  divfp16p16 ( fp16p16_t x,  fp16p16_t y);
+FPMFUNC fp8p24_t   divfp8p24  ( fp8p24_t  x,  fp8p24_t  y);
+FPMFUNC ufp8p8_t   divufp8p8  (ufp8p8_t   x, ufp8p8_t   y);
+FPMFUNC ufp24p8_t  divufp24p8 (ufp24p8_t  x, ufp24p8_t  y);
+FPMFUNC ufp16p16_t divufp16p16(ufp16p16_t x, ufp16p16_t y);
+FPMFUNC ufp8p24_t  divufp8p24 (ufp8p24_t  x, ufp8p24_t  y);
 
 /* ------------------------------------------------------------------------- */
 
@@ -236,4 +236,10 @@
 
 /* ------------------------------------------------------------------------- */
 
+#define FPM_INTERNAL
+#include <fpm/fpmcode.h>
+#undef FPM_INTERNAL
+
+/* ------------------------------------------------------------------------- */
+
 #endif

Added: trunk/fpm2/include/fpm/fpmcode.h
===================================================================
--- trunk/fpm2/include/fpm/fpmcode.h	2008-03-20 12:22:11 UTC (rev 115)
+++ trunk/fpm2/include/fpm/fpmcode.h	2008-03-20 12:38:24 UTC (rev 116)
@@ -0,0 +1,231 @@
+/* -------------------------------------------------------------------------
+ *
+ * Fixed Point Math Library
+ *
+ * Copyright (C) 2005, 2006, 2008 by Ivo van Poorten
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
+ * 02110-1301 USA
+ *
+ * ------------------------------------------------------------------------- */
+
+#ifndef FPM_INTERNAL
+#error "This header file should NOT be included directly!"
+#else
+
+#ifndef FPM_FPMCODE_H
+#define FPM_FPMCODE_H
+
+/* ------------------------------------------------------------------------- */
+
+/* CONVERSION */
+
+/* int to fixed point */
+
+FPMFUNC  fp8p8_t   itofp8p8   (int x) { return x << 8;  }
+FPMFUNC  fp24p8_t  itofp24p8  (int x) { return x << 8;  }
+FPMFUNC  fp16p16_t itofp16p16 (int x) { return x << 16; }
+FPMFUNC  fp8p24_t  itofp8p24  (int x) { return x << 24; }
+FPMFUNC ufp8p8_t   itoufp8p8  (int x) { return x << 8;  }
+FPMFUNC ufp24p8_t  itoufp24p8 (int x) { return x << 8;  }
+FPMFUNC ufp16p16_t itoufp16p16(int x) { return x << 16; }
+FPMFUNC ufp8p24_t  itoufp8p24 (int x) { return x << 24; }
+
+/* float to fixed point */
+
+FPMFUNC  fp8p8_t   ftofp8p8   (float x) { return x * 256;      }
+FPMFUNC  fp24p8_t  ftofp24p8  (float x) { return x * 256;      }
+FPMFUNC  fp16p16_t ftofp16p16 (float x) { return x * 65536;    }
+FPMFUNC  fp8p24_t  ftofp8p24  (float x) { return x * 16777216; }
+FPMFUNC ufp8p8_t   ftoufp8p8  (float x) { return x * 256;      }
+FPMFUNC ufp24p8_t  ftoufp24p8 (float x) { return x * 256;      }
+FPMFUNC ufp16p16_t ftoufp16p16(float x) { return x * 65536;    }
+FPMFUNC ufp8p24_t  ftoufp8p24 (float x) { return x * 16777216; }
+
+/* double to fixed point */
+
+FPMFUNC  fp8p8_t   dtofp8p8   (double x) { return x * 256;      }
+FPMFUNC  fp24p8_t  dtofp24p8  (double x) { return x * 256;      }
+FPMFUNC  fp16p16_t dtofp16p16 (double x) { return x * 65536;    }
+FPMFUNC  fp8p24_t  dtofp8p24  (double x) { return x * 16777216; }
+FPMFUNC ufp8p8_t   dtoufp8p8  (double x) { return x * 256;      }
+FPMFUNC ufp24p8_t  dtoufp24p8 (double x) { return x * 256;      }
+FPMFUNC ufp16p16_t dtoufp16p16(double x) { return x * 65536;    }
+FPMFUNC ufp8p24_t  dtoufp8p24 (double x) { return x * 16777216; }
+
+/* fixed point to int (truncated) */
+
+FPMFUNC int  fp8p8toi  ( fp8p8_t   x) { return x >> 8;  }
+FPMFUNC int  fp24p8toi ( fp24p8_t  x) { return x >> 8;  }
+FPMFUNC int  fp16p16toi( fp16p16_t x) { return x >> 16; }
+FPMFUNC int  fp8p24toi ( fp8p24_t  x) { return x >> 24; }
+FPMFUNC int ufp8p8toi  (ufp8p8_t   x) { return x >> 8;  }
+FPMFUNC int ufp24p8toi (ufp24p8_t  x) { return x >> 8;  }
+FPMFUNC int ufp16p16toi(ufp16p16_t x) { return x >> 16; }
+FPMFUNC int ufp8p24toi (ufp8p24_t  x) { return x >> 24; }
+
+/* fixed point to float */
+
+FPMFUNC float  fp8p8tof  ( fp8p8_t   x) { return (float) x / 256.0;      }
+FPMFUNC float  fp24p8tof ( fp24p8_t  x) { return (float) x / 256.0;      }
+FPMFUNC float  fp16p16tof( fp16p16_t x) { return (float) x / 65536.0;    }
+FPMFUNC float  fp8p24tof ( fp8p24_t  x) { return (float) x / 16777216.0; }
+FPMFUNC float ufp8p8tof  (ufp8p8_t   x) { return (float) x / 256.0;      }
+FPMFUNC float ufp24p8tof (ufp24p8_t  x) { return (float) x / 256.0;      }
+FPMFUNC float ufp16p16tof(ufp16p16_t x) { return (float) x / 65536.0;    }
+FPMFUNC float ufp8p24tof (ufp8p24_t  x) { return (float) x / 16777216.0; }
+
+/* fixed point to double */
+
+FPMFUNC double  fp8p8tod  ( fp8p8_t   x) { return (double) x / 256.0L;      }
+FPMFUNC double  fp24p8tod ( fp24p8_t  x) { return (double) x / 256.0L;      }
+FPMFUNC double  fp16p16tod( fp16p16_t x) { return (double) x / 65536.0L;    }
+FPMFUNC double  fp8p24tod ( fp8p24_t  x) { return (double) x / 16777216.0L; }
+FPMFUNC double ufp8p8tod  (ufp8p8_t   x) { return (double) x / 256.0L;      }
+FPMFUNC double ufp24p8tod (ufp24p8_t  x) { return (double) x / 256.0L;      }
+FPMFUNC double ufp16p16tod(ufp16p16_t x) { return (double) x / 65536.0L;    }
+FPMFUNC double ufp8p24tod (ufp8p24_t  x) { return (double) x / 16777216.0L; }
+
+/* fixed point to fixed point */
+
+FPMFUNC fp8p8_t     fp8p8tofp8p8   ( fp8p8_t x) { return x;       }
+FPMFUNC fp24p8_t    fp8p8tofp24p8  ( fp8p8_t x) { return x;       }
+FPMFUNC fp16p16_t   fp8p8tofp16p16 ( fp8p8_t x) { return x << 8;  }
+FPMFUNC fp8p24_t    fp8p8tofp8p24  ( fp8p8_t x) { return x << 16; }
+FPMFUNC ufp8p8_t   ufp8p8toufp8p8  (ufp8p8_t x) { return x;       }
+FPMFUNC ufp24p8_t  ufp8p8toufp24p8 (ufp8p8_t x) { return x;       }
+FPMFUNC ufp16p16_t ufp8p8toufp16p16(ufp8p8_t x) { return x << 8;  }
+FPMFUNC ufp8p24_t  ufp8p8toufp8p24 (ufp8p8_t x) { return x << 16; }
+
+FPMFUNC fp8p8_t     fp24p8tofp8p8   ( fp24p8_t x) { return x;       }
+FPMFUNC fp24p8_t    fp24p8tofp24p8  ( fp24p8_t x) { return x;       }
+FPMFUNC fp16p16_t   fp24p8tofp16p16 ( fp24p8_t x) { return x << 8;  }
+FPMFUNC fp8p24_t    fp24p8tofp8p24  ( fp24p8_t x) { return x << 16; }
+FPMFUNC ufp8p8_t   ufp24p8toufp8p8  (ufp24p8_t x) { return x;       }
+FPMFUNC ufp24p8_t  ufp24p8toufp24p8 (ufp24p8_t x) { return x;       }
+FPMFUNC ufp16p16_t ufp24p8toufp16p16(ufp24p8_t x) { return x << 8;  }
+FPMFUNC ufp8p24_t  ufp24p8toufp8p24 (ufp24p8_t x) { return x << 16; }
+
+FPMFUNC fp8p8_t     fp16p16tofp8p8   ( fp16p16_t x) { return x >> 8; }
+FPMFUNC fp24p8_t    fp16p16tofp24p8  ( fp16p16_t x) { return x >> 8; }
+FPMFUNC fp16p16_t   fp16p16tofp16p16 ( fp16p16_t x) { return x;      }
+FPMFUNC fp8p24_t    fp16p16tofp8p24  ( fp16p16_t x) { return x << 8; }
+FPMFUNC ufp8p8_t   ufp16p16toufp8p8  (ufp16p16_t x) { return x >> 8; }
+FPMFUNC ufp24p8_t  ufp16p16toufp24p8 (ufp16p16_t x) { return x >> 8; }
+FPMFUNC ufp16p16_t ufp16p16toufp16p16(ufp16p16_t x) { return x;      }
+FPMFUNC ufp8p24_t  ufp16p16toufp8p24 (ufp16p16_t x) { return x << 8; }
+
+FPMFUNC fp8p8_t     fp8p24tofp8p8   ( fp8p24_t x) { return x >> 16; }
+FPMFUNC fp24p8_t    fp8p24tofp24p8  ( fp8p24_t x) { return x >> 16; }
+FPMFUNC fp16p16_t   fp8p24tofp16p16 ( fp8p24_t x) { return x >> 8;  }
+FPMFUNC fp8p24_t    fp8p24tofp8p24  ( fp8p24_t x) { return x;       }
+FPMFUNC ufp8p8_t   ufp8p24toufp8p8  (ufp8p24_t x) { return x >> 16; }
+FPMFUNC ufp24p8_t  ufp8p24toufp24p8 (ufp8p24_t x) { return x >> 16; }
+FPMFUNC ufp16p16_t ufp8p24toufp16p16(ufp8p24_t x) { return x >> 8;  }
+FPMFUNC ufp8p24_t  ufp8p24toufp8p24 (ufp8p24_t x) { return x;       }
+
+/* ------------------------------------------------------------------------- */
+
+/* BASIC MATH */
+
+/* multiplication (x*y) */
+
+FPMFUNC fp8p8_t    mulfp8p8   ( fp8p8_t   x,  fp8p8_t   y) {
+    return ( int32_t) x * y >> 8;
+}
+FPMFUNC fp24p8_t   mulfp24p8  ( fp24p8_t  x,  fp24p8_t  y) {
+    return ( int64_t) x * y >> 8;
+}
+FPMFUNC fp16p16_t  mulfp16p16 ( fp16p16_t x,  fp16p16_t y) {
+    return ( int64_t) x * y >> 16;
+}
+FPMFUNC fp8p24_t   mulfp8p24  ( fp8p24_t  x,  fp8p24_t  y) {
+    return ( int64_t) x * y >> 24;
+}
+FPMFUNC ufp8p8_t   mulufp8p8  (ufp8p8_t   x, ufp8p8_t   y) {
+    return (uint32_t) x * y >> 8;
+}
+FPMFUNC ufp24p8_t  mulufp24p8 (ufp24p8_t  x, ufp24p8_t  y) {
+    return (uint64_t) x * y >> 8;
+}
+FPMFUNC ufp16p16_t mulufp16p16(ufp16p16_t x, ufp16p16_t y) {
+    return (uint64_t) x * y >> 16;
+}
+FPMFUNC ufp8p24_t  mulufp8p24 (ufp8p24_t  x, ufp8p24_t  y) {
+    return (uint64_t) x * y >> 24;
+}
+
+/* fast multiplication, less precision */
+
+FPMFUNC fp8p8_t    fastmulfp8p8   ( fp8p8_t   x,  fp8p8_t   y) {
+    return (x >> 4 ) * (y >> 4 );
+}
+FPMFUNC fp24p8_t   fastmulfp24p8  ( fp24p8_t  x,  fp24p8_t  y) {
+    return (x >> 4 ) * (y >> 4 );
+}
+FPMFUNC fp16p16_t  fastmulfp16p16 ( fp16p16_t x,  fp16p16_t y) {
+    return (x >> 8 ) * (y >> 8 );
+}
+FPMFUNC fp8p24_t   fastmulfp8p24  ( fp8p24_t  x,  fp8p24_t  y) {
+    return (x >> 12) * (y >> 12);
+}
+FPMFUNC fp8p8_t    fastmulufp8p8  (ufp8p8_t   x, ufp8p8_t   y) {
+    return (x >> 4 ) * (y >> 4 );
+}
+FPMFUNC fp24p8_t   fastmulufp24p8 (ufp24p8_t  x, ufp24p8_t  y) {
+    return (x >> 4 ) * (y >> 4 );
+}
+FPMFUNC fp16p16_t  fastmulufp16p16(ufp16p16_t x, ufp16p16_t y) {
+    return (x >> 8 ) * (y >> 8 );
+}
+FPMFUNC fp8p24_t   fastmulufp8p24 (ufp8p24_t  x, ufp8p24_t  y) {
+    return (x >> 12) * (y >> 12);
+}
+
+/* division (x/y) */
+
+FPMFUNC fp8p8_t    divfp8p8   ( fp8p8_t   x,  fp8p8_t   y) {
+    return (( int32_t) x << 8 ) / y;
+}
+FPMFUNC fp24p8_t   divfp24p8  ( fp24p8_t  x,  fp24p8_t  y) {
+    return (( int64_t) x << 8 ) / y;
+}
+FPMFUNC fp16p16_t  divfp16p16 ( fp16p16_t x,  fp16p16_t y) {
+    return (( int64_t) x << 16) / y;
+}
+FPMFUNC fp8p24_t   divfp8p24  ( fp8p24_t  x,  fp8p24_t  y) {
+    return (( int64_t) x << 24) / y;
+}
+FPMFUNC ufp8p8_t   divufp8p8  (ufp8p8_t   x, ufp8p8_t   y) {
+    return ((uint32_t) x << 8 ) / y;
+}
+FPMFUNC ufp24p8_t  divufp24p8 (ufp24p8_t  x, ufp24p8_t  y) {
+    return ((uint64_t) x << 8 ) / y;
+}
+FPMFUNC ufp16p16_t divufp16p16(ufp16p16_t x, ufp16p16_t y) {
+    return ((uint64_t) x << 16) / y;
+}
+FPMFUNC ufp8p24_t  divufp8p24 (ufp8p24_t  x, ufp8p24_t  y) {
+    return ((uint64_t) x << 24) / y;
+}
+
+/* ------------------------------------------------------------------------- */
+
+/* ADVANCED MATH */
+
+/* ------------------------------------------------------------------------- */
+
+#endif
+#endif



From ivop at mail.berlios.de  Thu Mar 20 17:15:07 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Thu, 20 Mar 2008 17:15:07 +0100
Subject: [fpm-cvslog] r118 - trunk/fpm2/include/fpm
Message-ID: <200803201615.m2KGF7ra000879@sheep.berlios.de>

Author: ivop
Date: 2008-03-20 17:15:07 +0100 (Thu, 20 Mar 2008)
New Revision: 118

Modified:
   trunk/fpm2/include/fpm/fpm.h
Log:
fastdiv prototypes


Modified: trunk/fpm2/include/fpm/fpm.h
===================================================================
--- trunk/fpm2/include/fpm/fpm.h	2008-03-20 16:13:46 UTC (rev 117)
+++ trunk/fpm2/include/fpm/fpm.h	2008-03-20 16:15:07 UTC (rev 118)
@@ -230,6 +230,17 @@
 FPMFUNC ufp16p16_t divufp16p16(ufp16p16_t x, ufp16p16_t y);
 FPMFUNC ufp8p24_t  divufp8p24 (ufp8p24_t  x, ufp8p24_t  y);
 
+/* fast division, less precision, lower max x, perhaps not that useful */
+
+FPMFUNC fp8p8_t    fastdivfp8p8   ( fp8p8_t   x,  fp8p8_t   y);
+FPMFUNC fp24p8_t   fastdivfp24p8  ( fp24p8_t  x,  fp24p8_t  y);
+FPMFUNC fp16p16_t  fastdivfp16p16 ( fp16p16_t x,  fp16p16_t y);
+FPMFUNC fp8p24_t   fastdivfp8p24  ( fp8p24_t  x,  fp8p24_t  y);
+FPMFUNC ufp8p8_t   fastdivufp8p8  (ufp8p8_t   x, ufp8p8_t   y);
+FPMFUNC ufp24p8_t  fastdivufp24p8 (ufp24p8_t  x, ufp24p8_t  y);
+FPMFUNC ufp16p16_t fastdivufp16p16(ufp16p16_t x, ufp16p16_t y);
+FPMFUNC ufp8p24_t  fastdivufp8p24 (ufp8p24_t  x, ufp8p24_t  y);
+
 /* ------------------------------------------------------------------------- */
 
 /* ADVANCED MATH */



From ivop at mail.berlios.de  Thu Mar 20 17:43:27 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Thu, 20 Mar 2008 17:43:27 +0100
Subject: [fpm-cvslog] r120 - trunk/fpm2/include/fpm
Message-ID: <200803201643.m2KGhRAI004119@sheep.berlios.de>

Author: ivop
Date: 2008-03-20 17:43:25 +0100 (Thu, 20 Mar 2008)
New Revision: 120

Modified:
   trunk/fpm2/include/fpm/fpmcode.h
Log:
reduce amount of code


Modified: trunk/fpm2/include/fpm/fpmcode.h
===================================================================
--- trunk/fpm2/include/fpm/fpmcode.h	2008-03-20 16:18:15 UTC (rev 119)
+++ trunk/fpm2/include/fpm/fpmcode.h	2008-03-20 16:43:25 UTC (rev 120)
@@ -100,42 +100,18 @@
 
 /* fixed point to fixed point */
 
-FPMFUNC fp8p8_t     fp8p8tofp8p8   ( fp8p8_t x) { return x;       }
-FPMFUNC fp24p8_t    fp8p8tofp24p8  ( fp8p8_t x) { return x;       }
-FPMFUNC fp16p16_t   fp8p8tofp16p16 ( fp8p8_t x) { return x << 8;  }
-FPMFUNC fp8p24_t    fp8p8tofp8p24  ( fp8p8_t x) { return x << 16; }
-FPMFUNC ufp8p8_t   ufp8p8toufp8p8  (ufp8p8_t x) { return x;       }
-FPMFUNC ufp24p8_t  ufp8p8toufp24p8 (ufp8p8_t x) { return x;       }
-FPMFUNC ufp16p16_t ufp8p8toufp16p16(ufp8p8_t x) { return x << 8;  }
-FPMFUNC ufp8p24_t  ufp8p8toufp8p24 (ufp8p8_t x) { return x << 16; }
+#define FPMA2B(a,b,c) FPMFUNC b##_t a##to##b(a##_t x) { return x c; } \
+          FPMFUNC u##b##_t u##a##to##u##b(u##a##_t x) { return x c; }
 
-FPMFUNC fp8p8_t     fp24p8tofp8p8   ( fp24p8_t x) { return x;       }
-FPMFUNC fp24p8_t    fp24p8tofp24p8  ( fp24p8_t x) { return x;       }
-FPMFUNC fp16p16_t   fp24p8tofp16p16 ( fp24p8_t x) { return x << 8;  }
-FPMFUNC fp8p24_t    fp24p8tofp8p24  ( fp24p8_t x) { return x << 16; }
-FPMFUNC ufp8p8_t   ufp24p8toufp8p8  (ufp24p8_t x) { return x;       }
-FPMFUNC ufp24p8_t  ufp24p8toufp24p8 (ufp24p8_t x) { return x;       }
-FPMFUNC ufp16p16_t ufp24p8toufp16p16(ufp24p8_t x) { return x << 8;  }
-FPMFUNC ufp8p24_t  ufp24p8toufp8p24 (ufp24p8_t x) { return x << 16; }
+FPMA2B(fp8p8  , fp8p8  ,     )      FPMA2B(fp8p8  , fp24p8 ,     )
+FPMA2B(fp8p8  , fp16p16, <<8 )      FPMA2B(fp8p8  , fp8p24 , <<16)
+FPMA2B(fp24p8 , fp8p8  ,     )      FPMA2B(fp24p8 , fp24p8 ,     )
+FPMA2B(fp24p8 , fp16p16, <<8 )      FPMA2B(fp24p8 , fp8p24 , <<16)
+FPMA2B(fp16p16, fp8p8  , >>8 )      FPMA2B(fp16p16, fp24p8 , >>8 )
+FPMA2B(fp16p16, fp16p16,     )      FPMA2B(fp16p16, fp8p24 , <<8 )
+FPMA2B(fp8p24 , fp8p8  , >>16)      FPMA2B(fp8p24 , fp24p8 , >>16)
+FPMA2B(fp8p24 , fp16p16, >>8 )      FPMA2B(fp8p24 , fp8p24 ,     )
 
-FPMFUNC fp8p8_t     fp16p16tofp8p8   ( fp16p16_t x) { return x >> 8; }
-FPMFUNC fp24p8_t    fp16p16tofp24p8  ( fp16p16_t x) { return x >> 8; }
-FPMFUNC fp16p16_t   fp16p16tofp16p16 ( fp16p16_t x) { return x;      }
-FPMFUNC fp8p24_t    fp16p16tofp8p24  ( fp16p16_t x) { return x << 8; }
-FPMFUNC ufp8p8_t   ufp16p16toufp8p8  (ufp16p16_t x) { return x >> 8; }
-FPMFUNC ufp24p8_t  ufp16p16toufp24p8 (ufp16p16_t x) { return x >> 8; }
-FPMFUNC ufp16p16_t ufp16p16toufp16p16(ufp16p16_t x) { return x;      }
-FPMFUNC ufp8p24_t  ufp16p16toufp8p24 (ufp16p16_t x) { return x << 8; }
-
-FPMFUNC fp8p8_t     fp8p24tofp8p8   ( fp8p24_t x) { return x >> 16; }
-FPMFUNC fp24p8_t    fp8p24tofp24p8  ( fp8p24_t x) { return x >> 16; }
-FPMFUNC fp16p16_t   fp8p24tofp16p16 ( fp8p24_t x) { return x >> 8;  }
-FPMFUNC fp8p24_t    fp8p24tofp8p24  ( fp8p24_t x) { return x;       }
-FPMFUNC ufp8p8_t   ufp8p24toufp8p8  (ufp8p24_t x) { return x >> 16; }
-FPMFUNC ufp24p8_t  ufp8p24toufp24p8 (ufp8p24_t x) { return x >> 16; }
-FPMFUNC ufp16p16_t ufp8p24toufp16p16(ufp8p24_t x) { return x >> 8;  }
-FPMFUNC ufp8p24_t  ufp8p24toufp8p24 (ufp8p24_t x) { return x;       }
-
 /* ------------------------------------------------------------------------- */
 
 /* BASIC MATH */



From ivop at mail.berlios.de  Thu Mar 20 17:18:15 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Thu, 20 Mar 2008 17:18:15 +0100
Subject: [fpm-cvslog] r119 - trunk/fpm2/include/fpm
Message-ID: <200803201618.m2KGIFat001056@sheep.berlios.de>

Author: ivop
Date: 2008-03-20 17:18:15 +0100 (Thu, 20 Mar 2008)
New Revision: 119

Modified:
   trunk/fpm2/include/fpm/fpmcode.h
Log:
remove L


Modified: trunk/fpm2/include/fpm/fpmcode.h
===================================================================
--- trunk/fpm2/include/fpm/fpmcode.h	2008-03-20 16:15:07 UTC (rev 118)
+++ trunk/fpm2/include/fpm/fpmcode.h	2008-03-20 16:18:15 UTC (rev 119)
@@ -89,14 +89,14 @@
 
 /* fixed point to double */
 
-FPMFUNC double  fp8p8tod  ( fp8p8_t   x) { return (double) x / 256.0L;      }
-FPMFUNC double  fp24p8tod ( fp24p8_t  x) { return (double) x / 256.0L;      }
-FPMFUNC double  fp16p16tod( fp16p16_t x) { return (double) x / 65536.0L;    }
-FPMFUNC double  fp8p24tod ( fp8p24_t  x) { return (double) x / 16777216.0L; }
-FPMFUNC double ufp8p8tod  (ufp8p8_t   x) { return (double) x / 256.0L;      }
-FPMFUNC double ufp24p8tod (ufp24p8_t  x) { return (double) x / 256.0L;      }
-FPMFUNC double ufp16p16tod(ufp16p16_t x) { return (double) x / 65536.0L;    }
-FPMFUNC double ufp8p24tod (ufp8p24_t  x) { return (double) x / 16777216.0L; }
+FPMFUNC double  fp8p8tod  ( fp8p8_t   x) { return (double) x / 256.0;      }
+FPMFUNC double  fp24p8tod ( fp24p8_t  x) { return (double) x / 256.0;      }
+FPMFUNC double  fp16p16tod( fp16p16_t x) { return (double) x / 65536.0;    }
+FPMFUNC double  fp8p24tod ( fp8p24_t  x) { return (double) x / 16777216.0; }
+FPMFUNC double ufp8p8tod  (ufp8p8_t   x) { return (double) x / 256.0;      }
+FPMFUNC double ufp24p8tod (ufp24p8_t  x) { return (double) x / 256.0;      }
+FPMFUNC double ufp16p16tod(ufp16p16_t x) { return (double) x / 65536.0;    }
+FPMFUNC double ufp8p24tod (ufp8p24_t  x) { return (double) x / 16777216.0; }
 
 /* fixed point to fixed point */
 



From ivop at mail.berlios.de  Thu Mar 20 17:13:47 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Thu, 20 Mar 2008 17:13:47 +0100
Subject: [fpm-cvslog] r117 - trunk/fpm2/include/fpm
Message-ID: <200803201613.m2KGDlIb000684@sheep.berlios.de>

Author: ivop
Date: 2008-03-20 17:13:46 +0100 (Thu, 20 Mar 2008)
New Revision: 117

Modified:
   trunk/fpm2/include/fpm/fpm.h
   trunk/fpm2/include/fpm/fpmcode.h
Log:
cosmetics, fix for fastmulu*, fastdiv* implementation


Modified: trunk/fpm2/include/fpm/fpm.h
===================================================================
--- trunk/fpm2/include/fpm/fpm.h	2008-03-20 12:38:24 UTC (rev 116)
+++ trunk/fpm2/include/fpm/fpm.h	2008-03-20 16:13:46 UTC (rev 117)
@@ -214,10 +214,10 @@
 FPMFUNC fp24p8_t   fastmulfp24p8  ( fp24p8_t  x,  fp24p8_t  y);
 FPMFUNC fp16p16_t  fastmulfp16p16 ( fp16p16_t x,  fp16p16_t y);
 FPMFUNC fp8p24_t   fastmulfp8p24  ( fp8p24_t  x,  fp8p24_t  y);
-FPMFUNC fp8p8_t    fastmulufp8p8  (ufp8p8_t   x, ufp8p8_t   y);
-FPMFUNC fp24p8_t   fastmulufp24p8 (ufp24p8_t  x, ufp24p8_t  y);
-FPMFUNC fp16p16_t  fastmulufp16p16(ufp16p16_t x, ufp16p16_t y);
-FPMFUNC fp8p24_t   fastmulufp8p24 (ufp8p24_t  x, ufp8p24_t  y);
+FPMFUNC ufp8p8_t   fastmulufp8p8  (ufp8p8_t   x, ufp8p8_t   y);
+FPMFUNC ufp24p8_t  fastmulufp24p8 (ufp24p8_t  x, ufp24p8_t  y);
+FPMFUNC ufp16p16_t fastmulufp16p16(ufp16p16_t x, ufp16p16_t y);
+FPMFUNC ufp8p24_t  fastmulufp8p24 (ufp8p24_t  x, ufp8p24_t  y);
 
 /* division (x/y) */
 

Modified: trunk/fpm2/include/fpm/fpmcode.h
===================================================================
--- trunk/fpm2/include/fpm/fpmcode.h	2008-03-20 12:38:24 UTC (rev 116)
+++ trunk/fpm2/include/fpm/fpmcode.h	2008-03-20 16:13:46 UTC (rev 117)
@@ -140,87 +140,59 @@
 
 /* BASIC MATH */
 
+#define FPMXY8p8    fp8p8_t    x, fp8p8_t    y
+#define FPMXY24p8   fp24p8_t   x, fp24p8_t   y
+#define FPMXY16p16  fp16p16_t  x, fp16p16_t  y
+#define FPMXY8p24   fp8p24_t   x, fp8p24_t   y
+#define FPMXYu8p8   ufp8p8_t   x, ufp8p8_t   y
+#define FPMXYu24p8  ufp24p8_t  x, ufp24p8_t  y
+#define FPMXYu16p16 ufp16p16_t x, ufp16p16_t y
+#define FPMXYu8p24  ufp8p24_t  x, ufp8p24_t  y
+
 /* multiplication (x*y) */
 
-FPMFUNC fp8p8_t    mulfp8p8   ( fp8p8_t   x,  fp8p8_t   y) {
-    return ( int32_t) x * y >> 8;
-}
-FPMFUNC fp24p8_t   mulfp24p8  ( fp24p8_t  x,  fp24p8_t  y) {
-    return ( int64_t) x * y >> 8;
-}
-FPMFUNC fp16p16_t  mulfp16p16 ( fp16p16_t x,  fp16p16_t y) {
-    return ( int64_t) x * y >> 16;
-}
-FPMFUNC fp8p24_t   mulfp8p24  ( fp8p24_t  x,  fp8p24_t  y) {
-    return ( int64_t) x * y >> 24;
-}
-FPMFUNC ufp8p8_t   mulufp8p8  (ufp8p8_t   x, ufp8p8_t   y) {
-    return (uint32_t) x * y >> 8;
-}
-FPMFUNC ufp24p8_t  mulufp24p8 (ufp24p8_t  x, ufp24p8_t  y) {
-    return (uint64_t) x * y >> 8;
-}
-FPMFUNC ufp16p16_t mulufp16p16(ufp16p16_t x, ufp16p16_t y) {
-    return (uint64_t) x * y >> 16;
-}
-FPMFUNC ufp8p24_t  mulufp8p24 (ufp8p24_t  x, ufp8p24_t  y) {
-    return (uint64_t) x * y >> 24;
-}
+FPMFUNC fp8p8_t    mulfp8p8   (FPMXY8p8   ) { return ( int32_t) x * y >> 8;  }
+FPMFUNC fp24p8_t   mulfp24p8  (FPMXY24p8  ) { return ( int64_t) x * y >> 8;  }
+FPMFUNC fp16p16_t  mulfp16p16 (FPMXY16p16 ) { return ( int64_t) x * y >> 16; }
+FPMFUNC fp8p24_t   mulfp8p24  (FPMXY8p24  ) { return ( int64_t) x * y >> 24; }
+FPMFUNC ufp8p8_t   mulufp8p8  (FPMXYu8p8  ) { return (uint32_t) x * y >> 8;  }
+FPMFUNC ufp24p8_t  mulufp24p8 (FPMXYu24p8 ) { return (uint64_t) x * y >> 8;  }
+FPMFUNC ufp16p16_t mulufp16p16(FPMXYu16p16) { return (uint64_t) x * y >> 16; }
+FPMFUNC ufp8p24_t  mulufp8p24 (FPMXYu8p24 ) { return (uint64_t) x * y >> 24; }
 
 /* fast multiplication, less precision */
 
-FPMFUNC fp8p8_t    fastmulfp8p8   ( fp8p8_t   x,  fp8p8_t   y) {
-    return (x >> 4 ) * (y >> 4 );
-}
-FPMFUNC fp24p8_t   fastmulfp24p8  ( fp24p8_t  x,  fp24p8_t  y) {
-    return (x >> 4 ) * (y >> 4 );
-}
-FPMFUNC fp16p16_t  fastmulfp16p16 ( fp16p16_t x,  fp16p16_t y) {
-    return (x >> 8 ) * (y >> 8 );
-}
-FPMFUNC fp8p24_t   fastmulfp8p24  ( fp8p24_t  x,  fp8p24_t  y) {
-    return (x >> 12) * (y >> 12);
-}
-FPMFUNC fp8p8_t    fastmulufp8p8  (ufp8p8_t   x, ufp8p8_t   y) {
-    return (x >> 4 ) * (y >> 4 );
-}
-FPMFUNC fp24p8_t   fastmulufp24p8 (ufp24p8_t  x, ufp24p8_t  y) {
-    return (x >> 4 ) * (y >> 4 );
-}
-FPMFUNC fp16p16_t  fastmulufp16p16(ufp16p16_t x, ufp16p16_t y) {
-    return (x >> 8 ) * (y >> 8 );
-}
-FPMFUNC fp8p24_t   fastmulufp8p24 (ufp8p24_t  x, ufp8p24_t  y) {
-    return (x >> 12) * (y >> 12);
-}
+FPMFUNC fp8p8_t    fastmulfp8p8   (FPMXY8p8   ) { return (x>>4 ) * (y>>4 ); }
+FPMFUNC fp24p8_t   fastmulfp24p8  (FPMXY24p8  ) { return (x>>4 ) * (y>>4 ); }
+FPMFUNC fp16p16_t  fastmulfp16p16 (FPMXY16p16 ) { return (x>>8 ) * (y>>8 ); }
+FPMFUNC fp8p24_t   fastmulfp8p24  (FPMXY8p24  ) { return (x>>12) * (y>>12); }
+FPMFUNC ufp8p8_t   fastmulufp8p8  (FPMXYu8p8  ) { return (x>>4 ) * (y>>4 ); }
+FPMFUNC ufp24p8_t  fastmulufp24p8 (FPMXYu24p8 ) { return (x>>4 ) * (y>>4 ); }
+FPMFUNC ufp16p16_t fastmulufp16p16(FPMXYu16p16) { return (x>>8 ) * (y>>8 ); }
+FPMFUNC ufp8p24_t  fastmulufp8p24 (FPMXYu8p24 ) { return (x>>12) * (y>>12); }
 
 /* division (x/y) */
 
-FPMFUNC fp8p8_t    divfp8p8   ( fp8p8_t   x,  fp8p8_t   y) {
-    return (( int32_t) x << 8 ) / y;
-}
-FPMFUNC fp24p8_t   divfp24p8  ( fp24p8_t  x,  fp24p8_t  y) {
-    return (( int64_t) x << 8 ) / y;
-}
-FPMFUNC fp16p16_t  divfp16p16 ( fp16p16_t x,  fp16p16_t y) {
-    return (( int64_t) x << 16) / y;
-}
-FPMFUNC fp8p24_t   divfp8p24  ( fp8p24_t  x,  fp8p24_t  y) {
-    return (( int64_t) x << 24) / y;
-}
-FPMFUNC ufp8p8_t   divufp8p8  (ufp8p8_t   x, ufp8p8_t   y) {
-    return ((uint32_t) x << 8 ) / y;
-}
-FPMFUNC ufp24p8_t  divufp24p8 (ufp24p8_t  x, ufp24p8_t  y) {
-    return ((uint64_t) x << 8 ) / y;
-}
-FPMFUNC ufp16p16_t divufp16p16(ufp16p16_t x, ufp16p16_t y) {
-    return ((uint64_t) x << 16) / y;
-}
-FPMFUNC ufp8p24_t  divufp8p24 (ufp8p24_t  x, ufp8p24_t  y) {
-    return ((uint64_t) x << 24) / y;
-}
+FPMFUNC fp8p8_t    divfp8p8   (FPMXY8p8   ) { return (( int32_t) x<<8 ) / y; }
+FPMFUNC fp24p8_t   divfp24p8  (FPMXY24p8  ) { return (( int64_t) x<<8 ) / y; }
+FPMFUNC fp16p16_t  divfp16p16 (FPMXY16p16 ) { return (( int64_t) x<<16) / y; }
+FPMFUNC fp8p24_t   divfp8p24  (FPMXY8p24  ) { return (( int64_t) x<<24) / y; }
+FPMFUNC ufp8p8_t   divufp8p8  (FPMXYu8p8  ) { return ((uint32_t) x<<8 ) / y; }
+FPMFUNC ufp24p8_t  divufp24p8 (FPMXYu24p8 ) { return ((uint64_t) x<<8 ) / y; }
+FPMFUNC ufp16p16_t divufp16p16(FPMXYu16p16) { return ((uint64_t) x<<16) / y; }
+FPMFUNC ufp8p24_t  divufp8p24 (FPMXYu8p24 ) { return ((uint64_t) x<<24) / y; }
 
+/* fast division, less precision, lower max x, perhaps not that useful */
+
+FPMFUNC fp8p8_t    fastdivfp8p8   (FPMXY8p8   ) { return ((x<<4) / y) << 4;  }
+FPMFUNC fp24p8_t   fastdivfp24p8  (FPMXY24p8  ) { return ((x<<8) / y);       }
+FPMFUNC fp16p16_t  fastdivfp16p16 (FPMXY16p16 ) { return ((x<<8) / y) << 8;  }
+FPMFUNC fp8p24_t   fastdivfp8p24  (FPMXY8p24  ) { return ((x<<4) / y) << 20; }
+FPMFUNC ufp8p8_t   fastdivufp8p8  (FPMXYu8p8  ) { return ((x<<4) / y) << 4;  }
+FPMFUNC ufp24p8_t  fastdivufp24p8 (FPMXYu24p8 ) { return ((x<<8) / y);       }
+FPMFUNC ufp16p16_t fastdivufp16p16(FPMXYu16p16) { return ((x<<8) / y) << 8;  }
+FPMFUNC ufp8p24_t  fastdivufp8p24 (FPMXYu8p24 ) { return ((x<<4) / y) << 20; }
+
 /* ------------------------------------------------------------------------- */
 
 /* ADVANCED MATH */



From ivop at mail.berlios.de  Thu Mar 20 21:34:37 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Thu, 20 Mar 2008 21:34:37 +0100
Subject: [fpm-cvslog] r121 - trunk/fpm2/include/fpm
Message-ID: <200803202034.m2KKYbVB014936@sheep.berlios.de>

Author: ivop
Date: 2008-03-20 21:34:37 +0100 (Thu, 20 Mar 2008)
New Revision: 121

Modified:
   trunk/fpm2/include/fpm/fpm.h
   trunk/fpm2/include/fpm/fpmcode.h
Log:
reduce amount of code


Modified: trunk/fpm2/include/fpm/fpm.h
===================================================================
--- trunk/fpm2/include/fpm/fpm.h	2008-03-20 16:43:25 UTC (rev 120)
+++ trunk/fpm2/include/fpm/fpm.h	2008-03-20 20:34:37 UTC (rev 121)
@@ -95,10 +95,10 @@
 FPMFUNC  fp24p8_t  itofp24p8  (int x);
 FPMFUNC  fp16p16_t itofp16p16 (int x);
 FPMFUNC  fp8p24_t  itofp8p24  (int x);
-FPMFUNC ufp8p8_t   itoufp8p8  (int x);
-FPMFUNC ufp24p8_t  itoufp24p8 (int x);
-FPMFUNC ufp16p16_t itoufp16p16(int x);
-FPMFUNC ufp8p24_t  itoufp8p24 (int x);
+FPMFUNC ufp8p8_t   itoufp8p8  (unsigned int x);
+FPMFUNC ufp24p8_t  itoufp24p8 (unsigned int x);
+FPMFUNC ufp16p16_t itoufp16p16(unsigned int x);
+FPMFUNC ufp8p24_t  itoufp8p24 (unsigned int x);
 
 /* float to fixed point */
 
@@ -128,10 +128,10 @@
 FPMFUNC int  fp24p8toi ( fp24p8_t  x);
 FPMFUNC int  fp16p16toi( fp16p16_t x);
 FPMFUNC int  fp8p24toi ( fp8p24_t  x);
-FPMFUNC int ufp8p8toi  (ufp8p8_t   x);
-FPMFUNC int ufp24p8toi (ufp24p8_t  x);
-FPMFUNC int ufp16p16toi(ufp16p16_t x);
-FPMFUNC int ufp8p24toi (ufp8p24_t  x);
+FPMFUNC unsigned int ufp8p8toi  (ufp8p8_t   x);
+FPMFUNC unsigned int ufp24p8toi (ufp24p8_t  x);
+FPMFUNC unsigned int ufp16p16toi(ufp16p16_t x);
+FPMFUNC unsigned int ufp8p24toi (ufp8p24_t  x);
 
 /* fixed point to float */
 

Modified: trunk/fpm2/include/fpm/fpmcode.h
===================================================================
--- trunk/fpm2/include/fpm/fpmcode.h	2008-03-20 16:43:25 UTC (rev 120)
+++ trunk/fpm2/include/fpm/fpmcode.h	2008-03-20 20:34:37 UTC (rev 121)
@@ -34,70 +34,52 @@
 
 /* int to fixed point */
 
-FPMFUNC  fp8p8_t   itofp8p8   (int x) { return x << 8;  }
-FPMFUNC  fp24p8_t  itofp24p8  (int x) { return x << 8;  }
-FPMFUNC  fp16p16_t itofp16p16 (int x) { return x << 16; }
-FPMFUNC  fp8p24_t  itofp8p24  (int x) { return x << 24; }
-FPMFUNC ufp8p8_t   itoufp8p8  (int x) { return x << 8;  }
-FPMFUNC ufp24p8_t  itoufp24p8 (int x) { return x << 8;  }
-FPMFUNC ufp16p16_t itoufp16p16(int x) { return x << 16; }
-FPMFUNC ufp8p24_t  itoufp8p24 (int x) { return x << 24; }
+#define FPMI2FP(a,c) FPMFUNC a##_t    ito##a (         int x) { return x c; } \
+                     FPMFUNC u##a##_t itou##a(unsigned int x) { return x c; }
 
+FPMI2FP(fp8p8  , <<8 )      FPMI2FP(fp24p8 , <<8 )
+FPMI2FP(fp16p16, <<16)      FPMI2FP(fp8p24 , <<24)
+
 /* float to fixed point */
 
-FPMFUNC  fp8p8_t   ftofp8p8   (float x) { return x * 256;      }
-FPMFUNC  fp24p8_t  ftofp24p8  (float x) { return x * 256;      }
-FPMFUNC  fp16p16_t ftofp16p16 (float x) { return x * 65536;    }
-FPMFUNC  fp8p24_t  ftofp8p24  (float x) { return x * 16777216; }
-FPMFUNC ufp8p8_t   ftoufp8p8  (float x) { return x * 256;      }
-FPMFUNC ufp24p8_t  ftoufp24p8 (float x) { return x * 256;      }
-FPMFUNC ufp16p16_t ftoufp16p16(float x) { return x * 65536;    }
-FPMFUNC ufp8p24_t  ftoufp8p24 (float x) { return x * 16777216; }
+#define FPMF2FP(a,c) FPMFUNC a##_t    fto##a (float x) { return x * c; } \
+                     FPMFUNC u##a##_t ftou##a(float x) { return x * c; }
 
+FPMF2FP(fp8p8  , 256     )  FPMF2FP(fp24p8 , 256     )
+FPMF2FP(fp16p16, 65536   )  FPMF2FP(fp8p24 , 16777216)
+
 /* double to fixed point */
 
-FPMFUNC  fp8p8_t   dtofp8p8   (double x) { return x * 256;      }
-FPMFUNC  fp24p8_t  dtofp24p8  (double x) { return x * 256;      }
-FPMFUNC  fp16p16_t dtofp16p16 (double x) { return x * 65536;    }
-FPMFUNC  fp8p24_t  dtofp8p24  (double x) { return x * 16777216; }
-FPMFUNC ufp8p8_t   dtoufp8p8  (double x) { return x * 256;      }
-FPMFUNC ufp24p8_t  dtoufp24p8 (double x) { return x * 256;      }
-FPMFUNC ufp16p16_t dtoufp16p16(double x) { return x * 65536;    }
-FPMFUNC ufp8p24_t  dtoufp8p24 (double x) { return x * 16777216; }
+#define FPMD2FP(a,c) FPMFUNC a##_t    dto##a (double x) { return x * c; } \
+                     FPMFUNC u##a##_t dtou##a(double x) { return x * c; }
 
+FPMD2FP(fp8p8  , 256     )  FPMD2FP(fp24p8 , 256     )
+FPMD2FP(fp16p16, 65536   )  FPMD2FP(fp8p24 , 16777216)
+
 /* fixed point to int (truncated) */
 
-FPMFUNC int  fp8p8toi  ( fp8p8_t   x) { return x >> 8;  }
-FPMFUNC int  fp24p8toi ( fp24p8_t  x) { return x >> 8;  }
-FPMFUNC int  fp16p16toi( fp16p16_t x) { return x >> 16; }
-FPMFUNC int  fp8p24toi ( fp8p24_t  x) { return x >> 24; }
-FPMFUNC int ufp8p8toi  (ufp8p8_t   x) { return x >> 8;  }
-FPMFUNC int ufp24p8toi (ufp24p8_t  x) { return x >> 8;  }
-FPMFUNC int ufp16p16toi(ufp16p16_t x) { return x >> 16; }
-FPMFUNC int ufp8p24toi (ufp8p24_t  x) { return x >> 24; }
+#define FPMFP2I(a,c) FPMFUNC int a##toi (a##_t x) { return x c; } \
+      FPMFUNC unsigned int u##a##toi (u##a##_t x) { return x c; }
 
+FPMFP2I(fp8p8  , >>8 )      FPMFP2I(fp24p8 , >>8 )
+FPMFP2I(fp16p16, >>16)      FPMFP2I(fp8p24 , >>24)
+
 /* fixed point to float */
 
-FPMFUNC float  fp8p8tof  ( fp8p8_t   x) { return (float) x / 256.0;      }
-FPMFUNC float  fp24p8tof ( fp24p8_t  x) { return (float) x / 256.0;      }
-FPMFUNC float  fp16p16tof( fp16p16_t x) { return (float) x / 65536.0;    }
-FPMFUNC float  fp8p24tof ( fp8p24_t  x) { return (float) x / 16777216.0; }
-FPMFUNC float ufp8p8tof  (ufp8p8_t   x) { return (float) x / 256.0;      }
-FPMFUNC float ufp24p8tof (ufp24p8_t  x) { return (float) x / 256.0;      }
-FPMFUNC float ufp16p16tof(ufp16p16_t x) { return (float) x / 65536.0;    }
-FPMFUNC float ufp8p24tof (ufp8p24_t  x) { return (float) x / 16777216.0; }
+#define FPMFP2F(a,c) FPMFUNC float a##tof (a##_t x) { return x / c; } \
+               FPMFUNC float u##a##tof (u##a##_t x) { return x / c; }
 
+FPMFP2F(fp8p8  , 256.0     )    FPMFP2F(fp24p8 , 256.0     )
+FPMFP2F(fp16p16, 65536.0   )    FPMFP2F(fp8p24 , 16777216.0)
+
 /* fixed point to double */
 
-FPMFUNC double  fp8p8tod  ( fp8p8_t   x) { return (double) x / 256.0;      }
-FPMFUNC double  fp24p8tod ( fp24p8_t  x) { return (double) x / 256.0;      }
-FPMFUNC double  fp16p16tod( fp16p16_t x) { return (double) x / 65536.0;    }
-FPMFUNC double  fp8p24tod ( fp8p24_t  x) { return (double) x / 16777216.0; }
-FPMFUNC double ufp8p8tod  (ufp8p8_t   x) { return (double) x / 256.0;      }
-FPMFUNC double ufp24p8tod (ufp24p8_t  x) { return (double) x / 256.0;      }
-FPMFUNC double ufp16p16tod(ufp16p16_t x) { return (double) x / 65536.0;    }
-FPMFUNC double ufp8p24tod (ufp8p24_t  x) { return (double) x / 16777216.0; }
+#define FPMFP2D(a,c) FPMFUNC double a##tod (a##_t x) { return x / c; } \
+               FPMFUNC double u##a##tod (u##a##_t x) { return x / c; }
 
+FPMFP2D(fp8p8  , 256.0     )    FPMFP2D(fp24p8 , 256.0     )
+FPMFP2D(fp16p16, 65536.0   )    FPMFP2D(fp8p24 , 16777216.0)
+
 /* fixed point to fixed point */
 
 #define FPMA2B(a,b,c) FPMFUNC b##_t a##to##b(a##_t x) { return x c; } \



From ivop at mail.berlios.de  Thu Mar 20 21:39:04 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Thu, 20 Mar 2008 21:39:04 +0100
Subject: [fpm-cvslog] r122 - trunk/fpm2
Message-ID: <200803202039.m2KKd4Vr015089@sheep.berlios.de>

Author: ivop
Date: 2008-03-20 21:39:04 +0100 (Thu, 20 Mar 2008)
New Revision: 122

Added:
   trunk/fpm2/Makefile
Log:
clean and distclean targets


Added: trunk/fpm2/Makefile
===================================================================
--- trunk/fpm2/Makefile	2008-03-20 20:34:37 UTC (rev 121)
+++ trunk/fpm2/Makefile	2008-03-20 20:39:04 UTC (rev 122)
@@ -0,0 +1,6 @@
+
+clean:
+
+distclean: clean
+	rm -f *~ */*~ */*/*~ */*/*/*~
+



From ivop at mail.berlios.de  Fri Mar 21 03:34:28 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Fri, 21 Mar 2008 03:34:28 +0100
Subject: [fpm-cvslog] r123 - trunk/fpm2/include/fpm
Message-ID: <200803210234.m2L2YSiO001136@sheep.berlios.de>

Author: ivop
Date: 2008-03-21 03:34:27 +0100 (Fri, 21 Mar 2008)
New Revision: 123

Modified:
   trunk/fpm2/include/fpm/fpm.h
   trunk/fpm2/include/fpm/fpmcode.h
Log:
babylonian method square root; not benchmarked yet


Modified: trunk/fpm2/include/fpm/fpm.h
===================================================================
--- trunk/fpm2/include/fpm/fpm.h	2008-03-20 20:39:04 UTC (rev 122)
+++ trunk/fpm2/include/fpm/fpm.h	2008-03-21 02:34:27 UTC (rev 123)
@@ -245,6 +245,17 @@
 
 /* ADVANCED MATH */
 
+/* square root */
+
+FPMFUNC fp8p8_t    sqrtfp8p8   ( fp8p8_t   x);
+FPMFUNC fp24p8_t   sqrtfp24p8  ( fp24p8_t  x);
+FPMFUNC fp16p16_t  sqrtfp16p16 ( fp16p16_t x);
+FPMFUNC fp8p24_t   sqrtfp8p24  ( fp8p24_t  x);
+FPMFUNC ufp8p8_t   sqrtufp8p8  (ufp8p8_t   x);
+FPMFUNC ufp24p8_t  sqrtufp24p8 (ufp24p8_t  x);
+FPMFUNC ufp16p16_t sqrtufp16p16(ufp16p16_t x);
+FPMFUNC ufp8p24_t  sqrtufp8p24 (ufp8p24_t  x);
+
 /* ------------------------------------------------------------------------- */
 
 #define FPM_INTERNAL

Modified: trunk/fpm2/include/fpm/fpmcode.h
===================================================================
--- trunk/fpm2/include/fpm/fpmcode.h	2008-03-20 20:39:04 UTC (rev 122)
+++ trunk/fpm2/include/fpm/fpmcode.h	2008-03-21 02:34:27 UTC (rev 123)
@@ -155,6 +155,61 @@
 
 /* ADVANCED MATH */
 
+/* square root */
+
+/* babylonian method */
+
+#define FPMSQRT8p8(a,b) FPMFUNC a##_t sqrt##a(a##_t x) { \
+    register a##_t r; \
+    if (b) return 0;  \
+    r = x >> 2;       \
+    r += div##a(x,r); r >>= 1; r += div##a(x,r); r >>= 1; \
+    r += div##a(x,r); r >>= 1; r += div##a(x,r); r >>= 1; \
+    return r; \
+}
+FPMSQRT8p8(fp8p8 , !x  )
+FPMSQRT8p8(ufp8p8, x<=0)
+
+#define FPMSQRT24p8(a,b) FPMFUNC a##_t sqrt##a(a##_t x) { \
+    register a##_t r; \
+    if (b) return 0;  \
+    r = x >> 2;       \
+    r += div##a(x,r); r >>= 1; r += div##a(x,r); r >>= 1; \
+    r += div##a(x,r); r >>= 1; r += div##a(x,r); r >>= 1; \
+    r += div##a(x,r); r >>= 1; r += div##a(x,r); r >>= 1; \
+    r += div##a(x,r); r >>= 1; r += div##a(x,r); r >>= 1; \
+    r += div##a(x,r); r >>= 1; r += div##a(x,r); r >>= 1; \
+    r += div##a(x,r); r >>= 1; r += div##a(x,r); r >>= 1; \
+    return r; \
+}
+FPMSQRT24p8(fp24p8 , !x  )
+FPMSQRT24p8(ufp24p8, x<=0)
+
+#define FPMSQRT16p16(a,b) FPMFUNC a##_t sqrt##a(a##_t x) { \
+    register a##_t r; \
+    if (b) return 0;  \
+    r = x >> 2;       \
+    r += div##a(x,r); r >>= 1; r += div##a(x,r); r >>= 1; \
+    r += div##a(x,r); r >>= 1; r += div##a(x,r); r >>= 1; \
+    r += div##a(x,r); r >>= 1; r += div##a(x,r); r >>= 1; \
+    r += div##a(x,r); r >>= 1; r += div##a(x,r); r >>= 1; \
+    return r; \
+}
+FPMSQRT16p16(fp16p16 , !x  )
+FPMSQRT16p16(ufp16p16, x<=0)
+
+#define FPMSQRT8p24(a,b) FPMFUNC a##_t sqrt##a(a##_t x) { \
+    register a##_t r; \
+    if (b) return 0;  \
+    r = x >> 2;       \
+    r += div##a(x,r); r >>= 1; r += div##a(x,r); r >>= 1; \
+    r += div##a(x,r); r >>= 1; r += div##a(x,r); r >>= 1; \
+    r += div##a(x,r); r >>= 1; \
+    return r; \
+}
+FPMSQRT8p24(fp8p24 , !x  )
+FPMSQRT8p24(ufp8p24, x<=0)
+
 /* ------------------------------------------------------------------------- */
 
 #endif



From ivop at mail.berlios.de  Fri Mar 21 03:46:14 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Fri, 21 Mar 2008 03:46:14 +0100
Subject: [fpm-cvslog] r124 - trunk/fpm2/include/fpm
Message-ID: <200803210246.m2L2kEWT001901@sheep.berlios.de>

Author: ivop
Date: 2008-03-21 03:46:14 +0100 (Fri, 21 Mar 2008)
New Revision: 124

Modified:
   trunk/fpm2/include/fpm/fpmcode.h
Log:
wording of comment


Modified: trunk/fpm2/include/fpm/fpmcode.h
===================================================================
--- trunk/fpm2/include/fpm/fpmcode.h	2008-03-21 02:34:27 UTC (rev 123)
+++ trunk/fpm2/include/fpm/fpmcode.h	2008-03-21 02:46:14 UTC (rev 124)
@@ -140,7 +140,7 @@
 FPMFUNC ufp16p16_t divufp16p16(FPMXYu16p16) { return ((uint64_t) x<<16) / y; }
 FPMFUNC ufp8p24_t  divufp8p24 (FPMXYu8p24 ) { return ((uint64_t) x<<24) / y; }
 
-/* fast division, less precision, lower max x, perhaps not that useful */
+/* fast division, less precision, smaller range, perhaps not that useful */
 
 FPMFUNC fp8p8_t    fastdivfp8p8   (FPMXY8p8   ) { return ((x<<4) / y) << 4;  }
 FPMFUNC fp24p8_t   fastdivfp24p8  (FPMXY24p8  ) { return ((x<<8) / y);       }



From ivop at mail.berlios.de  Fri Mar 21 12:48:00 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Fri, 21 Mar 2008 12:48:00 +0100
Subject: [fpm-cvslog] r125 - in trunk/fpm2: . include/fpm
Message-ID: <200803211148.m2LBm0wi021417@sheep.berlios.de>

Author: ivop
Date: 2008-03-21 12:47:59 +0100 (Fri, 21 Mar 2008)
New Revision: 125

Added:
   trunk/fpm2/benchmark.c
Modified:
   trunk/fpm2/Makefile
   trunk/fpm2/include/fpm/fpmcode.h
Log:
use old benchmark program to benchmark the new implementation


Modified: trunk/fpm2/Makefile
===================================================================
--- trunk/fpm2/Makefile	2008-03-21 02:46:14 UTC (rev 124)
+++ trunk/fpm2/Makefile	2008-03-21 11:47:59 UTC (rev 125)
@@ -4,3 +4,6 @@
 distclean: clean
 	rm -f *~ */*~ */*/*~ */*/*/*~
 
+benchmark: benchmark.c
+	gcc -I `pwd`/include -o benchmark benchmark.c -W -Wall -O3 -lm -s
+

Copied: trunk/fpm2/benchmark.c (from rev 110, trunk/fpm/benchmark.c)
===================================================================
--- trunk/fpm/benchmark.c	2008-03-20 00:14:39 UTC (rev 110)
+++ trunk/fpm2/benchmark.c	2008-03-21 11:47:59 UTC (rev 125)
@@ -0,0 +1,247 @@
+/* ------------------------------------------------------------------------- */
+
+/*
+ * Fixed Point Math Macro Library - Benchmark
+ *
+ * (C)2005,2006 by Ivo van Poorten
+ * Licensed under version 2 of the GPL
+ *
+ * $Id$
+ *
+ */
+
+/* ------------------------------------------------------------------------- */
+
+#include <stdio.h>
+#include <math.h>
+
+#include "fpm/fpm.h"
+
+#ifndef HAVE_RDTSC
+#include <sys/time.h>
+#include <time.h>
+#endif
+
+/* ------------------------------------------------------------------------- */
+
+/* 10000 and 100000 or something, but lower values while testing scripts,
+ * Makefile, etc... */
+
+#define INNERLOOP   10000
+#define OUTERLOOP   10000
+#define VAL1        2.9
+#define VAL2        213
+#define VAL3        3.1
+
+/* ------------------------------------------------------------------------- */
+
+static inline long long rdtsc()
+{
+#ifdef HAVE_RDTSC
+    long long timestamp;
+    asm volatile ("rdtsc\n" : "=A"(timestamp));
+    return timestamp;
+#else
+    struct timeval tv;
+    struct timezone tz;
+
+    gettimeofday(&tv, &tz);
+    
+    return tv.tv_sec*1000000L + tv.tv_usec;
+#endif
+}
+
+/* ------------------------------------------------------------------------- */
+
+#define timeloop(AVG, CODE) \
+    do { \
+        sum = (uint64_t) 0; \
+        for (j=0; j<OUTERLOOP; j++) { \
+            start = rdtsc(); \
+            for (i=0; i<INNERLOOP; i++) { \
+                CODE; \
+            } \
+            end = rdtsc(); \
+            sum += (end-start); \
+        } \
+        AVG = sum / OUTERLOOP; \
+    } while(0)
+
+#define NINEi "%i %i %i %i %i %i %i %i %i\n"
+
+#define printreport(HEADER, a) \
+    do { \
+        printf("#"HEADER"\n"); \
+        num=a*10; \
+        printf(NINEi, num++, 0, 0, 0, 0, 0, 0, 0, 0); \
+        printf(NINEi, num++, 0, prca, 0, 0, 0, 0, 0, 0); \
+        printf(NINEi, num++, 0, 0, prcb, 0, 0, 0, 0, 0); \
+        printf(NINEi, num++, 0, 0, 0, prcc, 0, 0, 0, 0); \
+        printf(NINEi, num++, 0, 0, 0, 0, prcd, 0, 0, 0); \
+        printf(NINEi, num++, 0, 0, 0, 0, 0, prcf, 0, 0); \
+        printf(NINEi, num++, 0, 0, 0, 0, 0, 0, prcg, 0); \
+        printf(NINEi, num++, 0, 0, 0, 0, 0, 0, 0, 0); \
+        printf("\n"); \
+        fflush(stdout); \
+        fprintf(stderr, "#"HEADER"\n"); \
+        fprintf(stderr, "# %-10s - % 4i%%\n", "fp8p8_t", prca); \
+        fprintf(stderr, "# %-10s - % 4i%%\n", "fp24p8_t", prcb); \
+        fprintf(stderr, "# %-10s - % 4i%%\n", "fp16p16_t", prcc); \
+        fprintf(stderr, "# %-10s - % 4i%%\n", "fp8p24_t", prcd); \
+        fprintf(stderr, "# %-10s - % 4i%%\n", "float", prcf); \
+        fprintf(stderr, "# %-10s - % 4i%%\n\n", "double", prcg); \
+        fflush(stderr); \
+    } while(0)
+
+#define calcperc(PRC, AVG, AVGR) \
+    do { \
+        PRC = (AVG*100)/(AVGR?AVGR:1); \
+    } while(0)
+
+#define calcallperc \
+    do { \
+        calcperc(prca, avga, avgf); \
+        calcperc(prcb, avgb, avgf); \
+        calcperc(prcc, avgc, avgf); \
+        calcperc(prcd, avgd, avgf); \
+        calcperc(prcf, avgf, avgf); \
+        calcperc(prcg, avgg, avgf); \
+    } while(0)
+
+/* ------------------------------------------------------------------------- */
+
+/* There's a foobar timeloop between the fp8p8 add/sub test and fp24p8 test,
+ * because somehow (can anybody explain?) one needs to "kick" the CPU out of
+ * 16-bit short int mode */
+
+int main()
+{
+    unsigned int i, j, num;
+    ufp8p8_t   a1, a2, a3, a4;
+    ufp24p8_t  b1, b2, b3, b4;
+    ufp16p16_t c1, c2, c3, c4;
+    ufp8p24_t  d1, d2, d3, d4;
+    float      f1, f2, f3, f4;
+    double     g1, g2, g3, g4;
+    uint64_t   start, end, sum;
+    uint64_t   avga, avgb, avgc, avgd, avgf, avgg;
+    int        prca, prcb, prcc, prcd, prcf, prcg;
+    int        foo, bar;
+
+    a2 = dtoufp8p8(VAL1);
+    b2 = dtoufp24p8(VAL1);
+    c2 = dtoufp16p16(VAL1);
+    d2 = dtoufp8p24(VAL1);
+    f2 = VAL1;
+    g2 = VAL1;
+
+    a3 = dtoufp8p8(VAL2);
+    b3 = dtoufp24p8(VAL2);
+    c3 = dtoufp16p16(VAL2);
+    d3 = dtoufp8p24(VAL2);
+    f3 = VAL2;
+    g3 = VAL2;
+
+    a4 = dtoufp8p8(VAL3);
+    b4 = dtoufp24p8(VAL3);
+    c4 = dtoufp16p16(VAL3);
+    d4 = dtoufp8p24(VAL3);
+    f4 = VAL3;
+    g4 = VAL3;
+
+    /* ADD */
+
+    timeloop(avga, a1=a2+a3);
+    timeloop(foo, bar=bar);
+    timeloop(avgb, b1=b2+b3);
+    timeloop(avgc, c1=c2+c3);
+    timeloop(avgd, d1=d2+d3);
+    timeloop(avgf, f1=f2+f3);
+    timeloop(avgg, g1=g2+g3);
+    calcallperc;
+    printreport("ADD", 0);
+
+    /* SUB */
+
+    timeloop(avga, a1=a2-a3);
+    timeloop(foo, bar=bar);
+    timeloop(avgb, b1=b2-b3);
+    timeloop(avgc, c1=c2-c3);
+    timeloop(avgd, d1=d2-d3);
+    timeloop(avgf, f1=f2-f3);
+    timeloop(avgg, g1=g2-g3);
+    calcallperc;
+    printreport("SUB", 1);
+
+    /* MUL */
+
+    timeloop(avga, a1=mulufp8p8(a2,a3)  );
+    timeloop(avgb, b1=mulufp24p8(b2,b3) );
+    timeloop(avgc, c1=mulufp16p16(c2,c3));
+    timeloop(avgd, d1=mulufp8p24(d2,d3) );
+    timeloop(avgf, f1=f2*f3);
+    timeloop(avgg, g1=g2*g3);
+    calcallperc;
+    printreport("MUL", 2);
+
+    /* DIV */
+
+    timeloop(avga, a1=divufp8p8(a2,a3)  );
+    timeloop(avgb, b1=divufp24p8(b2,b3) );
+    timeloop(avgc, c1=divufp16p16(c2,c3));
+    timeloop(avgd, d1=divufp8p24(d2,d3) );
+    timeloop(avgf, f1=f2/f3);
+    timeloop(avgg, g1=g2/g3);
+    calcallperc;
+    printreport("DIV", 3);
+
+    /* SQRT */
+
+    timeloop(avga, a1=sqrtufp8p8(a2)  );
+    timeloop(avgb, b1=sqrtufp24p8(b2) );
+    timeloop(avgc, c1=sqrtufp16p16(c2));
+    timeloop(avgd, d1=sqrtufp8p24(d2) );
+    timeloop(avgf, f1=sqrt(f2));
+    timeloop(avgg, g1=sqrt(g2));
+    calcallperc;
+    printreport("SQRT", 4);
+
+#if 0
+    /* EXP */
+
+    timeloop(avga, a1=expufp8p8(a2)  );
+    timeloop(avgb, b1=expufp24p8(b2) );
+    timeloop(avgc, c1=expufp16p16(c2));
+    timeloop(avgd, d1=expufp8p24(d2) );
+    timeloop(avgf, f1=exp(f2));
+    timeloop(avgg, g1=exp(g2));
+    calcallperc;
+    printreport("EXP", 5);
+
+    /* LN */
+
+    timeloop(avga, a1=lnufp8p8(a3)  );
+    timeloop(avgb, b1=lnufp24p8(b3) );
+    timeloop(avgc, c1=lnufp16p16(c3));
+    timeloop(avgd, d1=lnufp8p24(d3) );
+    timeloop(avgf, f1=log(f3));
+    timeloop(avgg, g1=log(g3));
+    calcallperc;
+    printreport("LN", 6);
+
+    /* POW */
+
+    timeloop(avga, a1=powufp8p8(a3,a4)  );
+    timeloop(avgb, b1=powufp24p8(b3,b4) );
+    timeloop(avgc, c1=powufp16p16(c3,c4));
+    timeloop(avgd, d1=powufp8p24(d3,d4) );
+    timeloop(avgf, f1=pow(f3,f4));
+    timeloop(avgg, g1=pow(g3,g4));
+    calcallperc;
+    printreport("POW", 7);
+#endif
+    return 0;
+}
+
+/* ------------------------------------------------------------------------- */
+

Modified: trunk/fpm2/include/fpm/fpmcode.h
===================================================================
--- trunk/fpm2/include/fpm/fpmcode.h	2008-03-21 02:46:14 UTC (rev 124)
+++ trunk/fpm2/include/fpm/fpmcode.h	2008-03-21 11:47:59 UTC (rev 125)
@@ -157,6 +157,11 @@
 
 /* square root */
 
+#ifndef FPM_SQUARE_ROOT_METHOD
+#   define FPM_SQUARE_ROOT_METHOD 1
+#endif
+
+#if FPM_SQUARE_ROOT_METHOD == 1
 /* babylonian method */
 
 #define FPMSQRT8p8(a,b) FPMFUNC a##_t sqrt##a(a##_t x) { \
@@ -210,6 +215,10 @@
 FPMSQRT8p24(fp8p24 , !x  )
 FPMSQRT8p24(ufp8p24, x<=0)
 
+#else
+#   error "Invalid FPM_SQUARE_ROOT_METHOD"
+#endif
+
 /* ------------------------------------------------------------------------- */
 
 #endif



From ivop at mail.berlios.de  Sat Mar 22 03:07:23 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Sat, 22 Mar 2008 03:07:23 +0100
Subject: [fpm-cvslog] r126 - trunk/fpm2
Message-ID: <200803220207.m2M27NAt018229@sheep.berlios.de>

Author: ivop
Date: 2008-03-22 03:07:23 +0100 (Sat, 22 Mar 2008)
New Revision: 126

Modified:
   trunk/fpm2/benchmark.c
Log:
ehm, really test the speed of the code by marking all variables volatile
(before most of the code was optimized into oblivion)


Modified: trunk/fpm2/benchmark.c
===================================================================
--- trunk/fpm2/benchmark.c	2008-03-21 11:47:59 UTC (rev 125)
+++ trunk/fpm2/benchmark.c	2008-03-22 02:07:23 UTC (rev 126)
@@ -28,7 +28,7 @@
  * Makefile, etc... */
 
 #define INNERLOOP   10000
-#define OUTERLOOP   10000
+#define OUTERLOOP   1000
 #define VAL1        2.9
 #define VAL2        213
 #define VAL3        3.1
@@ -117,13 +117,13 @@
 int main()
 {
     unsigned int i, j, num;
-    ufp8p8_t   a1, a2, a3, a4;
-    ufp24p8_t  b1, b2, b3, b4;
-    ufp16p16_t c1, c2, c3, c4;
-    ufp8p24_t  d1, d2, d3, d4;
-    float      f1, f2, f3, f4;
-    double     g1, g2, g3, g4;
-    uint64_t   start, end, sum;
+    volatile ufp8p8_t   a1, a2, a3, a4;
+    volatile ufp24p8_t  b1, b2, b3, b4;
+    volatile ufp16p16_t c1, c2, c3, c4;
+    volatile ufp8p24_t  d1, d2, d3, d4;
+    volatile float      f1, f2, f3, f4;
+    volatile double     g1, g2, g3, g4;
+    volatile uint64_t   start, end, sum;
     uint64_t   avga, avgb, avgc, avgd, avgf, avgg;
     int        prca, prcb, prcc, prcd, prcf, prcg;
     int        foo, bar;



From ivop at mail.berlios.de  Sat Mar 22 23:08:45 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Sat, 22 Mar 2008 23:08:45 +0100
Subject: [fpm-cvslog] r127 - trunk/fpm2
Message-ID: <200803222208.m2MM8jIZ025589@sheep.berlios.de>

Author: ivop
Date: 2008-03-22 23:08:45 +0100 (Sat, 22 Mar 2008)
New Revision: 127

Modified:
   trunk/fpm2/benchmark.c
Log:
make tests selectable from command line


Modified: trunk/fpm2/benchmark.c
===================================================================
--- trunk/fpm2/benchmark.c	2008-03-22 02:07:23 UTC (rev 126)
+++ trunk/fpm2/benchmark.c	2008-03-22 22:08:45 UTC (rev 127)
@@ -14,6 +14,7 @@
 
 #include <stdio.h>
 #include <math.h>
+#include <string.h>
 
 #include "fpm/fpm.h"
 
@@ -24,11 +25,8 @@
 
 /* ------------------------------------------------------------------------- */
 
-/* 10000 and 100000 or something, but lower values while testing scripts,
- * Makefile, etc... */
-
 #define INNERLOOP   10000
-#define OUTERLOOP   1000
+#define OUTERLOOP   1000        /* adjust for slower machines */
 #define VAL1        2.9
 #define VAL2        213
 #define VAL3        3.1
@@ -114,7 +112,7 @@
  * because somehow (can anybody explain?) one needs to "kick" the CPU out of
  * 16-bit short int mode */
 
-int main()
+int main(int argc, char **argv)
 {
     unsigned int i, j, num;
     volatile ufp8p8_t   a1, a2, a3, a4;
@@ -127,7 +125,18 @@
     uint64_t   avga, avgb, avgc, avgd, avgf, avgg;
     int        prca, prcb, prcc, prcd, prcf, prcg;
     int        foo, bar;
+    int        doall, doadd, dosub, domul, dodiv, dosqrt;
 
+    doall = doadd = dosub = domul = dodiv = dosqrt = 0;
+
+#define ELSIF(a) else if (!strcmp(*argv, #a)) do##a = 1
+    argv++;
+    while (--argc) {
+        if (0) ; ELSIF(add); ELSIF(sub); ELSIF(mul); ELSIF(div); ELSIF(sqrt);
+    }
+    if (doall)
+        doadd = dosub = domul = dodiv = dosqrt = 1;
+
     a2 = dtoufp8p8(VAL1);
     b2 = dtoufp24p8(VAL1);
     c2 = dtoufp16p16(VAL1);
@@ -149,6 +158,7 @@
     f4 = VAL3;
     g4 = VAL3;
 
+  if (doadd) {
     /* ADD */
 
     timeloop(avga, a1=a2+a3);
@@ -160,7 +170,9 @@
     timeloop(avgg, g1=g2+g3);
     calcallperc;
     printreport("ADD", 0);
+  }
 
+  if (dosub) {
     /* SUB */
 
     timeloop(avga, a1=a2-a3);
@@ -172,7 +184,9 @@
     timeloop(avgg, g1=g2-g3);
     calcallperc;
     printreport("SUB", 1);
+  }
 
+  if (domul) {
     /* MUL */
 
     timeloop(avga, a1=mulufp8p8(a2,a3)  );
@@ -183,7 +197,9 @@
     timeloop(avgg, g1=g2*g3);
     calcallperc;
     printreport("MUL", 2);
+  }
 
+  if (dodiv) {
     /* DIV */
 
     timeloop(avga, a1=divufp8p8(a2,a3)  );
@@ -194,7 +210,9 @@
     timeloop(avgg, g1=g2/g3);
     calcallperc;
     printreport("DIV", 3);
+  }
 
+  if (dosqrt) {
     /* SQRT */
 
     timeloop(avga, a1=sqrtufp8p8(a2)  );
@@ -205,6 +223,7 @@
     timeloop(avgg, g1=sqrt(g2));
     calcallperc;
     printreport("SQRT", 4);
+  }
 
 #if 0
     /* EXP */



From ivop at mail.berlios.de  Sat Mar 22 23:12:10 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Sat, 22 Mar 2008 23:12:10 +0100
Subject: [fpm-cvslog] r128 - trunk/fpm2
Message-ID: <200803222212.m2MMCAh4025929@sheep.berlios.de>

Author: ivop
Date: 2008-03-22 23:12:10 +0100 (Sat, 22 Mar 2008)
New Revision: 128

Modified:
   trunk/fpm2/Makefile
Log:
remove benchmark binary


Modified: trunk/fpm2/Makefile
===================================================================
--- trunk/fpm2/Makefile	2008-03-22 22:08:45 UTC (rev 127)
+++ trunk/fpm2/Makefile	2008-03-22 22:12:10 UTC (rev 128)
@@ -1,5 +1,6 @@
 
 clean:
+	rm -f benchmark
 
 distclean: clean
 	rm -f *~ */*~ */*/*~ */*/*/*~



From ivop at mail.berlios.de  Sun Mar 23 00:23:35 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Sun, 23 Mar 2008 00:23:35 +0100
Subject: [fpm-cvslog] r129 - trunk/fpm2/include/fpm
Message-ID: <200803222323.m2MNNZqW031605@sheep.berlios.de>

Author: ivop
Date: 2008-03-23 00:23:35 +0100 (Sun, 23 Mar 2008)
New Revision: 129

Modified:
   trunk/fpm2/include/fpm/fpmcode.h
Log:
digit-by-digit sqrt method


Modified: trunk/fpm2/include/fpm/fpmcode.h
===================================================================
--- trunk/fpm2/include/fpm/fpmcode.h	2008-03-22 22:12:10 UTC (rev 128)
+++ trunk/fpm2/include/fpm/fpmcode.h	2008-03-22 23:23:35 UTC (rev 129)
@@ -215,6 +215,28 @@
 FPMSQRT8p24(fp8p24 , !x  )
 FPMSQRT8p24(ufp8p24, x<=0)
 
+#elif FPM_SQUARE_ROOT_METHOD == 2
+
+/* digit-by-digit method, upper range of x is halved */
+
+#define FPMSQRT(a,b,c) FPMFUNC a##_t sqrt##a(a##_t x) { \
+    a##_t r = 0, s = 1<<b; \
+    while (s>x) s >>= 2;   \
+    while (s) {            \
+        if (x >= r+s) {    \
+            x -= r+s;      \
+            r += s<<1;     \
+        }                  \
+        r >>= 1; s >>= 2;  \
+    }                      \
+    return r<<c;           \
+}
+
+FPMSQRT( fp8p8  , 14, 4 )   FPMSQRT(ufp8p8  , 14, 4 )
+FPMSQRT( fp24p8 , 30, 4 )   FPMSQRT(ufp24p8 , 30, 4 )
+FPMSQRT( fp16p16, 30, 8 )   FPMSQRT(ufp16p16, 30, 8 )
+FPMSQRT( fp8p24 , 30, 12)   FPMSQRT(ufp8p24 , 30, 12)
+
 #else
 #   error "Invalid FPM_SQUARE_ROOT_METHOD"
 #endif



From ivop at mail.berlios.de  Sun Mar 23 00:24:46 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Sun, 23 Mar 2008 00:24:46 +0100
Subject: [fpm-cvslog] r130 - trunk/fpm2/include/fpm
Message-ID: <200803222324.m2MNOkij031695@sheep.berlios.de>

Author: ivop
Date: 2008-03-23 00:24:45 +0100 (Sun, 23 Mar 2008)
New Revision: 130

Modified:
   trunk/fpm2/include/fpm/fpmcode.h
Log:
better comment


Modified: trunk/fpm2/include/fpm/fpmcode.h
===================================================================
--- trunk/fpm2/include/fpm/fpmcode.h	2008-03-22 23:23:35 UTC (rev 129)
+++ trunk/fpm2/include/fpm/fpmcode.h	2008-03-22 23:24:45 UTC (rev 130)
@@ -217,7 +217,7 @@
 
 #elif FPM_SQUARE_ROOT_METHOD == 2
 
-/* digit-by-digit method, upper range of x is halved */
+/* digit-by-digit method, upper range of x is halved, result is less precise */
 
 #define FPMSQRT(a,b,c) FPMFUNC a##_t sqrt##a(a##_t x) { \
     a##_t r = 0, s = 1<<b; \



From ivop at mail.berlios.de  Sun Mar 23 02:03:24 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Sun, 23 Mar 2008 02:03:24 +0100
Subject: [fpm-cvslog] r131 - trunk/fpm2/include/fpm
Message-ID: <200803230103.m2N13Ofe029645@sheep.berlios.de>

Author: ivop
Date: 2008-03-23 02:03:23 +0100 (Sun, 23 Mar 2008)
New Revision: 131

Modified:
   trunk/fpm2/include/fpm/fpmcode.h
Log:
optimized quake 3 sqrt method with lomont's improvement for cpu's with fpu


Modified: trunk/fpm2/include/fpm/fpmcode.h
===================================================================
--- trunk/fpm2/include/fpm/fpmcode.h	2008-03-22 23:24:45 UTC (rev 130)
+++ trunk/fpm2/include/fpm/fpmcode.h	2008-03-23 01:03:23 UTC (rev 131)
@@ -237,6 +237,24 @@
 FPMSQRT( fp16p16, 30, 8 )   FPMSQRT(ufp16p16, 30, 8 )
 FPMSQRT( fp8p24 , 30, 12)   FPMSQRT(ufp8p24 , 30, 12)
 
+#elif FPM_SQUARE_ROOT_METHOD == 3
+
+/* John Carmack's Quake III algorithm with Chris Lomont's Initial Guess.
+ * http://www.lomont.org/Math/Papers/2003/InvSqrt.pdf
+ * Carmack: 0x5f3759df, Lomont: 0x5f375a86
+ * Version for CPU's with an FPU
+ */
+
+#define FPMSQRT(a) FPMFUNC a##_t sqrt##a(a##_t x) { \
+    register union { float f; int i; } u = { .f = a##tof(x) }; \
+    float xhalf = 0.5f * x;      \
+    u.i = 0x5f375a86 - (u.i>>1); \
+    return fto##a(u.f * (1.5f - xhalf * u.f * u.f)); \
+}
+
+FPMSQRT( fp8p8  )   FPMSQRT(ufp8p8  )   FPMSQRT( fp24p8 )   FPMSQRT(ufp24p8 )
+FPMSQRT( fp16p16)   FPMSQRT(ufp16p16)   FPMSQRT( fp8p24 )   FPMSQRT(ufp8p24 )
+
 #else
 #   error "Invalid FPM_SQUARE_ROOT_METHOD"
 #endif



From ivop at mail.berlios.de  Tue Mar 25 17:17:56 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Tue, 25 Mar 2008 17:17:56 +0100
Subject: [fpm-cvslog] r132 - trunk/fpm2/include/fpm
Message-ID: <200803251617.m2PGHu8B023629@sheep.berlios.de>

Author: ivop
Date: 2008-03-25 17:17:55 +0100 (Tue, 25 Mar 2008)
New Revision: 132

Modified:
   trunk/fpm2/include/fpm/fpm.h
   trunk/fpm2/include/fpm/fpmcode.h
Log:
more docs, digit-by-digit sqrt default


Modified: trunk/fpm2/include/fpm/fpm.h
===================================================================
--- trunk/fpm2/include/fpm/fpm.h	2008-03-23 01:03:23 UTC (rev 131)
+++ trunk/fpm2/include/fpm/fpm.h	2008-03-25 16:17:55 UTC (rev 132)
@@ -67,6 +67,14 @@
 
 #define FPMFUNC static fpm_always_inline
 
+
+/* Other stuff you can define before include fpm/fpm.h
+ *
+ * FPM_SQUARE_ROOT_METHOD   1   Babylonian Method
+ *                          2   Digit-by-digit Method   (default)
+ *                          3   Quake III + Lomont's improvement (needs FPU)
+ */
+
 /* ------------------------------------------------------------------------- */
 
 /* TYPES */

Modified: trunk/fpm2/include/fpm/fpmcode.h
===================================================================
--- trunk/fpm2/include/fpm/fpmcode.h	2008-03-23 01:03:23 UTC (rev 131)
+++ trunk/fpm2/include/fpm/fpmcode.h	2008-03-25 16:17:55 UTC (rev 132)
@@ -158,7 +158,7 @@
 /* square root */
 
 #ifndef FPM_SQUARE_ROOT_METHOD
-#   define FPM_SQUARE_ROOT_METHOD 1
+#   define FPM_SQUARE_ROOT_METHOD 2
 #endif
 
 #if FPM_SQUARE_ROOT_METHOD == 1
@@ -246,7 +246,7 @@
  */
 
 #define FPMSQRT(a) FPMFUNC a##_t sqrt##a(a##_t x) { \
-    register union { float f; int i; } u = { .f = a##tof(x) }; \
+    register union { float f; uint32_t i; } u = { .f = a##tof(x) }; \
     float xhalf = 0.5f * x;      \
     u.i = 0x5f375a86 - (u.i>>1); \
     return fto##a(u.f * (1.5f - xhalf * u.f * u.f)); \



From ivop at mail.berlios.de  Tue Mar 25 17:33:53 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Tue, 25 Mar 2008 17:33:53 +0100
Subject: [fpm-cvslog] r133 - trunk/fpm2/include/fpm
Message-ID: <200803251633.m2PGXrue027863@sheep.berlios.de>

Author: ivop
Date: 2008-03-25 17:33:53 +0100 (Tue, 25 Mar 2008)
New Revision: 133

Modified:
   trunk/fpm2/include/fpm/fpmcode.h
Log:
revert unrelated part of previous commit


Modified: trunk/fpm2/include/fpm/fpmcode.h
===================================================================
--- trunk/fpm2/include/fpm/fpmcode.h	2008-03-25 16:17:55 UTC (rev 132)
+++ trunk/fpm2/include/fpm/fpmcode.h	2008-03-25 16:33:53 UTC (rev 133)
@@ -246,7 +246,7 @@
  */
 
 #define FPMSQRT(a) FPMFUNC a##_t sqrt##a(a##_t x) { \
-    register union { float f; uint32_t i; } u = { .f = a##tof(x) }; \
+    register union { float f; int_t i; } u = { .f = a##tof(x) }; \
     float xhalf = 0.5f * x;      \
     u.i = 0x5f375a86 - (u.i>>1); \
     return fto##a(u.f * (1.5f - xhalf * u.f * u.f)); \



From ivop at mail.berlios.de  Tue Mar 25 17:34:10 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Tue, 25 Mar 2008 17:34:10 +0100
Subject: [fpm-cvslog] r134 - trunk/fpm2/include/fpm
Message-ID: <200803251634.m2PGYAw8027943@sheep.berlios.de>

Author: ivop
Date: 2008-03-25 17:34:10 +0100 (Tue, 25 Mar 2008)
New Revision: 134

Modified:
   trunk/fpm2/include/fpm/fpmcode.h
Log:
typo, grrr


Modified: trunk/fpm2/include/fpm/fpmcode.h
===================================================================
--- trunk/fpm2/include/fpm/fpmcode.h	2008-03-25 16:33:53 UTC (rev 133)
+++ trunk/fpm2/include/fpm/fpmcode.h	2008-03-25 16:34:10 UTC (rev 134)
@@ -246,7 +246,7 @@
  */
 
 #define FPMSQRT(a) FPMFUNC a##_t sqrt##a(a##_t x) { \
-    register union { float f; int_t i; } u = { .f = a##tof(x) }; \
+    register union { float f; int i; } u = { .f = a##tof(x) }; \
     float xhalf = 0.5f * x;      \
     u.i = 0x5f375a86 - (u.i>>1); \
     return fto##a(u.f * (1.5f - xhalf * u.f * u.f)); \



From ivop at mail.berlios.de  Tue Mar 25 17:34:41 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Tue, 25 Mar 2008 17:34:41 +0100
Subject: [fpm-cvslog] r135 - trunk/fpm2/include/fpm
Message-ID: <200803251634.m2PGYfHq028097@sheep.berlios.de>

Author: ivop
Date: 2008-03-25 17:34:40 +0100 (Tue, 25 Mar 2008)
New Revision: 135

Modified:
   trunk/fpm2/include/fpm/fpmcode.h
Log:
use uint32_t instead of int in q3 sqrt algo


Modified: trunk/fpm2/include/fpm/fpmcode.h
===================================================================
--- trunk/fpm2/include/fpm/fpmcode.h	2008-03-25 16:34:10 UTC (rev 134)
+++ trunk/fpm2/include/fpm/fpmcode.h	2008-03-25 16:34:40 UTC (rev 135)
@@ -246,7 +246,7 @@
  */
 
 #define FPMSQRT(a) FPMFUNC a##_t sqrt##a(a##_t x) { \
-    register union { float f; int i; } u = { .f = a##tof(x) }; \
+    register union { float f; uint32_t i; } u = { .f = a##tof(x) }; \
     float xhalf = 0.5f * x;      \
     u.i = 0x5f375a86 - (u.i>>1); \
     return fto##a(u.f * (1.5f - xhalf * u.f * u.f)); \



From ivop at mail.berlios.de  Tue Mar 25 17:40:58 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Tue, 25 Mar 2008 17:40:58 +0100
Subject: [fpm-cvslog] r136 - trunk/fpm2
Message-ID: <200803251640.m2PGew7g028978@sheep.berlios.de>

Author: ivop
Date: 2008-03-25 17:40:58 +0100 (Tue, 25 Mar 2008)
New Revision: 136

Modified:
   trunk/fpm2/Makefile
Log:
deps for benchmark


Modified: trunk/fpm2/Makefile
===================================================================
--- trunk/fpm2/Makefile	2008-03-25 16:34:40 UTC (rev 135)
+++ trunk/fpm2/Makefile	2008-03-25 16:40:58 UTC (rev 136)
@@ -5,6 +5,6 @@
 distclean: clean
 	rm -f *~ */*~ */*/*~ */*/*/*~
 
-benchmark: benchmark.c
+benchmark: benchmark.c include/fpm/fpm.h include/fpm/fpmcode.h
 	gcc -I `pwd`/include -o benchmark benchmark.c -W -Wall -O3 -lm -s
 



From ivop at mail.berlios.de  Tue Mar 25 17:59:01 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Tue, 25 Mar 2008 17:59:01 +0100
Subject: [fpm-cvslog] r137 - trunk/fpm2
Message-ID: <200803251659.m2PGx1ZB031148@sheep.berlios.de>

Author: ivop
Date: 2008-03-25 17:59:01 +0100 (Tue, 25 Mar 2008)
New Revision: 137

Modified:
   trunk/fpm2/benchmark.c
Log:
make 'benchmark all' work


Modified: trunk/fpm2/benchmark.c
===================================================================
--- trunk/fpm2/benchmark.c	2008-03-25 16:40:58 UTC (rev 136)
+++ trunk/fpm2/benchmark.c	2008-03-25 16:59:01 UTC (rev 137)
@@ -133,6 +133,7 @@
     argv++;
     while (--argc) {
         if (0) ; ELSIF(add); ELSIF(sub); ELSIF(mul); ELSIF(div); ELSIF(sqrt);
+        ELSIF(all);
     }
     if (doall)
         doadd = dosub = domul = dodiv = dosqrt = 1;



From ivop at mail.berlios.de  Tue Mar 25 17:59:33 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Tue, 25 Mar 2008 17:59:33 +0100
Subject: [fpm-cvslog] r138 - trunk/fpm2/include/fpm
Message-ID: <200803251659.m2PGxXV4031228@sheep.berlios.de>

Author: ivop
Date: 2008-03-25 17:59:33 +0100 (Tue, 25 Mar 2008)
New Revision: 138

Modified:
   trunk/fpm2/include/fpm/fpmcode.h
Log:
less code for (fast)mul/(fast)div


Modified: trunk/fpm2/include/fpm/fpmcode.h
===================================================================
--- trunk/fpm2/include/fpm/fpmcode.h	2008-03-25 16:59:01 UTC (rev 137)
+++ trunk/fpm2/include/fpm/fpmcode.h	2008-03-25 16:59:33 UTC (rev 138)
@@ -98,59 +98,44 @@
 
 /* BASIC MATH */
 
-#define FPMXY8p8    fp8p8_t    x, fp8p8_t    y
-#define FPMXY24p8   fp24p8_t   x, fp24p8_t   y
-#define FPMXY16p16  fp16p16_t  x, fp16p16_t  y
-#define FPMXY8p24   fp8p24_t   x, fp8p24_t   y
-#define FPMXYu8p8   ufp8p8_t   x, ufp8p8_t   y
-#define FPMXYu24p8  ufp24p8_t  x, ufp24p8_t  y
-#define FPMXYu16p16 ufp16p16_t x, ufp16p16_t y
-#define FPMXYu8p24  ufp8p24_t  x, ufp8p24_t  y
-
 /* multiplication (x*y) */
 
-FPMFUNC fp8p8_t    mulfp8p8   (FPMXY8p8   ) { return ( int32_t) x * y >> 8;  }
-FPMFUNC fp24p8_t   mulfp24p8  (FPMXY24p8  ) { return ( int64_t) x * y >> 8;  }
-FPMFUNC fp16p16_t  mulfp16p16 (FPMXY16p16 ) { return ( int64_t) x * y >> 16; }
-FPMFUNC fp8p24_t   mulfp8p24  (FPMXY8p24  ) { return ( int64_t) x * y >> 24; }
-FPMFUNC ufp8p8_t   mulufp8p8  (FPMXYu8p8  ) { return (uint32_t) x * y >> 8;  }
-FPMFUNC ufp24p8_t  mulufp24p8 (FPMXYu24p8 ) { return (uint64_t) x * y >> 8;  }
-FPMFUNC ufp16p16_t mulufp16p16(FPMXYu16p16) { return (uint64_t) x * y >> 16; }
-FPMFUNC ufp8p24_t  mulufp8p24 (FPMXYu8p24 ) { return (uint64_t) x * y >> 24; }
+#define FPMMUL(a,b,c) FPMFUNC a##_t mul##a(a##_t x, a##_t y){return (b)x*y>>c;}
 
+FPMMUL( fp8p8  ,  int32_t, 8 )  FPMMUL( fp24p8 ,  int64_t, 8 )
+FPMMUL( fp16p16,  int64_t, 16)  FPMMUL( fp8p24 ,  int64_t, 24)
+FPMMUL(ufp8p8  , uint32_t, 8 )  FPMMUL(ufp24p8 , uint64_t, 8 )
+FPMMUL(ufp16p16, uint64_t, 16)  FPMMUL(ufp8p24 , uint64_t, 24)
+
 /* fast multiplication, less precision */
 
-FPMFUNC fp8p8_t    fastmulfp8p8   (FPMXY8p8   ) { return (x>>4 ) * (y>>4 ); }
-FPMFUNC fp24p8_t   fastmulfp24p8  (FPMXY24p8  ) { return (x>>4 ) * (y>>4 ); }
-FPMFUNC fp16p16_t  fastmulfp16p16 (FPMXY16p16 ) { return (x>>8 ) * (y>>8 ); }
-FPMFUNC fp8p24_t   fastmulfp8p24  (FPMXY8p24  ) { return (x>>12) * (y>>12); }
-FPMFUNC ufp8p8_t   fastmulufp8p8  (FPMXYu8p8  ) { return (x>>4 ) * (y>>4 ); }
-FPMFUNC ufp24p8_t  fastmulufp24p8 (FPMXYu24p8 ) { return (x>>4 ) * (y>>4 ); }
-FPMFUNC ufp16p16_t fastmulufp16p16(FPMXYu16p16) { return (x>>8 ) * (y>>8 ); }
-FPMFUNC ufp8p24_t  fastmulufp8p24 (FPMXYu8p24 ) { return (x>>12) * (y>>12); }
+#define FPMFMUL(a,b) FPMFUNC a##_t fastmul##a(a##_t x, a##_t y) { \
+    return (x>>b) * (y>>b); \
+}
 
+FPMFMUL(fp8p8, 4) FPMFMUL(fp24p8, 4) FPMFMUL(fp16p16, 8) FPMFMUL(fp8p24, 12)
+FPMFMUL(ufp8p8,4) FPMFMUL(ufp24p8,4) FPMFMUL(ufp16p16,8) FPMFMUL(ufp8p24,12)
+
 /* division (x/y) */
 
-FPMFUNC fp8p8_t    divfp8p8   (FPMXY8p8   ) { return (( int32_t) x<<8 ) / y; }
-FPMFUNC fp24p8_t   divfp24p8  (FPMXY24p8  ) { return (( int64_t) x<<8 ) / y; }
-FPMFUNC fp16p16_t  divfp16p16 (FPMXY16p16 ) { return (( int64_t) x<<16) / y; }
-FPMFUNC fp8p24_t   divfp8p24  (FPMXY8p24  ) { return (( int64_t) x<<24) / y; }
-FPMFUNC ufp8p8_t   divufp8p8  (FPMXYu8p8  ) { return ((uint32_t) x<<8 ) / y; }
-FPMFUNC ufp24p8_t  divufp24p8 (FPMXYu24p8 ) { return ((uint64_t) x<<8 ) / y; }
-FPMFUNC ufp16p16_t divufp16p16(FPMXYu16p16) { return ((uint64_t) x<<16) / y; }
-FPMFUNC ufp8p24_t  divufp8p24 (FPMXYu8p24 ) { return ((uint64_t) x<<24) / y; }
+#define FPMDIV(a,b,c) FPMFUNC a##_t div##a(a##_t x, a##_t y) { \
+    return ((b)x<<c) / y; }
 
+FPMDIV( fp8p8  ,  int32_t, 8 )  FPMDIV( fp24p8 ,  int64_t, 8 )
+FPMDIV( fp16p16,  int64_t, 16)  FPMDIV( fp8p24 ,  int64_t, 24)
+FPMDIV(ufp8p8  , uint32_t, 8 )  FPMDIV(ufp24p8 , uint64_t, 8 )
+FPMDIV(ufp16p16, uint64_t, 16)  FPMDIV(ufp8p24 , uint64_t, 24)
+
 /* fast division, less precision, smaller range, perhaps not that useful */
 
-FPMFUNC fp8p8_t    fastdivfp8p8   (FPMXY8p8   ) { return ((x<<4) / y) << 4;  }
-FPMFUNC fp24p8_t   fastdivfp24p8  (FPMXY24p8  ) { return ((x<<8) / y);       }
-FPMFUNC fp16p16_t  fastdivfp16p16 (FPMXY16p16 ) { return ((x<<8) / y) << 8;  }
-FPMFUNC fp8p24_t   fastdivfp8p24  (FPMXY8p24  ) { return ((x<<4) / y) << 20; }
-FPMFUNC ufp8p8_t   fastdivufp8p8  (FPMXYu8p8  ) { return ((x<<4) / y) << 4;  }
-FPMFUNC ufp24p8_t  fastdivufp24p8 (FPMXYu24p8 ) { return ((x<<8) / y);       }
-FPMFUNC ufp16p16_t fastdivufp16p16(FPMXYu16p16) { return ((x<<8) / y) << 8;  }
-FPMFUNC ufp8p24_t  fastdivufp8p24 (FPMXYu8p24 ) { return ((x<<4) / y) << 20; }
+#define FPMFDIV(a,b,c) FPMFUNC a##_t fastdiv##a(a##_t x, a##_t y) { \
+    return ((x<<b) / y) << c; }
 
+FPMFDIV( fp8p8  , 4, 4 )    FPMFDIV( fp24p8 , 8, 0 )
+FPMFDIV( fp16p16, 8, 8 )    FPMFDIV( fp8p24 , 4, 20)
+FPMFDIV(ufp8p8  , 4, 4 )    FPMFDIV(ufp24p8 , 8, 0 )
+FPMFDIV(ufp16p16, 8, 8 )    FPMFDIV(ufp8p24 , 4, 20)
+
 /* ------------------------------------------------------------------------- */
 
 /* ADVANCED MATH */



From ivop at mail.berlios.de  Wed Mar 26 00:47:58 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Wed, 26 Mar 2008 00:47:58 +0100
Subject: [fpm-cvslog] r139 - trunk/fpm2
Message-ID: <200803252347.m2PNlw5H002172@sheep.berlios.de>

Author: ivop
Date: 2008-03-26 00:47:55 +0100 (Wed, 26 Mar 2008)
New Revision: 139

Added:
   trunk/fpm2/TODO
Log:
todo list


Added: trunk/fpm2/TODO
===================================================================
--- trunk/fpm2/TODO	2008-03-25 16:59:33 UTC (rev 138)
+++ trunk/fpm2/TODO	2008-03-25 23:47:55 UTC (rev 139)
@@ -0,0 +1,2 @@
+* better benchmark framework
+* floor, ceil, pow, ln, exp, sin, cos, tan, acos, asin, atan



From ivop at mail.berlios.de  Wed Mar 26 00:56:28 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Wed, 26 Mar 2008 00:56:28 +0100
Subject: [fpm-cvslog] r140 - trunk/fpm2/include/fpm
Message-ID: <200803252356.m2PNuShg011994@sheep.berlios.de>

Author: ivop
Date: 2008-03-26 00:56:27 +0100 (Wed, 26 Mar 2008)
New Revision: 140

Modified:
   trunk/fpm2/include/fpm/fpm.h
   trunk/fpm2/include/fpm/fpmcode.h
Log:
alternative float to fixed point conversion by extracting the mantissa
directly (avoids a float multiply, which is terribly slow on non-FPU arch's)


Modified: trunk/fpm2/include/fpm/fpm.h
===================================================================
--- trunk/fpm2/include/fpm/fpm.h	2008-03-25 23:47:55 UTC (rev 139)
+++ trunk/fpm2/include/fpm/fpm.h	2008-03-25 23:56:27 UTC (rev 140)
@@ -73,6 +73,10 @@
  * FPM_SQUARE_ROOT_METHOD   1   Babylonian Method
  *                          2   Digit-by-digit Method   (default)
  *                          3   Quake III + Lomont's improvement (needs FPU)
+ *
+ * FPM_NO_FPU_MUL_CONVERSIONS
+ *      Convert from float to fpXpY without using a multiply.
+ *
  */
 
 /* ------------------------------------------------------------------------- */

Modified: trunk/fpm2/include/fpm/fpmcode.h
===================================================================
--- trunk/fpm2/include/fpm/fpmcode.h	2008-03-25 23:47:55 UTC (rev 139)
+++ trunk/fpm2/include/fpm/fpmcode.h	2008-03-25 23:56:27 UTC (rev 140)
@@ -42,12 +42,40 @@
 
 /* float to fixed point */
 
+#ifndef FPM_NO_FPU_MUL_CONVERSIONS
+
 #define FPMF2FP(a,c) FPMFUNC a##_t    fto##a (float x) { return x * c; } \
                      FPMFUNC u##a##_t ftou##a(float x) { return x * c; }
 
 FPMF2FP(fp8p8  , 256     )  FPMF2FP(fp24p8 , 256     )
 FPMF2FP(fp16p16, 65536   )  FPMF2FP(fp8p24 , 16777216)
 
+#else
+
+#define FPMF2FP(a,b,c) a##_t fastfto##a(float f) { \
+    funion_t x = { .f = f }; \
+    a##_t fp, s = x.u8[3] >> 7;         /* extract sign */      \
+    x.u8[3] &= 0x7f;                    /* abs() */             \
+    x.f += b;                           /* range 0.0-128.0 */   \
+    fp   = (x.u32 & 0x7fffff) c;        /* extract mantissa */  \
+    fp  ^= -s;                          /* one's complement */  \
+    return fp + s;                      /* two's complement */  \
+}
+
+FPMF2FP(fp8p8  ,   128.0, >>8)  FPMF2FP(fp24p8 , 8388608.0, <<8)
+FPMF2FP(fp16p16, 32768.0, <<8)  FPMF2FP(fp8p24 ,     128.0, <<8)
+
+#define FPMF2UFP(a,b,c) a##_t fastfto##a(float f) { \
+    funion_t x = { .f = f }; \
+    x.f += b; \
+    return (x.u32 & 0x7fffff) c; \
+}
+
+FPMF2UFP(ufp8p8  ,   256.0, >>7)    FPMF2UFP(ufp24p8 , 16777216.0, <<9)
+FPMF2UFP(ufp16p16, 65536.0, <<9)    FPMF2UFP(ufp8p24 ,      256.0, <<9)
+
+#endif
+
 /* double to fixed point */
 
 #define FPMD2FP(a,c) FPMFUNC a##_t    dto##a (double x) { return x * c; } \



From ivop at mail.berlios.de  Wed Mar 26 00:59:20 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Wed, 26 Mar 2008 00:59:20 +0100
Subject: [fpm-cvslog] r141 - trunk/fpm2/include/fpm
Message-ID: <200803252359.m2PNxKLE014184@sheep.berlios.de>

Author: ivop
Date: 2008-03-26 00:59:18 +0100 (Wed, 26 Mar 2008)
New Revision: 141

Modified:
   trunk/fpm2/include/fpm/fpmcode.h
Log:
add missing funion_t type


Modified: trunk/fpm2/include/fpm/fpmcode.h
===================================================================
--- trunk/fpm2/include/fpm/fpmcode.h	2008-03-25 23:56:27 UTC (rev 140)
+++ trunk/fpm2/include/fpm/fpmcode.h	2008-03-25 23:59:18 UTC (rev 141)
@@ -30,6 +30,17 @@
 
 /* ------------------------------------------------------------------------- */
 
+/* Internal types */
+
+typedef union {
+    float    f;
+    uint32_t u32;
+    uint16_t u16[2];
+    uint8_t  u8[4];
+} funion_t;
+
+/* ------------------------------------------------------------------------- */
+
 /* CONVERSION */
 
 /* int to fixed point */



From ivop at mail.berlios.de  Wed Mar 26 01:00:11 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Wed, 26 Mar 2008 01:00:11 +0100
Subject: [fpm-cvslog] r142 - trunk/fpm2/include/fpm
Message-ID: <200803260000.m2Q00Bt0014542@sheep.berlios.de>

Author: ivop
Date: 2008-03-26 01:00:01 +0100 (Wed, 26 Mar 2008)
New Revision: 142

Modified:
   trunk/fpm2/include/fpm/fpmcode.h
Log:
prefix funion_t


Modified: trunk/fpm2/include/fpm/fpmcode.h
===================================================================
--- trunk/fpm2/include/fpm/fpmcode.h	2008-03-25 23:59:18 UTC (rev 141)
+++ trunk/fpm2/include/fpm/fpmcode.h	2008-03-26 00:00:01 UTC (rev 142)
@@ -37,7 +37,7 @@
     uint32_t u32;
     uint16_t u16[2];
     uint8_t  u8[4];
-} funion_t;
+} fpm_funion_t;
 
 /* ------------------------------------------------------------------------- */
 
@@ -64,7 +64,7 @@
 #else
 
 #define FPMF2FP(a,b,c) a##_t fastfto##a(float f) { \
-    funion_t x = { .f = f }; \
+    fpm_funion_t x = { .f = f }; \
     a##_t fp, s = x.u8[3] >> 7;         /* extract sign */      \
     x.u8[3] &= 0x7f;                    /* abs() */             \
     x.f += b;                           /* range 0.0-128.0 */   \
@@ -77,7 +77,7 @@
 FPMF2FP(fp16p16, 32768.0, <<8)  FPMF2FP(fp8p24 ,     128.0, <<8)
 
 #define FPMF2UFP(a,b,c) a##_t fastfto##a(float f) { \
-    funion_t x = { .f = f }; \
+    fpm_funion_t x = { .f = f }; \
     x.f += b; \
     return (x.u32 & 0x7fffff) c; \
 }



From ivop at mail.berlios.de  Wed Mar 26 01:04:40 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Wed, 26 Mar 2008 01:04:40 +0100
Subject: [fpm-cvslog] r143 - trunk/fpm2/include/fpm
Message-ID: <200803260004.m2Q04e4S018196@sheep.berlios.de>

Author: ivop
Date: 2008-03-26 01:04:40 +0100 (Wed, 26 Mar 2008)
New Revision: 143

Modified:
   trunk/fpm2/include/fpm/fpmcode.h
Log:
100l, remove fast prefix of float to fixed point conversion routines
(debug left-over)


Modified: trunk/fpm2/include/fpm/fpmcode.h
===================================================================
--- trunk/fpm2/include/fpm/fpmcode.h	2008-03-26 00:00:01 UTC (rev 142)
+++ trunk/fpm2/include/fpm/fpmcode.h	2008-03-26 00:04:40 UTC (rev 143)
@@ -63,7 +63,7 @@
 
 #else
 
-#define FPMF2FP(a,b,c) a##_t fastfto##a(float f) { \
+#define FPMF2FP(a,b,c) a##_t fto##a(float f) { \
     fpm_funion_t x = { .f = f }; \
     a##_t fp, s = x.u8[3] >> 7;         /* extract sign */      \
     x.u8[3] &= 0x7f;                    /* abs() */             \
@@ -76,7 +76,7 @@
 FPMF2FP(fp8p8  ,   128.0, >>8)  FPMF2FP(fp24p8 , 8388608.0, <<8)
 FPMF2FP(fp16p16, 32768.0, <<8)  FPMF2FP(fp8p24 ,     128.0, <<8)
 
-#define FPMF2UFP(a,b,c) a##_t fastfto##a(float f) { \
+#define FPMF2UFP(a,b,c) a##_t fto##a(float f) { \
     fpm_funion_t x = { .f = f }; \
     x.f += b; \
     return (x.u32 & 0x7fffff) c; \



From ivop at mail.berlios.de  Wed Mar 26 01:16:33 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Wed, 26 Mar 2008 01:16:33 +0100
Subject: [fpm-cvslog] r144 - trunk/fpm2/include/fpm
Message-ID: <200803260016.m2Q0GXWm026518@sheep.berlios.de>

Author: ivop
Date: 2008-03-26 01:16:32 +0100 (Wed, 26 Mar 2008)
New Revision: 144

Modified:
   trunk/fpm2/include/fpm/fpmcode.h
Log:
make float constants really float (i.e. 0.1f et cetera)


Modified: trunk/fpm2/include/fpm/fpmcode.h
===================================================================
--- trunk/fpm2/include/fpm/fpmcode.h	2008-03-26 00:04:40 UTC (rev 143)
+++ trunk/fpm2/include/fpm/fpmcode.h	2008-03-26 00:16:32 UTC (rev 144)
@@ -58,8 +58,8 @@
 #define FPMF2FP(a,c) FPMFUNC a##_t    fto##a (float x) { return x * c; } \
                      FPMFUNC u##a##_t ftou##a(float x) { return x * c; }
 
-FPMF2FP(fp8p8  , 256     )  FPMF2FP(fp24p8 , 256     )
-FPMF2FP(fp16p16, 65536   )  FPMF2FP(fp8p24 , 16777216)
+FPMF2FP(fp8p8  ,   256.0f)      FPMF2FP(fp24p8 ,      256.0f)
+FPMF2FP(fp16p16, 65536.0f)      FPMF2FP(fp8p24 , 16777216.0f)
 
 #else
 
@@ -73,8 +73,8 @@
     return fp + s;                      /* two's complement */  \
 }
 
-FPMF2FP(fp8p8  ,   128.0, >>8)  FPMF2FP(fp24p8 , 8388608.0, <<8)
-FPMF2FP(fp16p16, 32768.0, <<8)  FPMF2FP(fp8p24 ,     128.0, <<8)
+FPMF2FP(fp8p8  ,   128.0f, >>8)     FPMF2FP(fp24p8 , 8388608.0f, <<8)
+FPMF2FP(fp16p16, 32768.0f, <<8)     FPMF2FP(fp8p24 ,     128.0f, <<8)
 
 #define FPMF2UFP(a,b,c) a##_t fto##a(float f) { \
     fpm_funion_t x = { .f = f }; \
@@ -82,8 +82,8 @@
     return (x.u32 & 0x7fffff) c; \
 }
 
-FPMF2UFP(ufp8p8  ,   256.0, >>7)    FPMF2UFP(ufp24p8 , 16777216.0, <<9)
-FPMF2UFP(ufp16p16, 65536.0, <<9)    FPMF2UFP(ufp8p24 ,      256.0, <<9)
+FPMF2UFP(ufp8p8  ,   256.0f, >>7)   FPMF2UFP(ufp24p8 , 16777216.0f, <<9)
+FPMF2UFP(ufp16p16, 65536.0f, <<9)   FPMF2UFP(ufp8p24 ,      256.0f, <<9)
 
 #endif
 
@@ -92,8 +92,8 @@
 #define FPMD2FP(a,c) FPMFUNC a##_t    dto##a (double x) { return x * c; } \
                      FPMFUNC u##a##_t dtou##a(double x) { return x * c; }
 
-FPMD2FP(fp8p8  , 256     )  FPMD2FP(fp24p8 , 256     )
-FPMD2FP(fp16p16, 65536   )  FPMD2FP(fp8p24 , 16777216)
+FPMD2FP(fp8p8  ,   256.0f)      FPMD2FP(fp24p8 ,      256.0f)
+FPMD2FP(fp16p16, 65536.0f)      FPMD2FP(fp8p24 , 16777216.0f)
 
 /* fixed point to int (truncated) */
 
@@ -108,16 +108,16 @@
 #define FPMFP2F(a,c) FPMFUNC float a##tof (a##_t x) { return x / c; } \
                FPMFUNC float u##a##tof (u##a##_t x) { return x / c; }
 
-FPMFP2F(fp8p8  , 256.0     )    FPMFP2F(fp24p8 , 256.0     )
-FPMFP2F(fp16p16, 65536.0   )    FPMFP2F(fp8p24 , 16777216.0)
+FPMFP2F(fp8p8  ,   256.0f)      FPMFP2F(fp24p8 ,      256.0f)
+FPMFP2F(fp16p16, 65536.0f)      FPMFP2F(fp8p24 , 16777216.0f)
 
 /* fixed point to double */
 
 #define FPMFP2D(a,c) FPMFUNC double a##tod (a##_t x) { return x / c; } \
                FPMFUNC double u##a##tod (u##a##_t x) { return x / c; }
 
-FPMFP2D(fp8p8  , 256.0     )    FPMFP2D(fp24p8 , 256.0     )
-FPMFP2D(fp16p16, 65536.0   )    FPMFP2D(fp8p24 , 16777216.0)
+FPMFP2D(fp8p8  ,   256.0)       FPMFP2D(fp24p8 ,      256.0)
+FPMFP2D(fp16p16, 65536.0)       FPMFP2D(fp8p24 , 16777216.0)
 
 /* fixed point to fixed point */
 



From ivop at mail.berlios.de  Wed Mar 26 01:41:50 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Wed, 26 Mar 2008 01:41:50 +0100
Subject: [fpm-cvslog] r145 - trunk/fpm2/include/fpm
Message-ID: <200803260041.m2Q0foTw032417@sheep.berlios.de>

Author: ivop
Date: 2008-03-26 01:41:48 +0100 (Wed, 26 Mar 2008)
New Revision: 145

Modified:
   trunk/fpm2/include/fpm/fpmcode.h
Log:
non-fpu mul double to fixed point conversion routines


Modified: trunk/fpm2/include/fpm/fpmcode.h
===================================================================
--- trunk/fpm2/include/fpm/fpmcode.h	2008-03-26 00:16:32 UTC (rev 144)
+++ trunk/fpm2/include/fpm/fpmcode.h	2008-03-26 00:41:48 UTC (rev 145)
@@ -39,6 +39,14 @@
     uint8_t  u8[4];
 } fpm_funion_t;
 
+typedef union {
+    double   d;
+    uint64_t u64;
+    uint32_t u32[2];
+    uint16_t u16[4];
+    uint8_t  u8[8];
+} fpm_dunion_t;
+
 /* ------------------------------------------------------------------------- */
 
 /* CONVERSION */
@@ -89,12 +97,40 @@
 
 /* double to fixed point */
 
+#ifndef FPM_NO_FPU_MUL_CONVERSIONS
+
 #define FPMD2FP(a,c) FPMFUNC a##_t    dto##a (double x) { return x * c; } \
                      FPMFUNC u##a##_t dtou##a(double x) { return x * c; }
 
 FPMD2FP(fp8p8  ,   256.0f)      FPMD2FP(fp24p8 ,      256.0f)
 FPMD2FP(fp16p16, 65536.0f)      FPMD2FP(fp8p24 , 16777216.0f)
 
+#else
+
+#define FPMD2FP(a,b,c) a##_t dto##a(double d) { \
+    fpm_dunion_t x = { .d = d }; \
+    a##_t fp, s = x.u8[7] >> 7;                 /* extract sign */      \
+    x.u8[7] &= 0x7f;                            /* abs() */             \
+    x.d += b;                                   /* range 0.0-128.0 */   \
+    fp   = (x.u64 & 0x000fffffffffffffULL) c;   /* extract mantissa */  \
+    fp  ^= -s;                                  /* one's complement */  \
+    return fp + s;                              /* two's complement */  \
+}
+
+FPMD2FP(fp8p8  ,   128.0, >>37)   FPMD2FP(fp24p8 , 8388608.0, >>21)
+FPMD2FP(fp16p16, 32768.0, >>21)   FPMD2FP(fp8p24 ,     128.0, >>21)
+
+#define FPMD2UFP(a,b,c) a##_t dto##a(double d) { \
+    fpm_dunion_t x = { .d = d }; \
+    x.d += b; \
+    return (x.u64 & 0x000fffffffffffffULL) c; \
+}
+
+FPMD2UFP(ufp8p8  ,   256.0, >>36)   FPMD2UFP(ufp24p8 , 16777216.0, >>20)
+FPMD2UFP(ufp16p16, 65536.0, >>20)   FPMD2UFP(ufp8p24 ,      256.0, >>20)
+
+#endif
+
 /* fixed point to int (truncated) */
 
 #define FPMFP2I(a,c) FPMFUNC int a##toi (a##_t x) { return x c; } \



From ivop at mail.berlios.de  Wed Mar 26 01:59:35 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Wed, 26 Mar 2008 01:59:35 +0100
Subject: [fpm-cvslog] r146 - trunk/fpm2/include/fpm
Message-ID: <200803260059.m2Q0xZXr000486@sheep.berlios.de>

Author: ivop
Date: 2008-03-26 01:59:35 +0100 (Wed, 26 Mar 2008)
New Revision: 146

Modified:
   trunk/fpm2/include/fpm/fpmcode.h
Log:
fix comments on range of floats/doubles


Modified: trunk/fpm2/include/fpm/fpmcode.h
===================================================================
--- trunk/fpm2/include/fpm/fpmcode.h	2008-03-26 00:41:48 UTC (rev 145)
+++ trunk/fpm2/include/fpm/fpmcode.h	2008-03-26 00:59:35 UTC (rev 146)
@@ -75,7 +75,7 @@
     fpm_funion_t x = { .f = f }; \
     a##_t fp, s = x.u8[3] >> 7;         /* extract sign */      \
     x.u8[3] &= 0x7f;                    /* abs() */             \
-    x.f += b;                           /* range 0.0-128.0 */   \
+    x.f += b;                           /* range 0.0 ... b */   \
     fp   = (x.u32 & 0x7fffff) c;        /* extract mantissa */  \
     fp  ^= -s;                          /* one's complement */  \
     return fp + s;                      /* two's complement */  \
@@ -111,7 +111,7 @@
     fpm_dunion_t x = { .d = d }; \
     a##_t fp, s = x.u8[7] >> 7;                 /* extract sign */      \
     x.u8[7] &= 0x7f;                            /* abs() */             \
-    x.d += b;                                   /* range 0.0-128.0 */   \
+    x.d += b;                                   /* range 0.0 ... b */   \
     fp   = (x.u64 & 0x000fffffffffffffULL) c;   /* extract mantissa */  \
     fp  ^= -s;                                  /* one's complement */  \
     return fp + s;                              /* two's complement */  \



From ivop at mail.berlios.de  Wed Mar 26 02:00:15 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Wed, 26 Mar 2008 02:00:15 +0100
Subject: [fpm-cvslog] r147 - trunk/fpm2/include/fpm
Message-ID: <200803260100.m2Q10FmY000641@sheep.berlios.de>

Author: ivop
Date: 2008-03-26 02:00:13 +0100 (Wed, 26 Mar 2008)
New Revision: 147

Modified:
   trunk/fpm2/include/fpm/fpm.h
Log:
FPM_NO_FPU_MUL_CONVERSIONS affects both floats and doubles


Modified: trunk/fpm2/include/fpm/fpm.h
===================================================================
--- trunk/fpm2/include/fpm/fpm.h	2008-03-26 00:59:35 UTC (rev 146)
+++ trunk/fpm2/include/fpm/fpm.h	2008-03-26 01:00:13 UTC (rev 147)
@@ -75,7 +75,7 @@
  *                          3   Quake III + Lomont's improvement (needs FPU)
  *
  * FPM_NO_FPU_MUL_CONVERSIONS
- *      Convert from float to fpXpY without using a multiply.
+ *      Convert from float/double to fpXpY without using a multiply.
  *
  */
 



From ivop at mail.berlios.de  Wed Mar 26 03:08:06 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Wed, 26 Mar 2008 03:08:06 +0100
Subject: [fpm-cvslog] r148 - trunk/fpm2/include/fpm
Message-ID: <200803260208.m2Q286mA009411@sheep.berlios.de>

Author: ivop
Date: 2008-03-26 03:08:05 +0100 (Wed, 26 Mar 2008)
New Revision: 148

Modified:
   trunk/fpm2/include/fpm/fpmcode.h
Log:
comment about signed right shift not preserving the sign bit on some platforms.


Modified: trunk/fpm2/include/fpm/fpmcode.h
===================================================================
--- trunk/fpm2/include/fpm/fpmcode.h	2008-03-26 01:00:13 UTC (rev 147)
+++ trunk/fpm2/include/fpm/fpmcode.h	2008-03-26 02:08:05 UTC (rev 148)
@@ -71,9 +71,11 @@
 
 #else
 
+/* XXX: signed shift right does not preserve the sign bit everywhere */
+
 #define FPMF2FP(a,b,c) a##_t fto##a(float f) { \
     fpm_funion_t x = { .f = f }; \
-    a##_t fp, s = x.u8[3] >> 7;         /* extract sign */      \
+    a##_t fp, s = x.u8[3] >> 7;         /* extract sign XXX */      \
     x.u8[3] &= 0x7f;                    /* abs() */             \
     x.f += b;                           /* range 0.0 ... b */   \
     fp   = (x.u32 & 0x7fffff) c;        /* extract mantissa */  \



From ivop at mail.berlios.de  Wed Mar 26 03:12:59 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Wed, 26 Mar 2008 03:12:59 +0100
Subject: [fpm-cvslog] r149 - trunk/fpm2/include/fpm
Message-ID: <200803260212.m2Q2CxiA009675@sheep.berlios.de>

Author: ivop
Date: 2008-03-26 03:12:59 +0100 (Wed, 26 Mar 2008)
New Revision: 149

Modified:
   trunk/fpm2/include/fpm/fpmcode.h
Log:
the comment about the sign bit was nonsense as i shift an unsigned value


Modified: trunk/fpm2/include/fpm/fpmcode.h
===================================================================
--- trunk/fpm2/include/fpm/fpmcode.h	2008-03-26 02:08:05 UTC (rev 148)
+++ trunk/fpm2/include/fpm/fpmcode.h	2008-03-26 02:12:59 UTC (rev 149)
@@ -71,11 +71,9 @@
 
 #else
 
-/* XXX: signed shift right does not preserve the sign bit everywhere */
-
 #define FPMF2FP(a,b,c) a##_t fto##a(float f) { \
     fpm_funion_t x = { .f = f }; \
-    a##_t fp, s = x.u8[3] >> 7;         /* extract sign XXX */      \
+    a##_t fp, s = x.u8[3] >> 7;         /* extract sign */      \
     x.u8[3] &= 0x7f;                    /* abs() */             \
     x.f += b;                           /* range 0.0 ... b */   \
     fp   = (x.u32 & 0x7fffff) c;        /* extract mantissa */  \



From ivop at mail.berlios.de  Wed Mar 26 12:41:10 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Wed, 26 Mar 2008 12:41:10 +0100
Subject: [fpm-cvslog] r150 - trunk/fpm2/include/fpm
Message-ID: <200803261141.m2QBfA2c030610@sheep.berlios.de>

Author: ivop
Date: 2008-03-26 12:41:09 +0100 (Wed, 26 Mar 2008)
New Revision: 150

Modified:
   trunk/fpm2/include/fpm/fpm.h
   trunk/fpm2/include/fpm/fpmcode.h
Log:
floor (round down to nearest integer) of fixed point types


Modified: trunk/fpm2/include/fpm/fpm.h
===================================================================
--- trunk/fpm2/include/fpm/fpm.h	2008-03-26 02:12:59 UTC (rev 149)
+++ trunk/fpm2/include/fpm/fpm.h	2008-03-26 11:41:09 UTC (rev 150)
@@ -253,6 +253,17 @@
 FPMFUNC ufp16p16_t fastdivufp16p16(ufp16p16_t x, ufp16p16_t y);
 FPMFUNC ufp8p24_t  fastdivufp8p24 (ufp8p24_t  x, ufp8p24_t  y);
 
+/* floor (round down to nearest integer) */
+
+FPMFUNC fp8p8_t    floorfp8p8   ( fp8p8_t   x);
+FPMFUNC fp24p8_t   floorfp24p8  ( fp24p8_t  x);
+FPMFUNC fp16p16_t  floorfp16p16 ( fp16p16_t x);
+FPMFUNC fp8p24_t   floorfp8p24  ( fp8p24_t  x);
+FPMFUNC ufp8p8_t   floorufp8p8  (ufp8p8_t   x);
+FPMFUNC ufp24p8_t  floorufp24p8 (ufp24p8_t  x);
+FPMFUNC ufp16p16_t floorufp16p16(ufp16p16_t x);
+FPMFUNC ufp8p24_t  floorufp8p24 (ufp8p24_t  x);
+
 /* ------------------------------------------------------------------------- */
 
 /* ADVANCED MATH */

Modified: trunk/fpm2/include/fpm/fpmcode.h
===================================================================
--- trunk/fpm2/include/fpm/fpmcode.h	2008-03-26 02:12:59 UTC (rev 149)
+++ trunk/fpm2/include/fpm/fpmcode.h	2008-03-26 11:41:09 UTC (rev 150)
@@ -211,6 +211,15 @@
 FPMFDIV(ufp8p8  , 4, 4 )    FPMFDIV(ufp24p8 , 8, 0 )
 FPMFDIV(ufp16p16, 8, 8 )    FPMFDIV(ufp8p24 , 4, 20)
 
+/* floor (round down to nearest integer) */
+
+#define FPMFLOOR(a,b) FPMFUNC floor##a(a##_t x) { return x & b; };
+
+FPMFLOOR( fp8p8  , 0xff00    )  FPMFLOOR( fp24p8 , 0xffffff00)
+FPMFLOOR( fp16p16, 0xffff0000)  FPMFLOOR( fp8p24 , 0xff000000)
+FPMFLOOR(ufp8p8  , 0xff00    )  FPMFLOOR(ufp24p8 , 0xffffff00)
+FPMFLOOR(ufp16p16, 0xffff0000)  FPMFLOOR(ufp8p24 , 0xff000000)
+
 /* ------------------------------------------------------------------------- */
 
 /* ADVANCED MATH */



From ivop at mail.berlios.de  Wed Mar 26 17:43:54 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Wed, 26 Mar 2008 17:43:54 +0100
Subject: [fpm-cvslog] r151 - trunk/fpm2/include/fpm
Message-ID: <200803261643.m2QGhsHr004332@sheep.berlios.de>

Author: ivop
Date: 2008-03-26 17:43:53 +0100 (Wed, 26 Mar 2008)
New Revision: 151

Modified:
   trunk/fpm2/include/fpm/fpmcode.h
Log:
fix floor functions; return type; less code for signed/unsigned code


Modified: trunk/fpm2/include/fpm/fpmcode.h
===================================================================
--- trunk/fpm2/include/fpm/fpmcode.h	2008-03-26 11:41:09 UTC (rev 150)
+++ trunk/fpm2/include/fpm/fpmcode.h	2008-03-26 16:43:53 UTC (rev 151)
@@ -213,12 +213,11 @@
 
 /* floor (round down to nearest integer) */
 
-#define FPMFLOOR(a,b) FPMFUNC floor##a(a##_t x) { return x & b; };
+#define FPMFLOOR(a,b) FPMFUNC a##_t floor##a(a##_t x) { return x & b; }; \
+               FPMFUNC u##a##_t flooru##a(u##a##_t x) { return x & b; };
 
 FPMFLOOR( fp8p8  , 0xff00    )  FPMFLOOR( fp24p8 , 0xffffff00)
 FPMFLOOR( fp16p16, 0xffff0000)  FPMFLOOR( fp8p24 , 0xff000000)
-FPMFLOOR(ufp8p8  , 0xff00    )  FPMFLOOR(ufp24p8 , 0xffffff00)
-FPMFLOOR(ufp16p16, 0xffff0000)  FPMFLOOR(ufp8p24 , 0xff000000)
 
 /* ------------------------------------------------------------------------- */
 



From ivop at mail.berlios.de  Wed Mar 26 17:50:26 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Wed, 26 Mar 2008 17:50:26 +0100
Subject: [fpm-cvslog] r152 - trunk/fpm2/include/fpm
Message-ID: <200803261650.m2QGoQvd005275@sheep.berlios.de>

Author: ivop
Date: 2008-03-26 17:50:26 +0100 (Wed, 26 Mar 2008)
New Revision: 152

Modified:
   trunk/fpm2/include/fpm/fpmcode.h
Log:
floor cosmetics; ceil functions (round up to nearest integer)


Modified: trunk/fpm2/include/fpm/fpmcode.h
===================================================================
--- trunk/fpm2/include/fpm/fpmcode.h	2008-03-26 16:43:53 UTC (rev 151)
+++ trunk/fpm2/include/fpm/fpmcode.h	2008-03-26 16:50:26 UTC (rev 152)
@@ -216,9 +216,17 @@
 #define FPMFLOOR(a,b) FPMFUNC a##_t floor##a(a##_t x) { return x & b; }; \
                FPMFUNC u##a##_t flooru##a(u##a##_t x) { return x & b; };
 
-FPMFLOOR( fp8p8  , 0xff00    )  FPMFLOOR( fp24p8 , 0xffffff00)
-FPMFLOOR( fp16p16, 0xffff0000)  FPMFLOOR( fp8p24 , 0xff000000)
+FPMFLOOR(fp8p8  , 0xff00    )   FPMFLOOR(fp24p8 , 0xffffff00)
+FPMFLOOR(fp16p16, 0xffff0000)   FPMFLOOR(fp8p24 , 0xff000000)
 
+/* ceil (round up to nearest integer) */
+
+#define FPMCEIL(a,b,c) FPMFUNC a##_t ceil##a(a##_t x) { return (x+b) & c; }; \
+              FPMFUNC u##a##_t ceil##u##a(u##a##_t x) { return (x+b) & c; };
+
+FPMCEIL(fp8p8  , 0x0100    ,0xff00    ) FPMCEIL(fp24p8, 0x00000100,0xffffff00)
+FPMCEIL(fp16p16, 0x00010000,0xffff0000) FPMCEIL(fp8p24, 0x01000000,0xff000000)
+
 /* ------------------------------------------------------------------------- */
 
 /* ADVANCED MATH */



From ivop at mail.berlios.de  Wed Mar 26 17:52:25 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Wed, 26 Mar 2008 17:52:25 +0100
Subject: [fpm-cvslog] r153 - trunk/fpm2/include/fpm
Message-ID: <200803261652.m2QGqPsL005453@sheep.berlios.de>

Author: ivop
Date: 2008-03-26 17:52:21 +0100 (Wed, 26 Mar 2008)
New Revision: 153

Modified:
   trunk/fpm2/include/fpm/fpm.h
Log:
ceil prototypes


Modified: trunk/fpm2/include/fpm/fpm.h
===================================================================
--- trunk/fpm2/include/fpm/fpm.h	2008-03-26 16:50:26 UTC (rev 152)
+++ trunk/fpm2/include/fpm/fpm.h	2008-03-26 16:52:21 UTC (rev 153)
@@ -264,6 +264,17 @@
 FPMFUNC ufp16p16_t floorufp16p16(ufp16p16_t x);
 FPMFUNC ufp8p24_t  floorufp8p24 (ufp8p24_t  x);
 
+/* ceil (round up to nearest integer) */
+
+FPMFUNC fp8p8_t    ceilfp8p8   ( fp8p8_t   x);
+FPMFUNC fp24p8_t   ceilfp24p8  ( fp24p8_t  x);
+FPMFUNC fp16p16_t  ceilfp16p16 ( fp16p16_t x);
+FPMFUNC fp8p24_t   ceilfp8p24  ( fp8p24_t  x);
+FPMFUNC ufp8p8_t   ceilufp8p8  (ufp8p8_t   x);
+FPMFUNC ufp24p8_t  ceilufp24p8 (ufp24p8_t  x);
+FPMFUNC ufp16p16_t ceilufp16p16(ufp16p16_t x);
+FPMFUNC ufp8p24_t  ceilufp8p24 (ufp8p24_t  x);
+
 /* ------------------------------------------------------------------------- */
 
 /* ADVANCED MATH */



From ivop at mail.berlios.de  Wed Mar 26 18:52:48 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Wed, 26 Mar 2008 18:52:48 +0100
Subject: [fpm-cvslog] r154 - trunk/fpm2/include/fpm
Message-ID: <200803261752.m2QHqmXk013378@sheep.berlios.de>

Author: ivop
Date: 2008-03-26 18:52:47 +0100 (Wed, 26 Mar 2008)
New Revision: 154

Modified:
   trunk/fpm2/include/fpm/fpm.h
   trunk/fpm2/include/fpm/fpmcode.h
Log:
fract functions (return fraction of fixed point value, preserve sign)


Modified: trunk/fpm2/include/fpm/fpm.h
===================================================================
--- trunk/fpm2/include/fpm/fpm.h	2008-03-26 16:52:21 UTC (rev 153)
+++ trunk/fpm2/include/fpm/fpm.h	2008-03-26 17:52:47 UTC (rev 154)
@@ -275,6 +275,17 @@
 FPMFUNC ufp16p16_t ceilufp16p16(ufp16p16_t x);
 FPMFUNC ufp8p24_t  ceilufp8p24 (ufp8p24_t  x);
 
+/* fract (return fraction of fixed point value) */
+
+FPMFUNC fp8p8_t    fractfp8p8   ( fp8p8_t   x);
+FPMFUNC fp24p8_t   fractfp24p8  ( fp24p8_t  x);
+FPMFUNC fp16p16_t  fractfp16p16 ( fp16p16_t x);
+FPMFUNC fp8p24_t   fractfp8p24  ( fp8p24_t  x);
+FPMFUNC ufp8p8_t   fractufp8p8  (ufp8p8_t   x);
+FPMFUNC ufp24p8_t  fractufp24p8 (ufp24p8_t  x);
+FPMFUNC ufp16p16_t fractufp16p16(ufp16p16_t x);
+FPMFUNC ufp8p24_t  fractufp8p24 (ufp8p24_t  x);
+
 /* ------------------------------------------------------------------------- */
 
 /* ADVANCED MATH */

Modified: trunk/fpm2/include/fpm/fpmcode.h
===================================================================
--- trunk/fpm2/include/fpm/fpmcode.h	2008-03-26 16:52:21 UTC (rev 153)
+++ trunk/fpm2/include/fpm/fpmcode.h	2008-03-26 17:52:47 UTC (rev 154)
@@ -227,6 +227,18 @@
 FPMCEIL(fp8p8  , 0x0100    ,0xff00    ) FPMCEIL(fp24p8, 0x00000100,0xffffff00)
 FPMCEIL(fp16p16, 0x00010000,0xffff0000) FPMCEIL(fp8p24, 0x01000000,0xff000000)
 
+/* fract (return fraction of fixed point value) */
+
+#define FPMFRAC(a) FPMFUNC a##_t fract##a(a##_t x) { \
+    if (x>= 0) return fractu##a(x); else return fractu##a(~x)+1; }
+
+FPMFRAC(fp8p8) FPMFRAC(fp24p8) FPMFRAC(fp16p16) FPMFRAC(fp8p24)
+
+FPMFUNC ufp8p8_t   fractufp8p8  (ufp8p8_t   x) { return x & 0x00ff; }
+FPMFUNC ufp24p8_t  fractufp24p8 (ufp24p8_t  x) { return x & 0x000000ff; }
+FPMFUNC ufp16p16_t fractufp16p16(ufp16p16_t x) { return x & 0x0000ffff; }
+FPMFUNC ufp8p24_t  fractufp8p24 (ufp8p24_t  x) { return x & 0x00ffffff; }
+
 /* ------------------------------------------------------------------------- */
 
 /* ADVANCED MATH */



From ivop at mail.berlios.de  Mon Mar 31 00:46:02 2008
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Mon, 31 Mar 2008 00:46:02 +0200
Subject: [fpm-cvslog] r155 - in trunk: . blog
Message-ID: <200803302246.m2UMk2gi013928@sheep.berlios.de>

Author: ivop
Date: 2008-03-31 00:46:02 +0200 (Mon, 31 Mar 2008)
New Revision: 155

Added:
   trunk/blog/
   trunk/blog/01101011.png
   trunk/blog/01101011s.png
   trunk/blog/default.css
   trunk/blog/feed.png
   trunk/blog/fpm.xml
   trunk/blog/fpm.xsl
   trunk/blog/xsl_mop-up.js
Log:
first draft of new webpage for fpm's rewrite.
it's a combined webpage and rss feed.


Added: trunk/blog/01101011.png
===================================================================
(Binary files differ)


Property changes on: trunk/blog/01101011.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/blog/01101011s.png
===================================================================
(Binary files differ)


Property changes on: trunk/blog/01101011s.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/blog/default.css
===================================================================
--- trunk/blog/default.css	2008-03-26 17:52:47 UTC (rev 154)
+++ trunk/blog/default.css	2008-03-30 22:46:02 UTC (rev 155)
@@ -0,0 +1,146 @@
+
+body {
+    font-family:        sans-serif;
+}
+
+img {
+    border:             none;
+}
+
+a {
+    color: #003399;
+    text-decoration:    none;
+}
+
+a:visited {
+    color: #003399;
+    text-decoration:    none;
+}
+
+a:hover {
+    color: #333333;
+    text-decoration:    none;
+}
+
+.heading a {
+    color:              #1d2222;
+    text-decoration:    none;
+}
+
+.heading a:visited {
+    color:              #1d2222;
+    text-decoration:    none;
+}
+
+.heading a:hover {
+    color:              #1d2222;
+    text-decoration:    none;
+}
+
+.heading {
+    background-color:   #ffffff;
+    margin:             0px;
+    padding:            8px;
+}
+
+.headingtitle {
+    background-color:   #dde2e2;
+    color:              #000000;
+    font-size:          24pt;
+    margin:             0px;
+    padding:            8px;
+    border-top:         thin solid #000000;
+}
+
+.headingdescription {
+    color:              #6d7272;
+    font-size:          12pt;
+    margin:             0px;
+    padding:            8px;
+}
+
+.item {
+    background-color:   #ffffff;
+    margin:             0px 15em 0px 0px;
+    margin-top:         8px;
+    padding:            8px;
+}
+
+.itemtitle {
+    color:              #000000;
+    font-size:          12pt;
+    margin:             0px;
+    padding-left:       8px;
+    padding-right:      8px;
+    border-bottom:      thin solid;
+    text-align:         left;
+}
+
+.itemauthordate {
+    width:              100%;
+    margin:             0px;
+    padding-left:       6px;
+    padding-right:      6px;
+    font-size:          6pt;
+}
+
+.itemauthor {
+    margin:             0px;
+    padding:            0px;
+}
+
+.itemdate {
+    margin:             0px;
+    padding:            0px;
+    text-align:         right;
+}
+
+.itemdescription {
+    background-color:   #edf2f2;
+    font-size:          8pt;
+    margin:             0px;
+    padding:            8px;
+    text-align:         justify;
+}
+
+.itemdescription a:hover {
+    text-decoration:    underline;
+}
+
+.linkbar {
+    font-size:          6pt;
+    margin:             0px;
+    padding:            8px;
+}
+
+.toc {
+    background-color:   #edf2f2;
+    color:              #1d2222;
+    margin:             0px;
+    padding:            8px;
+    font-size:          10pt;
+    position:           absolute;
+    right:              32px;
+    top:                11em;
+    width:              15em;
+}
+
+.toc a:hover {
+    margin-left:        0.2em;
+}
+
+.toc ul li {
+    list-style:         none;
+    margin:             0px;
+    margin-left:        -3em;
+    padding:            0px;
+}
+
+.logo {
+    margin:             0px;
+    padding:            0px;
+    position:           absolute;
+    right:              1em;
+    top:                0.5em;
+}
+

Added: trunk/blog/feed.png
===================================================================
(Binary files differ)


Property changes on: trunk/blog/feed.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/blog/fpm.xml
===================================================================
--- trunk/blog/fpm.xml	2008-03-26 17:52:47 UTC (rev 154)
+++ trunk/blog/fpm.xml	2008-03-30 22:46:02 UTC (rev 155)
@@ -0,0 +1,69 @@
+<?xml version="1.0" encoding="iso-8859-1"?>
+<?xml-stylesheet type="text/xsl" href="fpm.xsl"?>
+<rss version="2.0">
+
+<channel>
+    <title>Fixed Point Math Library</title>
+    <link>http://fpm.berlios.de/blog/fpm.xml</link>
+    <description>&#160;</description>
+    <generator>Manual</generator>
+    <language>en</language>
+    <image>
+        <title>Fixed Point Math Library</title>
+        <link>http://fpm.berlios.de/blog/fpm.xml</link>
+        <url>http://fpm.berlios.de/blog/01101011s.png</url>
+    </image>
+
+<!-- Template for a new entry; 10 lines
+    <item>
+        <title>title here</title>
+        <link>#title_here</link>
+        <author>Ivo</author>
+        <pubDate>output of date '+%a, %d %b %Y %H:%M:%S %z' here</pubDate>
+        <description><![CDATA[
+            <p>The quick brown <b>fox</b> jumps over the lazy dog.</p>
+            ]]>
+        </description>
+    </item>
+-->
+
+    <item>
+        <title>New blog-like webpage</title>
+        <link>#new_blog_like_webpage</link>
+        <author>Ivo</author>
+        <pubDate>Sun, 30 Mar 2008 22:53:11 +0200</pubDate>
+        <description><![CDATA[
+            <p>
+            After some messing around with
+            <a href="http://www.python.org/">Python</a> and
+            <a href="http://feedparser.org/">Universal Feed Parser</a>
+            to convert an RSS feed to an HTML page,
+            I decided I did not want an offline convertor but have the
+            client convert the RSS feed on-the-fly. So I read up
+            on XSLT and implemented the basics of this page.
+            </p>
+            <p>
+            Soon thereafter, I stumbled upon this Mozilla
+            <a href"https://bugzilla.mozilla.org/show_bug.cgi?id=98168#c11">
+                'Feature'</a>, which I had to work around with the infamous
+            <a href="http://fadshop.net/xsl_mop-up.js">
+                xsl_mop-up.js
+            </a>
+            script by
+            <a href="http://interglacial.com/~sburke/">
+                Sean M. Burke</a>.
+            After that, everything seems to work
+            very well. All not-too-old browsers render this page correctly
+            and both Akregator and Opera accept it as an RSS feed too.
+            </p>
+            <p>
+             Now I have to maintain only one document and automagically
+             have both a webpage and an RSS feed :)
+             </p>
+            ]]>
+        </description>
+    </item>
+
+</channel>
+</rss>
+

Added: trunk/blog/fpm.xsl
===================================================================
--- trunk/blog/fpm.xsl	2008-03-26 17:52:47 UTC (rev 154)
+++ trunk/blog/fpm.xsl	2008-03-30 22:46:02 UTC (rev 155)
@@ -0,0 +1,98 @@
+<?xml version="1.0" encoding="iso-8859-1"?>
+<xsl:stylesheet version="1.0"
+    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
+    xmlns:dc="http://purl.org/dc/elements/1.1/"
+    xmlns:wfw="http://wellformedweb.org/CommentAPI/">
+
+    <xsl:output method="html"/>
+
+    <xsl:template match="/">
+        <html>
+            <head>
+                <title><xsl:value-of select="rss/channel/title"/></title>
+                <link rel="stylesheet" type="text/css" href="default.css"/>
+                <script language="javascript" src="xsl_mop-up.js"/>
+            </head>
+            <body onload="go_decoding();">
+                <div id="cometestme" style="display:none;">
+                    <xsl:text disable-output-escaping="yes" >&amp;amp;</xsl:text>
+                </div>
+                <a name="0"/>
+                <div class="heading">
+                    <div class="headingdescription">
+                        <xsl:value-of select="rss/channel/description"/>
+                    </div>
+                    <div class="headingtitle">
+                        <b>
+                            <a href="{rss/channel/link}">
+                                <xsl:value-of select="rss/channel/title"/>
+                        </a>
+                    </b>
+                    </div>
+                </div>
+                <xsl:for-each select="rss/channel/item">
+                    <div class="item">
+                        <a name="{position()}"/>
+                        <xsl:variable name="storylink" select="link"/>
+                        <a name="{substring($storylink,2)}"/>
+                        <div class="itemtitle">
+                            <a href="{link}">
+                                <b><xsl:value-of select="title"/></b>
+                            </a>
+                        </div>
+                        <table class="itemauthordate">
+                            <tr>
+                                <td>
+                        <div class="itemauthor">
+                            by
+                            <xsl:value-of select="author"/>
+                            <xsl:value-of select="dc:creator"/>
+                        </div>
+                                </td>
+                                <td>
+                        <div class="itemdate">
+                            <xsl:value-of select="pubDate"/>
+                        </div>
+                                </td>
+                            </tr>
+                        </table>
+                        <div class="itemdescription" name="decodeable">
+                            <xsl:value-of select="description" disable-output-escaping="yes"/>
+                        </div>
+                        <div class="linkbar">
+                            <a href="#0">top</a>
+                            <a href="{link}">
+                                | full story
+                            </a>
+                            <a href="mailto:ivop at free.fr">
+                                | e-mail
+                            </a>
+                        </div>
+                    </div>
+                </xsl:for-each>
+                <div class="toc">
+                    <p>
+                        <a href="test.xml">
+                            <img src="feed.png" alt="[feed]"/>
+                            RSS Feed
+                        </a>
+                    </p>
+                    <b> contents </b>
+                    <p/>
+                    <ul>
+                        <xsl:for-each select="rss/channel/item">
+                            <li>
+                                <a href="{link}">
+                                    <b><xsl:value-of select="title"/></b>
+                                </a>
+                            </li>
+                        </xsl:for-each>
+                    </ul>
+                </div>
+                <div class="logo">
+                    <img src="01101011.png"/>
+                </div>
+            </body>
+        </html>
+    </xsl:template>
+</xsl:stylesheet>

Added: trunk/blog/xsl_mop-up.js
===================================================================
--- trunk/blog/xsl_mop-up.js	2008-03-26 17:52:47 UTC (rev 154)
+++ trunk/blog/xsl_mop-up.js	2008-03-30 22:46:02 UTC (rev 155)
@@ -0,0 +1,78 @@
+
+// A workaround for XSL-to-XHTML systems that don't
+//  implement XSL 'disable-output-escaping="yes"'.
+//
+// sburke at cpan.org, Sean M. Burke.
+//  - I hereby release this JavaScript code to the public domain.
+
+var is_decoding;
+var DEBUG = 0;
+
+function complaining (s) { alert(s);  return s; }
+
+if(!(   document.getElementById && document.getElementsByName))
+ throw complaining("Your browser is too old to render this page properly."
+  + "  Consider going to getfirefox.com to upgrade.");
+
+function check_decoding () {
+  var d = document.getElementById('cometestme');
+  if(!d) {
+    throw complaining("Can't find an id='cometestme' element?");
+  } else if(!('textContent' in d)) {
+    // It's a browser with a halfassed DOM implementation (like IE6)
+    // that doesn't implement textContent!  Assume that if it's that
+    // dumb, it probably doesn't implement disable-content-encoding.
+
+  } else {
+    ampy = d.textContent;
+    if(DEBUG > 1) { alert("Got " + ampy); }
+
+    if(ampy == undefined) throw complaining("'cometestme' element has undefined text content?!");
+    if(ampy == ''       ) throw complaining("'cometestme' element has empty text content?!"    );
+
+    if      (ampy == "\x26"	) { is_decoding =  true; }
+    else if (ampy == "\x26amp;" ) { is_decoding = false; }
+    else		     { throw complaining('Insane value: "' + ampy + '"!'); }
+  }
+
+  var msg =
+   (is_decoding == undefined) ? "I can't tell whether the XSL processor supports disable-content-encoding!D"
+   : is_decoding ? "The XSL processor DOES support disable-content-encoding"
+   : "The XSL processor does NOT support disable-content-encoding"
+  ;
+  if(DEBUG) alert(msg);
+  return msg;
+}
+
+
+function go_decoding () {
+  check_decoding();
+
+  if(is_decoding) {
+    DEBUG && alert("No work needs doing -- already decoded!");
+    return;
+  }
+
+  var to_decode = document.getElementsByName('decodeable');
+  if(!( to_decode && to_decode.length )) {
+    DEBUG && alert("No work needs doing -- no elements to decode!");
+    return;
+  }
+
+
+  var s;
+  for(var i = to_decode.length - 1; i >= 0; i--) { 
+    s = to_decode[i].textContent;
+
+    if(
+      s == undefined ||
+      (s.indexOf('&') == -1 && s.indexOf('<') == -1)
+    ) {
+      // the null or markupless element needs no reworking
+    } else {
+      to_decode[i].innerHTML = s;  // that's the magic
+    }
+  }
+
+  return;
+}



